<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html><head>
<title>Static Call Graph - [.\obj\Example1.axf]</title></head>
<body><HR>
<H1>Static Call Graph for image .\obj\Example1.axf</H1><HR>
<BR><P>#&#060CALLGRAPH&#062# ARM Linker, 4.1 [Build 894]: Last Updated: Fri May 18 12:08:11 2012
<BR><P>
<H3>Maximum Stack Usage =       1496 bytes + Unknown(Functions without stacksize, Cycles, Untraceable Function Pointers)</H3><H3>
Call chain for Maximum Stack Depth:</H3>
std::basic_filebuf&lang;char, std::char_traits&lang;char&rang;&rang;::sync() &rArr; std::use_facet&lang;std::codecvt&lang;char, char, std::__mbstate_t&rang;&rang;(const std::locale&) &rArr; std::locale::_C_use_facet(const std::locale::id&, bool, int, __rw::__rw_facet_base*(*)(int, const char*, unsigned)) const &rArr; std::locale::_C_make_facet(const std::locale::id&, bool, int, __rw::__rw_facet_base*(*)(int, const char*, unsigned)) const &rArr; __rw::__rw_throw(int, ...) &rArr; std::__rw_exception::_C_vformat(int, std::__va_list) &rArr; __rw::__rw_vfmatstr(char*, unsigned, int, std::__va_list) &rArr; std::locale::locale() &rArr; std::locale::_C_init() &rArr; __rw::__rw_locale_imp::__rw_locale_imp(const char*, unsigned, unsigned) &rArr; __aeabi_vec_new_cookie &rArr; __cxa_vec_new &rArr; __ARM_array_new_general &rArr; __cxa_rethrow &rArr; _Unwind_RaiseException &rArr; __ARM_Unwind_RaiseException &rArr; malloc &rArr; _malloc_internal &rArr; __Heap_Full &rArr; __Heap_ProvideMemory &rArr; _free_internal &rArr; _mutex_release
<P>
<H3>
Functions with no stack information
</H3><UL>
 <LI><a href="#[1c]">SysTick_Handler</a>
 <LI><a href="#[1c9]">__user_initial_stackheap</a>
</UL>
</UL>
<P>
<H3>
Mutually Recursive functions
</H3> <LI><a href="#[14]">NMI_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[14]">NMI_Handler</a><BR>
 <LI><a href="#[15]">HardFault_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[15]">HardFault_Handler</a><BR>
 <LI><a href="#[16]">MemManage_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[16]">MemManage_Handler</a><BR>
 <LI><a href="#[17]">BusFault_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[17]">BusFault_Handler</a><BR>
 <LI><a href="#[18]">UsageFault_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[18]">UsageFault_Handler</a><BR>
 <LI><a href="#[1a]">DebugMon_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[1a]">DebugMon_Handler</a><BR>
 <LI><a href="#[1d]">DEF_IRQHandler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[1d]">DEF_IRQHandler</a><BR>
 <LI><a href="#[364]">std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;::replace(unsigned, unsigned, const char*, unsigned, unsigned, unsigned)</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[284]">__rw::__rw_throw(int, ...)</a><BR>
 <LI><a href="#[28e]">__rw::__rw_allocate(unsigned, int)</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[284]">__rw::__rw_throw(int, ...)</a><BR>
 <LI><a href="#[361]">std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;::_C_getRep(unsigned, unsigned)</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[284]">__rw::__rw_throw(int, ...)</a><BR>
 <LI><a href="#[27d]">derived_to_base_conversion_r(void*, void**, const std::type_info*, const std::type_info*, unsigned, int*, int, const std::type_info**, a_result_virtuality*, int*)</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[27d]">derived_to_base_conversion_r(void*, void**, const std::type_info*, const std::type_info*, unsigned, int*, int, const std::type_info**, a_result_virtuality*, int*)</a><BR>
 <LI><a href="#[33f]">__rw::__rb_tree&lang;int, std::pair&lang;const int, int&rang;, __rw::__select1st&lang;std::pair&lang;const int, int&rang;, int&rang;, std::less&lang;int&rang;, std::allocator&lang;std::pair&lang;const int, int&rang;&rang;&rang;::_C_erase(__rw::__rw_rb_tree_node&lang;std::allocator&lang;std::pair&lang;const int, int&rang;&rang;, std::pair&lang;const int, int&rang;, int, __rw::__select1st&lang;std::pair&lang;const int, int&rang;, int&rang;&rang;*)</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[33f]">__rw::__rb_tree&lang;int, std::pair&lang;const int, int&rang;, __rw::__select1st&lang;std::pair&lang;const int, int&rang;, int&rang;, std::less&lang;int&rang;, std::allocator&lang;std::pair&lang;const int, int&rang;&rang;&rang;::_C_erase(__rw::__rw_rb_tree_node&lang;std::allocator&lang;std::pair&lang;const int, int&rang;&rang;, std::pair&lang;const int, int&rang;, int, __rw::__select1st&lang;std::pair&lang;const int, int&rang;, int&rang;&rang;*)</a><BR>
</UL>
<P>
<H3>
Function Pointers
</H3><UL>
 <LI><a href="#[3c]">&lang;Func5&rang;</a> from locale.o(i.<Func5>) referenced from locale.o(i._ZN4__rw15__rw_locale_impC1EPKcjj)
 <LI><a href="#[3c]">&lang;Func5&rang;</a> from locale.o(i.<Func5>) referenced from locale.o(i._ZN4__rw15__rw_locale_impC1ERKS0_PKcj)
 <LI><a href="#[3c]">&lang;Func5&rang;</a> from locale.o(i.<Func5>) referenced from locale.o(i._ZNSt6localeC1ERKS_PKci)
 <LI><a href="#[17]">BusFault_Handler</a> from startup_armcm3.o(.text) referenced from startup_armcm3.o(RESET)
 <LI><a href="#[1d]">DEF_IRQHandler</a> from startup_armcm3.o(.text) referenced from startup_armcm3.o(RESET)
 <LI><a href="#[1a]">DebugMon_Handler</a> from startup_armcm3.o(.text) referenced from startup_armcm3.o(RESET)
 <LI><a href="#[2f]">EIT_comparator</a> from unwinder.o(.text) referenced from unwinder.o(.text)
 <LI><a href="#[15]">HardFault_Handler</a> from startup_armcm3.o(.text) referenced from startup_armcm3.o(RESET)
 <LI><a href="#[16]">MemManage_Handler</a> from startup_armcm3.o(.text) referenced from startup_armcm3.o(RESET)
 <LI><a href="#[14]">NMI_Handler</a> from startup_armcm3.o(.text) referenced from startup_armcm3.o(RESET)
 <LI><a href="#[1b]">PendSV_Handler</a> from hal_cm3.o(.emb_text) referenced from startup_armcm3.o(RESET)
 <LI><a href="#[13]">Reset_Handler</a> from startup_armcm3.o(.text) referenced from startup_armcm3.o(RESET)
 <LI><a href="#[19]">SVC_Handler</a> from hal_cm3.o(.emb_text) referenced from startup_armcm3.o(RESET)
 <LI><a href="#[1c]">SysTick_Handler</a> from hal_cm3.o(.emb_text) referenced from startup_armcm3.o(RESET)
 <LI><a href="#[20]">SystemInit</a> from system_armcm3.o(.text) referenced from startup_armcm3.o(.text)
 <LI><a href="#[18]">UsageFault_Handler</a> from startup_armcm3.o(.text) referenced from startup_armcm3.o(RESET)
 <LI><a href="#[4f]">tbc_downcast(void*, const std::type_info*, a_base_class_traversal_block*, __cxxabiv1::__base_class_type_info*)</a> from rtti.o(i._Z12tbc_downcastPvPKSt9type_infoP28a_base_class_traversal_blockPN10__cxxabiv122__base_class_type_infoE) referenced from rtti.o(i.__dynamic_cast)
 <LI><a href="#[50]">tbc_post_downcast(void*, const std::type_info*, a_base_class_traversal_block*, __cxxabiv1::__base_class_type_info*)</a> from rtti.o(i._Z17tbc_post_downcastPvPKSt9type_infoP28a_base_class_traversal_blockPN10__cxxabiv122__base_class_type_infoE) referenced from rtti.o(i.__dynamic_cast)
 <LI><a href="#[4d]">__default_new_handler()</a> from newhandler.o(i._Z21__default_new_handlerv) referenced from new.o(i._Znwj)
 <LI><a href="#[2a]">armcpp_exception_cleanup(_Unwind_Reason_Code, _Unwind_Control_Block*)</a> from arm_exceptions_throw.o(.text) referenced from arm_exceptions_throw.o(.text)
 <LI><a href="#[36]">__default_terminate_handler()</a> from arm_exceptions_globs.o(.text) referenced from arm_exceptions_globs.o(.text)
 <LI><a href="#[59]">threadX(const void*)</a> from main.o(.text) referenced from main.o(.constdata)
 <LI><a href="#[5c]">__rw::__rw_facet_base::_C_initfacet(const std::locale&)</a> from char.o(i._ZN4__rw15__rw_facet_base12_C_initfacetERKSt6locale) referenced from ios.o(.constdata__ZTVNSt6locale5facetE)
 <LI><a href="#[5c]">__rw::__rw_facet_base::_C_initfacet(const std::locale&)</a> from char.o(i._ZN4__rw15__rw_facet_base12_C_initfacetERKSt6locale) referenced from char.o(.constdata__ZTVSt14collate_bynameIcE)
 <LI><a href="#[5c]">__rw::__rw_facet_base::_C_initfacet(const std::locale&)</a> from char.o(i._ZN4__rw15__rw_facet_base12_C_initfacetERKSt6locale) referenced from ios.o(.constdata__ZTVSt5ctypeIwE)
 <LI><a href="#[5c]">__rw::__rw_facet_base::_C_initfacet(const std::locale&)</a> from char.o(i._ZN4__rw15__rw_facet_base12_C_initfacetERKSt6locale) referenced from ios.o(.constdata__ZTVSt7codecvtIccSt11__mbstate_tE)
 <LI><a href="#[5c]">__rw::__rw_facet_base::_C_initfacet(const std::locale&)</a> from char.o(i._ZN4__rw15__rw_facet_base12_C_initfacetERKSt6locale) referenced from ios.o(.constdata__ZTVSt7codecvtIwcSt11__mbstate_tE)
 <LI><a href="#[5c]">__rw::__rw_facet_base::_C_initfacet(const std::locale&)</a> from char.o(i._ZN4__rw15__rw_facet_base12_C_initfacetERKSt6locale) referenced from rwstdexcept.o(.constdata__ZTVSt8messagesIcE)
 <LI><a href="#[54]">__rw::__rw_facet_maker&lang;std::ctype&lang;char&rang;&rang;::_C_maker_func(int, const char*, unsigned)</a> from main.o(t._ZN4__rw16__rw_facet_makerISt5ctypeIcEE13_C_maker_funcEiPKcj) referenced from rwstdexcept.o(t._ZNKSt8messagesIcE6do_getEiiiRKSs)
 <LI><a href="#[54]">__rw::__rw_facet_maker&lang;std::ctype&lang;char&rang;&rang;::_C_maker_func(int, const char*, unsigned)</a> from main.o(t._ZN4__rw16__rw_facet_makerISt5ctypeIcEE13_C_maker_funcEiPKcj) referenced from main.o(t._ZNKSt9basic_iosIcSt11char_traitsIcEE5widenEc)
 <LI><a href="#[54]">__rw::__rw_facet_maker&lang;std::ctype&lang;char&rang;&rang;::_C_maker_func(int, const char*, unsigned)</a> from main.o(t._ZN4__rw16__rw_facet_makerISt5ctypeIcEE13_C_maker_funcEiPKcj) referenced from ios.o(t._ZNSt9basic_iosIcSt11char_traitsIcEE4initEPSt15basic_streambufIcS1_E)
 <LI><a href="#[55]">__rw::__rw_facet_maker&lang;std::ctype&lang;wchar_t&rang;&rang;::_C_maker_func(int, const char*, unsigned)</a> from ios.o(t._ZN4__rw16__rw_facet_makerISt5ctypeIwEE13_C_maker_funcEiPKcj) referenced from ios.o(t._ZNSt9basic_iosIwSt11char_traitsIwEE4initEPSt15basic_streambufIwS1_E)
 <LI><a href="#[56]">__rw::__rw_facet_maker&lang;std::codecvt&lang;char, char, std::__mbstate_t&rang;&rang;::_C_maker_func(int, const char*, unsigned)</a> from ios.o(t._ZN4__rw16__rw_facet_makerISt7codecvtIccSt11__mbstate_tEE13_C_maker_funcEiPKcj) referenced from ios.o(t._ZSt9use_facetISt7codecvtIccSt11__mbstate_tEERKT_RKSt6locale)
 <LI><a href="#[57]">__rw::__rw_facet_maker&lang;std::codecvt&lang;wchar_t, char, std::__mbstate_t&rang;&rang;::_C_maker_func(int, const char*, unsigned)</a> from ios.o(t._ZN4__rw16__rw_facet_makerISt7codecvtIwcSt11__mbstate_tEE13_C_maker_funcEiPKcj) referenced from ios.o(t._ZSt9use_facetISt7codecvtIwcSt11__mbstate_tEERKT_RKSt6locale)
 <LI><a href="#[51]">__rw::__rw_locale_vector&lang;__rw::__rw_cat*&rang;::~__rw_locale_vector()</a> from rwcats.o(t._ZN4__rw18__rw_locale_vectorIPNS_8__rw_catEED1Ev) referenced from rwcats.o(i.__sti___10_rwcats_cpp)
 <LI><a href="#[4c]">__rw::__rw_locale_vector&lang;std::__rw_open_cat_data&rang;::~__rw_locale_vector()</a> from messages.o(t._ZN4__rw18__rw_locale_vectorISt18__rw_open_cat_dataED1Ev) referenced from messages.o(i._ZSt13__rw_get_catsv)
 <LI><a href="#[d9]">__rw::__rw_throw_exception(int, char*)</a> from rwthrowproc_impl.o(i._ZN4__rw20__rw_throw_exceptionEiPc) referenced from rwthrowproc.o(.data)
 <LI><a href="#[35]">__ARM::default_unexpected_handler()</a> from arm_exceptions_unexpected.o(.text) referenced from arm_exceptions_globs.o(.text)
 <LI><a href="#[5e]">std::__rw_exception::what() const</a> from rwstdexcept.o(i._ZNKSt14__rw_exception4whatEv) referenced from rwthrowproc_impl.o(.constdata__ZTVNSt8ios_base10badbit_setE)
 <LI><a href="#[5e]">std::__rw_exception::what() const</a> from rwstdexcept.o(i._ZNKSt14__rw_exception4whatEv) referenced from rwthrowproc_impl.o(.constdata__ZTVNSt8ios_base10eofbit_setE)
 <LI><a href="#[5e]">std::__rw_exception::what() const</a> from rwstdexcept.o(i._ZNKSt14__rw_exception4whatEv) referenced from rwthrowproc_impl.o(.constdata__ZTVNSt8ios_base11failbit_setE)
 <LI><a href="#[5e]">std::__rw_exception::what() const</a> from rwstdexcept.o(i._ZNKSt14__rw_exception4whatEv) referenced from rwthrowproc_impl.o(.constdata__ZTVNSt8ios_base7failureE)
 <LI><a href="#[5e]">std::__rw_exception::what() const</a> from rwstdexcept.o(i._ZNKSt14__rw_exception4whatEv) referenced from rwthrowproc_impl.o(.constdata__ZTVSt11logic_error)
 <LI><a href="#[5e]">std::__rw_exception::what() const</a> from rwstdexcept.o(i._ZNKSt14__rw_exception4whatEv) referenced from rwthrowproc_impl.o(.constdata__ZTVSt11range_error)
 <LI><a href="#[5e]">std::__rw_exception::what() const</a> from rwstdexcept.o(i._ZNKSt14__rw_exception4whatEv) referenced from rwthrowproc_impl.o(.constdata__ZTVSt12domain_error)
 <LI><a href="#[5e]">std::__rw_exception::what() const</a> from rwstdexcept.o(i._ZNKSt14__rw_exception4whatEv) referenced from rwthrowproc_impl.o(.constdata__ZTVSt12length_error)
 <LI><a href="#[5e]">std::__rw_exception::what() const</a> from rwstdexcept.o(i._ZNKSt14__rw_exception4whatEv) referenced from rwthrowproc_impl.o(.constdata__ZTVSt12out_of_range)
 <LI><a href="#[5e]">std::__rw_exception::what() const</a> from rwstdexcept.o(i._ZNKSt14__rw_exception4whatEv) referenced from rwthrowproc_impl.o(.constdata__ZTVSt13runtime_error)
 <LI><a href="#[5e]">std::__rw_exception::what() const</a> from rwstdexcept.o(i._ZNKSt14__rw_exception4whatEv) referenced from rwstdexcept.o(.constdata__ZTVSt14__rw_exception)
 <LI><a href="#[5e]">std::__rw_exception::what() const</a> from rwstdexcept.o(i._ZNKSt14__rw_exception4whatEv) referenced from rwthrowproc_impl.o(.constdata__ZTVSt14overflow_error)
 <LI><a href="#[5e]">std::__rw_exception::what() const</a> from rwstdexcept.o(i._ZNKSt14__rw_exception4whatEv) referenced from rwthrowproc_impl.o(.constdata__ZTVSt15underflow_error)
 <LI><a href="#[5e]">std::__rw_exception::what() const</a> from rwstdexcept.o(i._ZNKSt14__rw_exception4whatEv) referenced from rwthrowproc_impl.o(.constdata__ZTVSt16invalid_argument)
 <LI><a href="#[9f]">std::collate_byname&lang;char&rang;::do_compare(const char*, const char*, const char*, const char*) const</a> from char.o(i._ZNKSt14collate_bynameIcE10do_compareEPKcS2_S2_S2_) referenced from char.o(.constdata__ZTVSt14collate_bynameIcE)
 <LI><a href="#[a0]">std::collate_byname&lang;char&rang;::do_transform(const char*, const char*) const</a> from char.o(i._ZNKSt14collate_bynameIcE12do_transformEPKcS2_) referenced from char.o(.constdata__ZTVSt14collate_bynameIcE)
 <LI><a href="#[71]">std::ctype&lang;char&rang;::do_tolower(char*, const char*) const</a> from char.o(i._ZNKSt5ctypeIcE10do_tolowerEPcPKc) referenced from char.o(.constdata__ZTVSt12ctype_bynameIcE)
 <LI><a href="#[71]">std::ctype&lang;char&rang;::do_tolower(char*, const char*) const</a> from char.o(i._ZNKSt5ctypeIcE10do_tolowerEPcPKc) referenced from char.o(.constdata__ZTVSt5ctypeIcE)
 <LI><a href="#[73]">std::ctype&lang;char&rang;::do_tolower(char) const</a> from char.o(i._ZNKSt5ctypeIcE10do_tolowerEc) referenced from char.o(.constdata__ZTVSt12ctype_bynameIcE)
 <LI><a href="#[73]">std::ctype&lang;char&rang;::do_tolower(char) const</a> from char.o(i._ZNKSt5ctypeIcE10do_tolowerEc) referenced from char.o(.constdata__ZTVSt5ctypeIcE)
 <LI><a href="#[70]">std::ctype&lang;char&rang;::do_toupper(char*, const char*) const</a> from char.o(i._ZNKSt5ctypeIcE10do_toupperEPcPKc) referenced from char.o(.constdata__ZTVSt12ctype_bynameIcE)
 <LI><a href="#[70]">std::ctype&lang;char&rang;::do_toupper(char*, const char*) const</a> from char.o(i._ZNKSt5ctypeIcE10do_toupperEPcPKc) referenced from char.o(.constdata__ZTVSt5ctypeIcE)
 <LI><a href="#[72]">std::ctype&lang;char&rang;::do_toupper(char) const</a> from char.o(i._ZNKSt5ctypeIcE10do_toupperEc) referenced from char.o(.constdata__ZTVSt12ctype_bynameIcE)
 <LI><a href="#[72]">std::ctype&lang;char&rang;::do_toupper(char) const</a> from char.o(i._ZNKSt5ctypeIcE10do_toupperEc) referenced from char.o(.constdata__ZTVSt5ctypeIcE)
 <LI><a href="#[74]">std::ctype&lang;char&rang;::do_widen(char) const</a> from char.o(i._ZNKSt5ctypeIcE8do_widenEc) referenced from char.o(.constdata__ZTVSt12ctype_bynameIcE)
 <LI><a href="#[74]">std::ctype&lang;char&rang;::do_widen(char) const</a> from char.o(i._ZNKSt5ctypeIcE8do_widenEc) referenced from char.o(.constdata__ZTVSt5ctypeIcE)
 <LI><a href="#[ba]">std::ctype&lang;wchar_t&rang;::do_widen(char) const</a> from ios.o(i._ZNKSt5ctypeIwE8do_widenEc) referenced from ios.o(.constdata__ZTVSt5ctypeIwE)
 <LI><a href="#[be]">std::codecvt&lang;char, char, std::__mbstate_t&rang;::do_unshift(std::__mbstate_t&, char*, char*, char*&) const</a> from ios.o(i._ZNKSt7codecvtIccSt11__mbstate_tE10do_unshiftERS0_PcS3_RS3_) referenced from ios.o(.constdata__ZTVSt7codecvtIccSt11__mbstate_tE)
 <LI><a href="#[bf]">std::codecvt&lang;char, char, std::__mbstate_t&rang;::do_encoding() const</a> from ios.o(i._ZNKSt7codecvtIccSt11__mbstate_tE11do_encodingEv) referenced from ios.o(.constdata__ZTVSt7codecvtIccSt11__mbstate_tE)
 <LI><a href="#[c1]">std::codecvt&lang;char, char, std::__mbstate_t&rang;::do_max_length() const</a> from ios.o(i._ZNKSt7codecvtIccSt11__mbstate_tE13do_max_lengthEv) referenced from ios.o(.constdata__ZTVSt7codecvtIccSt11__mbstate_tE)
 <LI><a href="#[c0]">std::codecvt&lang;char, char, std::__mbstate_t&rang;::do_always_noconv() const</a> from ios.o(i._ZNKSt7codecvtIccSt11__mbstate_tE16do_always_noconvEv) referenced from ios.o(.constdata__ZTVSt7codecvtIccSt11__mbstate_tE)
 <LI><a href="#[bd]">std::codecvt&lang;char, char, std::__mbstate_t&rang;::do_in(std::__mbstate_t&, const char*, const char*, const char*&, char*, char*, char*&) const</a> from ios.o(i._ZNKSt7codecvtIccSt11__mbstate_tE5do_inERS0_PKcS4_RS4_PcS6_RS6_) referenced from ios.o(.constdata__ZTVSt7codecvtIccSt11__mbstate_tE)
 <LI><a href="#[bc]">std::codecvt&lang;char, char, std::__mbstate_t&rang;::do_out(std::__mbstate_t&, const char*, const char*, const char*&, char*, char*, char*&) const</a> from ios.o(i._ZNKSt7codecvtIccSt11__mbstate_tE6do_outERS0_PKcS4_RS4_PcS6_RS6_) referenced from ios.o(.constdata__ZTVSt7codecvtIccSt11__mbstate_tE)
 <LI><a href="#[c5]">std::codecvt&lang;wchar_t, char, std::__mbstate_t&rang;::do_unshift(std::__mbstate_t&, char*, char*, char*&) const</a> from ios.o(i._ZNKSt7codecvtIwcSt11__mbstate_tE10do_unshiftERS0_PcS3_RS3_) referenced from ios.o(.constdata__ZTVSt7codecvtIwcSt11__mbstate_tE)
 <LI><a href="#[c7]">std::codecvt&lang;wchar_t, char, std::__mbstate_t&rang;::do_encoding() const</a> from ios.o(i._ZNKSt7codecvtIwcSt11__mbstate_tE11do_encodingEv) referenced from ios.o(.constdata__ZTVSt7codecvtIwcSt11__mbstate_tE)
 <LI><a href="#[c8]">std::codecvt&lang;wchar_t, char, std::__mbstate_t&rang;::do_max_length() const</a> from ios.o(i._ZNKSt7codecvtIwcSt11__mbstate_tE13do_max_lengthEv) referenced from ios.o(.constdata__ZTVSt7codecvtIwcSt11__mbstate_tE)
 <LI><a href="#[c6]">std::codecvt&lang;wchar_t, char, std::__mbstate_t&rang;::do_always_noconv() const</a> from ios.o(i._ZNKSt7codecvtIwcSt11__mbstate_tE16do_always_noconvEv) referenced from ios.o(.constdata__ZTVSt7codecvtIwcSt11__mbstate_tE)
 <LI><a href="#[c4]">std::codecvt&lang;wchar_t, char, std::__mbstate_t&rang;::do_in(std::__mbstate_t&, const char*, const char*, const char*&, wchar_t*, wchar_t*, wchar_t*&) const</a> from ios.o(i._ZNKSt7codecvtIwcSt11__mbstate_tE5do_inERS0_PKcS4_RS4_PwS6_RS6_) referenced from ios.o(.constdata__ZTVSt7codecvtIwcSt11__mbstate_tE)
 <LI><a href="#[c3]">std::codecvt&lang;wchar_t, char, std::__mbstate_t&rang;::do_out(std::__mbstate_t&, const wchar_t*, const wchar_t*, const wchar_t*&, char*, char*, char*&) const</a> from ios.o(i._ZNKSt7codecvtIwcSt11__mbstate_tE6do_outERS0_PKwS4_RS4_PcS6_RS6_) referenced from ios.o(.constdata__ZTVSt7codecvtIwcSt11__mbstate_tE)
 <LI><a href="#[cf]">std::messages&lang;char&rang;::do_get(int, int, int, const std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;&) const</a> from rwstdexcept.o(t._ZNKSt8messagesIcE6do_getEiiiRKSs) referenced from rwstdexcept.o(.constdata__ZTVSt8messagesIcE)
 <LI><a href="#[ce]">std::messages&lang;char&rang;::do_open(const std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;&, const std::locale&) const</a> from rwstdexcept.o(t._ZNKSt8messagesIcE7do_openERKSsRKSt6locale) referenced from rwstdexcept.o(.constdata__ZTVSt8messagesIcE)
 <LI><a href="#[63]">std::basic_istream&lang;char, std::char_traits&lang;char&rang;&rang;::~basic_istream__deallocating()</a> from ios.o(i._ZNSiD0Ev) referenced from ios.o(.constdata__ZTVSi)
 <LI><a href="#[62]">std::basic_istream&lang;char, std::char_traits&lang;char&rang;&rang;::~basic_istream()</a> from ios.o(i._ZNSiD1Ev) referenced from ios.o(.constdata__ZTVSi)
 <LI><a href="#[67]">std::basic_ostream&lang;char, std::char_traits&lang;char&rang;&rang;::~basic_ostream__deallocating()</a> from ios.o(i._ZNSoD0Ev) referenced from ios.o(.constdata__ZTVSo)
 <LI><a href="#[66]">std::basic_ostream&lang;char, std::char_traits&lang;char&rang;&rang;::~basic_ostream()</a> from ios.o(i._ZNSoD1Ev) referenced from ios.o(.constdata__ZTVSo)
 <LI><a href="#[28]">std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;::~basic_string()</a> from main.o(t._ZNSsD1Ev) referenced from main.o(.text)
 <LI><a href="#[28]">std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;::~basic_string()</a> from main.o(t._ZNSsD1Ev) referenced from locale.o(i._ZN4__rw15__rw_locale_impC1EPKcjj)
 <LI><a href="#[28]">std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;::~basic_string()</a> from main.o(t._ZNSsD1Ev) referenced from locale.o(i._ZN4__rw15__rw_locale_impC1ERKS0_PKcj)
 <LI><a href="#[28]">std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;::~basic_string()</a> from main.o(t._ZNSsD1Ev) referenced from locale.o(i._ZNSt6localeC1ERKS_PKci)
 <LI><a href="#[28]">std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;::~basic_string()</a> from main.o(t._ZNSsD1Ev) referenced from main.o(t._ZN4__rw18__rw_locale_vectorISsED1Ev)
 <LI><a href="#[6a]">std::bad_typeid::~bad_typeid__deallocating()</a> from bad_typeid.o(i._ZNSt10bad_typeidD0Ev) referenced from bad_typeid.o(.constdata__ZTVSt10bad_typeid)
 <LI><a href="#[33]">std::bad_typeid::~bad_typeid()</a> from bad_typeid.o(i._ZNSt10bad_typeidD1Ev) referenced from bad_typeid.o(.constdata__ZTVSt10bad_typeid)
 <LI><a href="#[33]">std::bad_typeid::~bad_typeid()</a> from bad_typeid.o(i._ZNSt10bad_typeidD1Ev) referenced from arm_exceptions_bad_typeid.o(.text)
 <LI><a href="#[6b]">std::logic_error::~logic_error__deallocating()</a> from rwthrowproc_impl.o(i._ZNSt11logic_errorD0Ev) referenced from rwthrowproc_impl.o(.constdata__ZTVSt11logic_error)
 <LI><a href="#[3e]">std::logic_error::~logic_error()</a> from rwthrowproc_impl.o(i._ZNSt11logic_errorD1Ev) referenced from rwthrowproc_impl.o(.constdata__ZTVSt11logic_error)
 <LI><a href="#[3e]">std::logic_error::~logic_error()</a> from rwthrowproc_impl.o(i._ZNSt11logic_errorD1Ev) referenced from rwthrowproc_impl.o(i._ZN4__rw20__rw_throw_exceptionEiPc)
 <LI><a href="#[6c]">std::range_error::~range_error__deallocating()</a> from rwthrowproc_impl.o(i._ZNSt11range_errorD0Ev) referenced from rwthrowproc_impl.o(.constdata__ZTVSt11range_error)
 <LI><a href="#[44]">std::range_error::~range_error()</a> from rwthrowproc_impl.o(i._ZNSt11range_errorD1Ev) referenced from rwthrowproc_impl.o(.constdata__ZTVSt11range_error)
 <LI><a href="#[44]">std::range_error::~range_error()</a> from rwthrowproc_impl.o(i._ZNSt11range_errorD1Ev) referenced from rwthrowproc_impl.o(i._ZN4__rw20__rw_throw_exceptionEiPc)
 <LI><a href="#[6e]">std::ctype_byname&lang;char&rang;::~ctype_byname__deallocating()</a> from char.o(i._ZNSt12ctype_bynameIcED0Ev) referenced from char.o(.constdata__ZTVSt12ctype_bynameIcE)
 <LI><a href="#[6d]">std::ctype_byname&lang;char&rang;::~ctype_byname()</a> from char.o(i._ZNSt12ctype_bynameIcED1Ev) referenced from char.o(.constdata__ZTVSt12ctype_bynameIcE)
 <LI><a href="#[75]">std::domain_error::~domain_error__deallocating()</a> from rwthrowproc_impl.o(i._ZNSt12domain_errorD0Ev) referenced from rwthrowproc_impl.o(.constdata__ZTVSt12domain_error)
 <LI><a href="#[3f]">std::domain_error::~domain_error()</a> from rwthrowproc_impl.o(i._ZNSt12domain_errorD1Ev) referenced from rwthrowproc_impl.o(.constdata__ZTVSt12domain_error)
 <LI><a href="#[3f]">std::domain_error::~domain_error()</a> from rwthrowproc_impl.o(i._ZNSt12domain_errorD1Ev) referenced from rwthrowproc_impl.o(i._ZN4__rw20__rw_throw_exceptionEiPc)
 <LI><a href="#[76]">std::length_error::~length_error__deallocating()</a> from rwthrowproc_impl.o(i._ZNSt12length_errorD0Ev) referenced from rwthrowproc_impl.o(.constdata__ZTVSt12length_error)
 <LI><a href="#[41]">std::length_error::~length_error()</a> from rwthrowproc_impl.o(i._ZNSt12length_errorD1Ev) referenced from rwthrowproc_impl.o(.constdata__ZTVSt12length_error)
 <LI><a href="#[41]">std::length_error::~length_error()</a> from rwthrowproc_impl.o(i._ZNSt12length_errorD1Ev) referenced from rwthrowproc_impl.o(i._ZN4__rw20__rw_throw_exceptionEiPc)
 <LI><a href="#[77]">std::out_of_range::~out_of_range__deallocating()</a> from rwthrowproc_impl.o(i._ZNSt12out_of_rangeD0Ev) referenced from rwthrowproc_impl.o(.constdata__ZTVSt12out_of_range)
 <LI><a href="#[42]">std::out_of_range::~out_of_range()</a> from rwthrowproc_impl.o(i._ZNSt12out_of_rangeD1Ev) referenced from rwthrowproc_impl.o(.constdata__ZTVSt12out_of_range)
 <LI><a href="#[42]">std::out_of_range::~out_of_range()</a> from rwthrowproc_impl.o(i._ZNSt12out_of_rangeD1Ev) referenced from rwthrowproc_impl.o(i._ZN4__rw20__rw_throw_exceptionEiPc)
 <LI><a href="#[78]">std::bad_exception::~bad_exception__deallocating()</a> from bad_exception_dtor.o(i._ZNSt13bad_exceptionD0Ev) referenced from bad_exception_dtor.o(.constdata__ZTVSt13bad_exception)
 <LI><a href="#[34]">std::bad_exception::~bad_exception()</a> from bad_exception_dtor.o(i._ZNSt13bad_exceptionD1Ev) referenced from bad_exception_dtor.o(.constdata__ZTVSt13bad_exception)
 <LI><a href="#[34]">std::bad_exception::~bad_exception()</a> from bad_exception_dtor.o(i._ZNSt13bad_exceptionD1Ev) referenced from arm_exceptions_callunex.o(.text)
 <LI><a href="#[34]">std::bad_exception::~bad_exception()</a> from bad_exception_dtor.o(i._ZNSt13bad_exceptionD1Ev) referenced from rwthrowproc_impl.o(i._ZN4__rw20__rw_throw_exceptionEiPc)
 <LI><a href="#[84]">std::basic_filebuf&lang;char, std::char_traits&lang;char&rang;&rang;::sync()</a> from ios.o(t._ZNSt13basic_filebufIcSt11char_traitsIcEE4syncEv) referenced from ios.o(.constdata__ZTVSt13basic_filebufIcSt11char_traitsIcEE)
 <LI><a href="#[80]">std::basic_filebuf&lang;char, std::char_traits&lang;char&rang;&rang;::uflow()</a> from ios.o(t._ZNSt13basic_filebufIcSt11char_traitsIcEE5uflowEv) referenced from ios.o(.constdata__ZTVSt13basic_filebufIcSt11char_traitsIcEE)
 <LI><a href="#[7b]">std::basic_filebuf&lang;char, std::char_traits&lang;char&rang;&rang;::setbuf(char*, long)</a> from ios.o(t._ZNSt13basic_filebufIcSt11char_traitsIcEE6setbufEPcl) referenced from ios.o(.constdata__ZTVSt13basic_filebufIcSt11char_traitsIcEE)
 <LI><a href="#[83]">std::basic_filebuf&lang;char, std::char_traits&lang;char&rang;&rang;::xsputn(const char*, long)</a> from ios.o(t._ZNSt13basic_filebufIcSt11char_traitsIcEE6xsputnEPKcl) referenced from ios.o(.constdata__ZTVSt13basic_filebufIcSt11char_traitsIcEE)
 <LI><a href="#[7c]">std::basic_filebuf&lang;char, std::char_traits&lang;char&rang;&rang;::seekoff(long, std::ios_base::_C_seekdir, int)</a> from ios.o(t._ZNSt13basic_filebufIcSt11char_traitsIcEE7seekoffElNSt8ios_base10_C_seekdirEi) referenced from ios.o(.constdata__ZTVSt13basic_filebufIcSt11char_traitsIcEE)
 <LI><a href="#[7d]">std::basic_filebuf&lang;char, std::char_traits&lang;char&rang;&rang;::seekpos(std::fpos&lang;std::__mbstate_t&rang;, int)</a> from ios.o(t._ZNSt13basic_filebufIcSt11char_traitsIcEE7seekposESt4fposISt11__mbstate_tEi) referenced from ios.o(.constdata__ZTVSt13basic_filebufIcSt11char_traitsIcEE)
 <LI><a href="#[81]">std::basic_filebuf&lang;char, std::char_traits&lang;char&rang;&rang;::overflow(int)</a> from ios.o(t._ZNSt13basic_filebufIcSt11char_traitsIcEE8overflowEi) referenced from ios.o(.constdata__ZTVSt13basic_filebufIcSt11char_traitsIcEE)
 <LI><a href="#[82]">std::basic_filebuf&lang;char, std::char_traits&lang;char&rang;&rang;::pbackfail(int)</a> from ios.o(t._ZNSt13basic_filebufIcSt11char_traitsIcEE9pbackfailEi) referenced from ios.o(.constdata__ZTVSt13basic_filebufIcSt11char_traitsIcEE)
 <LI><a href="#[7e]">std::basic_filebuf&lang;char, std::char_traits&lang;char&rang;&rang;::showmanyc()</a> from ios.o(t._ZNSt13basic_filebufIcSt11char_traitsIcEE9showmanycEv) referenced from ios.o(.constdata__ZTVSt13basic_filebufIcSt11char_traitsIcEE)
 <LI><a href="#[7f]">std::basic_filebuf&lang;char, std::char_traits&lang;char&rang;&rang;::underflow()</a> from ios.o(t._ZNSt13basic_filebufIcSt11char_traitsIcEE9underflowEv) referenced from ios.o(.constdata__ZTVSt13basic_filebufIcSt11char_traitsIcEE)
 <LI><a href="#[7a]">std::basic_filebuf&lang;char, std::char_traits&lang;char&rang;&rang;::~basic_filebuf__deallocating()</a> from ios.o(t._ZNSt13basic_filebufIcSt11char_traitsIcEED0Ev) referenced from ios.o(.constdata__ZTVSt13basic_filebufIcSt11char_traitsIcEE)
 <LI><a href="#[79]">std::basic_filebuf&lang;char, std::char_traits&lang;char&rang;&rang;::~basic_filebuf()</a> from ios.o(t._ZNSt13basic_filebufIcSt11char_traitsIcEED1Ev) referenced from ios.o(.constdata__ZTVSt13basic_filebufIcSt11char_traitsIcEE)
 <LI><a href="#[91]">std::basic_filebuf&lang;wchar_t, std::char_traits&lang;wchar_t&rang;&rang;::sync()</a> from ios.o(t._ZNSt13basic_filebufIwSt11char_traitsIwEE4syncEv) referenced from ios.o(.constdata__ZTVSt13basic_filebufIwSt11char_traitsIwEE)
 <LI><a href="#[8d]">std::basic_filebuf&lang;wchar_t, std::char_traits&lang;wchar_t&rang;&rang;::uflow()</a> from ios.o(t._ZNSt13basic_filebufIwSt11char_traitsIwEE5uflowEv) referenced from ios.o(.constdata__ZTVSt13basic_filebufIwSt11char_traitsIwEE)
 <LI><a href="#[87]">std::basic_filebuf&lang;wchar_t, std::char_traits&lang;wchar_t&rang;&rang;::setbuf(wchar_t*, long)</a> from ios.o(t._ZNSt13basic_filebufIwSt11char_traitsIwEE6setbufEPwl) referenced from ios.o(.constdata__ZTVSt13basic_filebufIwSt11char_traitsIwEE)
 <LI><a href="#[90]">std::basic_filebuf&lang;wchar_t, std::char_traits&lang;wchar_t&rang;&rang;::xsputn(const wchar_t*, long)</a> from ios.o(t._ZNSt13basic_filebufIwSt11char_traitsIwEE6xsputnEPKwl) referenced from ios.o(.constdata__ZTVSt13basic_filebufIwSt11char_traitsIwEE)
 <LI><a href="#[88]">std::basic_filebuf&lang;wchar_t, std::char_traits&lang;wchar_t&rang;&rang;::seekoff(long, std::ios_base::_C_seekdir, int)</a> from ios.o(t._ZNSt13basic_filebufIwSt11char_traitsIwEE7seekoffElNSt8ios_base10_C_seekdirEi) referenced from ios.o(.constdata__ZTVSt13basic_filebufIwSt11char_traitsIwEE)
 <LI><a href="#[89]">std::basic_filebuf&lang;wchar_t, std::char_traits&lang;wchar_t&rang;&rang;::seekpos(std::fpos&lang;std::__mbstate_t&rang;, int)</a> from ios.o(t._ZNSt13basic_filebufIwSt11char_traitsIwEE7seekposESt4fposISt11__mbstate_tEi) referenced from ios.o(.constdata__ZTVSt13basic_filebufIwSt11char_traitsIwEE)
 <LI><a href="#[8e]">std::basic_filebuf&lang;wchar_t, std::char_traits&lang;wchar_t&rang;&rang;::overflow(int)</a> from ios.o(t._ZNSt13basic_filebufIwSt11char_traitsIwEE8overflowEi) referenced from ios.o(.constdata__ZTVSt13basic_filebufIwSt11char_traitsIwEE)
 <LI><a href="#[8f]">std::basic_filebuf&lang;wchar_t, std::char_traits&lang;wchar_t&rang;&rang;::pbackfail(int)</a> from ios.o(t._ZNSt13basic_filebufIwSt11char_traitsIwEE9pbackfailEi) referenced from ios.o(.constdata__ZTVSt13basic_filebufIwSt11char_traitsIwEE)
 <LI><a href="#[8a]">std::basic_filebuf&lang;wchar_t, std::char_traits&lang;wchar_t&rang;&rang;::showmanyc()</a> from ios.o(t._ZNSt13basic_filebufIwSt11char_traitsIwEE9showmanycEv) referenced from ios.o(.constdata__ZTVSt13basic_filebufIwSt11char_traitsIwEE)
 <LI><a href="#[8c]">std::basic_filebuf&lang;wchar_t, std::char_traits&lang;wchar_t&rang;&rang;::underflow()</a> from ios.o(t._ZNSt13basic_filebufIwSt11char_traitsIwEE9underflowEv) referenced from ios.o(.constdata__ZTVSt13basic_filebufIwSt11char_traitsIwEE)
 <LI><a href="#[86]">std::basic_filebuf&lang;wchar_t, std::char_traits&lang;wchar_t&rang;&rang;::~basic_filebuf__deallocating()</a> from ios.o(t._ZNSt13basic_filebufIwSt11char_traitsIwEED0Ev) referenced from ios.o(.constdata__ZTVSt13basic_filebufIwSt11char_traitsIwEE)
 <LI><a href="#[85]">std::basic_filebuf&lang;wchar_t, std::char_traits&lang;wchar_t&rang;&rang;::~basic_filebuf()</a> from ios.o(t._ZNSt13basic_filebufIwSt11char_traitsIwEED1Ev) referenced from ios.o(.constdata__ZTVSt13basic_filebufIwSt11char_traitsIwEE)
 <LI><a href="#[93]">std::basic_istream&lang;wchar_t, std::char_traits&lang;wchar_t&rang;&rang;::~basic_istream__deallocating()</a> from ios.o(i._ZNSt13basic_istreamIwSt11char_traitsIwEED0Ev) referenced from ios.o(.constdata__ZTVSt13basic_istreamIwSt11char_traitsIwEE)
 <LI><a href="#[92]">std::basic_istream&lang;wchar_t, std::char_traits&lang;wchar_t&rang;&rang;::~basic_istream()</a> from ios.o(i._ZNSt13basic_istreamIwSt11char_traitsIwEED1Ev) referenced from ios.o(.constdata__ZTVSt13basic_istreamIwSt11char_traitsIwEE)
 <LI><a href="#[97]">std::basic_ostream&lang;wchar_t, std::char_traits&lang;wchar_t&rang;&rang;::~basic_ostream__deallocating()</a> from ios.o(i._ZNSt13basic_ostreamIwSt11char_traitsIwEED0Ev) referenced from ios.o(.constdata__ZTVSt13basic_ostreamIwSt11char_traitsIwEE)
 <LI><a href="#[96]">std::basic_ostream&lang;wchar_t, std::char_traits&lang;wchar_t&rang;&rang;::~basic_ostream()</a> from ios.o(i._ZNSt13basic_ostreamIwSt11char_traitsIwEED1Ev) referenced from ios.o(.constdata__ZTVSt13basic_ostreamIwSt11char_traitsIwEE)
 <LI><a href="#[9a]">std::runtime_error::~runtime_error__deallocating()</a> from rwthrowproc_impl.o(i._ZNSt13runtime_errorD0Ev) referenced from rwthrowproc_impl.o(.constdata__ZTVSt13runtime_error)
 <LI><a href="#[43]">std::runtime_error::~runtime_error()</a> from rwthrowproc_impl.o(i._ZNSt13runtime_errorD1Ev) referenced from rwthrowproc_impl.o(.constdata__ZTVSt13runtime_error)
 <LI><a href="#[43]">std::runtime_error::~runtime_error()</a> from rwthrowproc_impl.o(i._ZNSt13runtime_errorD1Ev) referenced from rwthrowproc_impl.o(i._ZN4__rw20__rw_throw_exceptionEiPc)
 <LI><a href="#[9c]">std::__rw_exception::~__rw_exception__deallocating()</a> from rwstdexcept.o(i._ZNSt14__rw_exceptionD0Ev) referenced from rwstdexcept.o(.constdata__ZTVSt14__rw_exception)
 <LI><a href="#[9b]">std::__rw_exception::~__rw_exception()</a> from rwstdexcept.o(i._ZNSt14__rw_exceptionD1Ev) referenced from rwstdexcept.o(.constdata__ZTVSt14__rw_exception)
 <LI><a href="#[9e]">std::collate_byname&lang;char&rang;::~collate_byname__deallocating()</a> from char.o(i._ZNSt14collate_bynameIcED0Ev) referenced from char.o(.constdata__ZTVSt14collate_bynameIcE)
 <LI><a href="#[9d]">std::collate_byname&lang;char&rang;::~collate_byname()</a> from char.o(i._ZNSt14collate_bynameIcED1Ev) referenced from char.o(.constdata__ZTVSt14collate_bynameIcE)
 <LI><a href="#[a1]">std::overflow_error::~overflow_error__deallocating()</a> from rwthrowproc_impl.o(i._ZNSt14overflow_errorD0Ev) referenced from rwthrowproc_impl.o(.constdata__ZTVSt14overflow_error)
 <LI><a href="#[45]">std::overflow_error::~overflow_error()</a> from rwthrowproc_impl.o(i._ZNSt14overflow_errorD1Ev) referenced from rwthrowproc_impl.o(.constdata__ZTVSt14overflow_error)
 <LI><a href="#[45]">std::overflow_error::~overflow_error()</a> from rwthrowproc_impl.o(i._ZNSt14overflow_errorD1Ev) referenced from rwthrowproc_impl.o(i._ZN4__rw20__rw_throw_exceptionEiPc)
 <LI><a href="#[ab]">std::basic_streambuf&lang;char, std::char_traits&lang;char&rang;&rang;::sync()</a> from ios.o(t._ZNSt15basic_streambufIcSt11char_traitsIcEE4syncEv) referenced from ios.o(.constdata__ZTVSt15basic_streambufIcSt11char_traitsIcEE)
 <LI><a href="#[a8]">std::basic_streambuf&lang;char, std::char_traits&lang;char&rang;&rang;::uflow()</a> from ios.o(t._ZNSt15basic_streambufIcSt11char_traitsIcEE5uflowEv) referenced from ios.o(.constdata__ZTVSt15basic_streambufIcSt11char_traitsIcEE)
 <LI><a href="#[a4]">std::basic_streambuf&lang;char, std::char_traits&lang;char&rang;&rang;::setbuf(char*, long)</a> from ios.o(t._ZNSt15basic_streambufIcSt11char_traitsIcEE6setbufEPcl) referenced from ios.o(.constdata__ZTVSt15basic_streambufIcSt11char_traitsIcEE)
 <LI><a href="#[aa]">std::basic_streambuf&lang;char, std::char_traits&lang;char&rang;&rang;::xsputn(const char*, long)</a> from ios.o(t._ZNSt15basic_streambufIcSt11char_traitsIcEE6xsputnEPKcl) referenced from ios.o(.constdata__ZTVSt15basic_streambufIcSt11char_traitsIcEE)
 <LI><a href="#[a5]">std::basic_streambuf&lang;char, std::char_traits&lang;char&rang;&rang;::seekoff(long, std::ios_base::_C_seekdir, int)</a> from ios.o(t._ZNSt15basic_streambufIcSt11char_traitsIcEE7seekoffElNSt8ios_base10_C_seekdirEi) referenced from ios.o(.constdata__ZTVSt15basic_streambufIcSt11char_traitsIcEE)
 <LI><a href="#[a6]">std::basic_streambuf&lang;char, std::char_traits&lang;char&rang;&rang;::seekpos(std::fpos&lang;std::__mbstate_t&rang;, int)</a> from ios.o(t._ZNSt15basic_streambufIcSt11char_traitsIcEE7seekposESt4fposISt11__mbstate_tEi) referenced from ios.o(.constdata__ZTVSt15basic_streambufIcSt11char_traitsIcEE)
 <LI><a href="#[a9]">std::basic_streambuf&lang;char, std::char_traits&lang;char&rang;&rang;::overflow(int)</a> from ios.o(t._ZNSt15basic_streambufIcSt11char_traitsIcEE8overflowEi) referenced from ios.o(.constdata__ZTVSt15basic_streambufIcSt11char_traitsIcEE)
 <LI><a href="#[a7]">std::basic_streambuf&lang;char, std::char_traits&lang;char&rang;&rang;::underflow()</a> from ios.o(t._ZNSt15basic_streambufIcSt11char_traitsIcEE9underflowEv) referenced from ios.o(.constdata__ZTVSt15basic_streambufIcSt11char_traitsIcEE)
 <LI><a href="#[a3]">std::basic_streambuf&lang;char, std::char_traits&lang;char&rang;&rang;::~basic_streambuf__deallocating()</a> from ios.o(t._ZNSt15basic_streambufIcSt11char_traitsIcEED0Ev) referenced from ios.o(.constdata__ZTVSt15basic_streambufIcSt11char_traitsIcEE)
 <LI><a href="#[a2]">std::basic_streambuf&lang;char, std::char_traits&lang;char&rang;&rang;::~basic_streambuf()</a> from ios.o(t._ZNSt15basic_streambufIcSt11char_traitsIcEED1Ev) referenced from ios.o(.constdata__ZTVSt15basic_streambufIcSt11char_traitsIcEE)
 <LI><a href="#[b2]">std::basic_streambuf&lang;wchar_t, std::char_traits&lang;wchar_t&rang;&rang;::uflow()</a> from ios.o(t._ZNSt15basic_streambufIwSt11char_traitsIwEE5uflowEv) referenced from ios.o(.constdata__ZTVSt15basic_streambufIwSt11char_traitsIwEE)
 <LI><a href="#[ae]">std::basic_streambuf&lang;wchar_t, std::char_traits&lang;wchar_t&rang;&rang;::setbuf(wchar_t*, long)</a> from ios.o(t._ZNSt15basic_streambufIwSt11char_traitsIwEE6setbufEPwl) referenced from ios.o(.constdata__ZTVSt15basic_streambufIwSt11char_traitsIwEE)
 <LI><a href="#[8b]">std::basic_streambuf&lang;wchar_t, std::char_traits&lang;wchar_t&rang;&rang;::xsgetn(wchar_t*, long)</a> from ios.o(t._ZNSt15basic_streambufIwSt11char_traitsIwEE6xsgetnEPwl) referenced from ios.o(.constdata__ZTVSt13basic_filebufIwSt11char_traitsIwEE)
 <LI><a href="#[8b]">std::basic_streambuf&lang;wchar_t, std::char_traits&lang;wchar_t&rang;&rang;::xsgetn(wchar_t*, long)</a> from ios.o(t._ZNSt15basic_streambufIwSt11char_traitsIwEE6xsgetnEPwl) referenced from ios.o(.constdata__ZTVSt15basic_streambufIwSt11char_traitsIwEE)
 <LI><a href="#[b4]">std::basic_streambuf&lang;wchar_t, std::char_traits&lang;wchar_t&rang;&rang;::xsputn(const wchar_t*, long)</a> from ios.o(t._ZNSt15basic_streambufIwSt11char_traitsIwEE6xsputnEPKwl) referenced from ios.o(.constdata__ZTVSt15basic_streambufIwSt11char_traitsIwEE)
 <LI><a href="#[af]">std::basic_streambuf&lang;wchar_t, std::char_traits&lang;wchar_t&rang;&rang;::seekoff(long, std::ios_base::_C_seekdir, int)</a> from ios.o(t._ZNSt15basic_streambufIwSt11char_traitsIwEE7seekoffElNSt8ios_base10_C_seekdirEi) referenced from ios.o(.constdata__ZTVSt15basic_streambufIwSt11char_traitsIwEE)
 <LI><a href="#[b0]">std::basic_streambuf&lang;wchar_t, std::char_traits&lang;wchar_t&rang;&rang;::seekpos(std::fpos&lang;std::__mbstate_t&rang;, int)</a> from ios.o(t._ZNSt15basic_streambufIwSt11char_traitsIwEE7seekposESt4fposISt11__mbstate_tEi) referenced from ios.o(.constdata__ZTVSt15basic_streambufIwSt11char_traitsIwEE)
 <LI><a href="#[b3]">std::basic_streambuf&lang;wchar_t, std::char_traits&lang;wchar_t&rang;&rang;::overflow(int)</a> from ios.o(t._ZNSt15basic_streambufIwSt11char_traitsIwEE8overflowEi) referenced from ios.o(.constdata__ZTVSt15basic_streambufIwSt11char_traitsIwEE)
 <LI><a href="#[b1]">std::basic_streambuf&lang;wchar_t, std::char_traits&lang;wchar_t&rang;&rang;::underflow()</a> from ios.o(t._ZNSt15basic_streambufIwSt11char_traitsIwEE9underflowEv) referenced from ios.o(.constdata__ZTVSt15basic_streambufIwSt11char_traitsIwEE)
 <LI><a href="#[ad]">std::basic_streambuf&lang;wchar_t, std::char_traits&lang;wchar_t&rang;&rang;::~basic_streambuf__deallocating()</a> from ios.o(t._ZNSt15basic_streambufIwSt11char_traitsIwEED0Ev) referenced from ios.o(.constdata__ZTVSt15basic_streambufIwSt11char_traitsIwEE)
 <LI><a href="#[ac]">std::basic_streambuf&lang;wchar_t, std::char_traits&lang;wchar_t&rang;&rang;::~basic_streambuf()</a> from ios.o(t._ZNSt15basic_streambufIwSt11char_traitsIwEED1Ev) referenced from ios.o(.constdata__ZTVSt15basic_streambufIwSt11char_traitsIwEE)
 <LI><a href="#[b5]">std::underflow_error::~underflow_error__deallocating()</a> from rwthrowproc_impl.o(i._ZNSt15underflow_errorD0Ev) referenced from rwthrowproc_impl.o(.constdata__ZTVSt15underflow_error)
 <LI><a href="#[46]">std::underflow_error::~underflow_error()</a> from rwthrowproc_impl.o(i._ZNSt15underflow_errorD1Ev) referenced from rwthrowproc_impl.o(.constdata__ZTVSt15underflow_error)
 <LI><a href="#[46]">std::underflow_error::~underflow_error()</a> from rwthrowproc_impl.o(i._ZNSt15underflow_errorD1Ev) referenced from rwthrowproc_impl.o(i._ZN4__rw20__rw_throw_exceptionEiPc)
 <LI><a href="#[b6]">std::invalid_argument::~invalid_argument__deallocating()</a> from rwthrowproc_impl.o(i._ZNSt16invalid_argumentD0Ev) referenced from rwthrowproc_impl.o(.constdata__ZTVSt16invalid_argument)
 <LI><a href="#[40]">std::invalid_argument::~invalid_argument()</a> from rwthrowproc_impl.o(i._ZNSt16invalid_argumentD1Ev) referenced from rwthrowproc_impl.o(.constdata__ZTVSt16invalid_argument)
 <LI><a href="#[40]">std::invalid_argument::~invalid_argument()</a> from rwthrowproc_impl.o(i._ZNSt16invalid_argumentD1Ev) referenced from rwthrowproc_impl.o(i._ZN4__rw20__rw_throw_exceptionEiPc)
 <LI><a href="#[53]">std::__rw_open_cat_data::__rw_open_cat_data()</a> from messages.o(i._ZNSt18__rw_open_cat_dataC1Ev) referenced from messages.o(t._ZN4__rw18__rw_locale_vectorISt18__rw_open_cat_dataE6resizeEj)
 <LI><a href="#[52]">std::__rw_open_cat_data::~__rw_open_cat_data()</a> from messages.o(i._ZNSt18__rw_open_cat_dataD1Ev) referenced from messages.o(t._ZN4__rw18__rw_locale_vectorISt18__rw_open_cat_dataE6resizeEj)
 <LI><a href="#[52]">std::__rw_open_cat_data::~__rw_open_cat_data()</a> from messages.o(i._ZNSt18__rw_open_cat_dataD1Ev) referenced from messages.o(t._ZN4__rw18__rw_locale_vectorISt18__rw_open_cat_dataED1Ev)
 <LI><a href="#[27]">std::map&lang;int, int, std::less&lang;int&rang;, std::allocator&lang;std::pair&lang;const int, int&rang;&rang;&rang;::~map()</a> from main.o(i._ZNSt3mapIiiSt4lessIiESaISt4pairIKiiEEED1Ev) referenced from main.o(.text)
 <LI><a href="#[6f]">std::ctype&lang;char&rang;::_C_initfacet(const std::locale&)</a> from char.o(i._ZNSt5ctypeIcE12_C_initfacetERKSt6locale) referenced from char.o(.constdata__ZTVSt12ctype_bynameIcE)
 <LI><a href="#[6f]">std::ctype&lang;char&rang;::_C_initfacet(const std::locale&)</a> from char.o(i._ZNSt5ctypeIcE12_C_initfacetERKSt6locale) referenced from char.o(.constdata__ZTVSt5ctypeIcE)
 <LI><a href="#[b8]">std::ctype&lang;char&rang;::~ctype__deallocating()</a> from char.o(i._ZNSt5ctypeIcED0Ev) referenced from char.o(.constdata__ZTVSt5ctypeIcE)
 <LI><a href="#[b7]">std::ctype&lang;char&rang;::~ctype()</a> from char.o(i._ZNSt5ctypeIcED1Ev) referenced from char.o(.constdata__ZTVSt5ctypeIcE)
 <LI><a href="#[b9]">std::ctype&lang;wchar_t&rang;::~ctype__deallocating()</a> from ios.o(i._ZNSt5ctypeIwED0Ev) referenced from ios.o(.constdata__ZTVSt5ctypeIwE)
 <LI><a href="#[5b]">std::locale::facet::~facet__deallocating()</a> from ios.o(i._ZNSt6locale5facetD0Ev) referenced from ios.o(.constdata__ZTVNSt6locale5facetE)
 <LI><a href="#[5a]">std::locale::facet::~facet()</a> from main.o(i._ZNSt6locale5facetD1Ev) referenced from ios.o(.constdata__ZTVNSt6locale5facetE)
 <LI><a href="#[4b]">std::locale::~locale()</a> from main.o(i._ZNSt6localeD1Ev) referenced from locale.o(i._ZNSt6locale7classicEv)
 <LI><a href="#[26]">std::vector&lang;int, std::allocator&lang;int&rang;&rang;::~vector()</a> from main.o(t._ZNSt6vectorIiSaIiEED1Ev) referenced from main.o(.text)
 <LI><a href="#[bb]">std::codecvt&lang;char, char, std::__mbstate_t&rang;::~codecvt__deallocating()</a> from ios.o(i._ZNSt7codecvtIccSt11__mbstate_tED0Ev) referenced from ios.o(.constdata__ZTVSt7codecvtIccSt11__mbstate_tE)
 <LI><a href="#[c2]">std::codecvt&lang;wchar_t, char, std::__mbstate_t&rang;::~codecvt__deallocating()</a> from ios.o(i._ZNSt7codecvtIwcSt11__mbstate_tED0Ev) referenced from ios.o(.constdata__ZTVSt7codecvtIwcSt11__mbstate_tE)
 <LI><a href="#[c9]">std::bad_cast::~bad_cast__deallocating()</a> from bad_cast.o(i._ZNSt8bad_castD0Ev) referenced from bad_cast.o(.constdata__ZTVSt8bad_cast)
 <LI><a href="#[3d]">std::bad_cast::~bad_cast()</a> from bad_cast.o(i._ZNSt8bad_castD1Ev) referenced from bad_cast.o(.constdata__ZTVSt8bad_cast)
 <LI><a href="#[3d]">std::bad_cast::~bad_cast()</a> from bad_cast.o(i._ZNSt8bad_castD1Ev) referenced from rwthrowproc_impl.o(i._ZN4__rw20__rw_throw_exceptionEiPc)
 <LI><a href="#[5d]">std::ios_base::badbit_set::~badbit_set__deallocating()</a> from rwthrowproc_impl.o(i._ZNSt8ios_base10badbit_setD0Ev) referenced from rwthrowproc_impl.o(.constdata__ZTVNSt8ios_base10badbit_setE)
 <LI><a href="#[48]">std::ios_base::badbit_set::~badbit_set()</a> from rwthrowproc_impl.o(i._ZNSt8ios_base10badbit_setD1Ev) referenced from rwthrowproc_impl.o(.constdata__ZTVNSt8ios_base10badbit_setE)
 <LI><a href="#[48]">std::ios_base::badbit_set::~badbit_set()</a> from rwthrowproc_impl.o(i._ZNSt8ios_base10badbit_setD1Ev) referenced from rwthrowproc_impl.o(i._ZN4__rw20__rw_throw_exceptionEiPc)
 <LI><a href="#[5f]">std::ios_base::eofbit_set::~eofbit_set__deallocating()</a> from rwthrowproc_impl.o(i._ZNSt8ios_base10eofbit_setD0Ev) referenced from rwthrowproc_impl.o(.constdata__ZTVNSt8ios_base10eofbit_setE)
 <LI><a href="#[49]">std::ios_base::eofbit_set::~eofbit_set()</a> from rwthrowproc_impl.o(i._ZNSt8ios_base10eofbit_setD1Ev) referenced from rwthrowproc_impl.o(.constdata__ZTVNSt8ios_base10eofbit_setE)
 <LI><a href="#[49]">std::ios_base::eofbit_set::~eofbit_set()</a> from rwthrowproc_impl.o(i._ZNSt8ios_base10eofbit_setD1Ev) referenced from rwthrowproc_impl.o(i._ZN4__rw20__rw_throw_exceptionEiPc)
 <LI><a href="#[60]">std::ios_base::failbit_set::~failbit_set__deallocating()</a> from rwthrowproc_impl.o(i._ZNSt8ios_base11failbit_setD0Ev) referenced from rwthrowproc_impl.o(.constdata__ZTVNSt8ios_base11failbit_setE)
 <LI><a href="#[47]">std::ios_base::failbit_set::~failbit_set()</a> from rwthrowproc_impl.o(i._ZNSt8ios_base11failbit_setD1Ev) referenced from rwthrowproc_impl.o(.constdata__ZTVNSt8ios_base11failbit_setE)
 <LI><a href="#[47]">std::ios_base::failbit_set::~failbit_set()</a> from rwthrowproc_impl.o(i._ZNSt8ios_base11failbit_setD1Ev) referenced from rwthrowproc_impl.o(i._ZN4__rw20__rw_throw_exceptionEiPc)
 <LI><a href="#[25]">std::ios_base::Init::~Init()</a> from ios.o(i._ZNSt8ios_base4InitD1Ev) referenced from main.o(.text)
 <LI><a href="#[61]">std::ios_base::failure::~failure__deallocating()</a> from rwthrowproc_impl.o(i._ZNSt8ios_base7failureD0Ev) referenced from rwthrowproc_impl.o(.constdata__ZTVNSt8ios_base7failureE)
 <LI><a href="#[4a]">std::ios_base::failure::~failure()</a> from rwthrowproc_impl.o(i._ZNSt8ios_base7failureD1Ev) referenced from rwthrowproc_impl.o(.constdata__ZTVNSt8ios_base7failureE)
 <LI><a href="#[4a]">std::ios_base::failure::~failure()</a> from rwthrowproc_impl.o(i._ZNSt8ios_base7failureD1Ev) referenced from rwthrowproc_impl.o(i._ZN4__rw20__rw_throw_exceptionEiPc)
 <LI><a href="#[cb]">std::ios_base::~ios_base__deallocating()</a> from ios.o(i._ZNSt8ios_baseD0Ev) referenced from ios.o(.constdata__ZTVSt8ios_base)
 <LI><a href="#[ca]">std::ios_base::~ios_base()</a> from ios.o(i._ZNSt8ios_baseD1Ev) referenced from ios.o(.constdata__ZTVSt8ios_base)
 <LI><a href="#[cd]">std::messages&lang;char&rang;::~messages__deallocating()</a> from rwstdexcept.o(i._ZNSt8messagesIcED0Ev) referenced from rwstdexcept.o(.constdata__ZTVSt8messagesIcE)
 <LI><a href="#[cc]">std::messages&lang;char&rang;::~messages()</a> from rwstdexcept.o(i._ZNSt8messagesIcED1Ev) referenced from rwstdexcept.o(.constdata__ZTVSt8messagesIcE)
 <LI><a href="#[d0]">std::bad_alloc::~bad_alloc__deallocating()</a> from bad_alloc_dtor.o(i._ZNSt9bad_allocD0Ev) referenced from bad_alloc_dtor.o(.constdata__ZTVSt9bad_alloc)
 <LI><a href="#[3b]">std::bad_alloc::~bad_alloc()</a> from bad_alloc_dtor.o(i._ZNSt9bad_allocD1Ev) referenced from bad_alloc_dtor.o(.constdata__ZTVSt9bad_alloc)
 <LI><a href="#[3b]">std::bad_alloc::~bad_alloc()</a> from bad_alloc_dtor.o(i._ZNSt9bad_allocD1Ev) referenced from newhandler.o(i._Z21__default_new_handlerv)
 <LI><a href="#[3b]">std::bad_alloc::~bad_alloc()</a> from bad_alloc_dtor.o(i._ZNSt9bad_allocD1Ev) referenced from rwthrowproc_impl.o(i._ZN4__rw20__rw_throw_exceptionEiPc)
 <LI><a href="#[d2]">std::basic_ios&lang;char, std::char_traits&lang;char&rang;&rang;::~basic_ios__deallocating()</a> from ios.o(i._ZNSt9basic_iosIcSt11char_traitsIcEED0Ev) referenced from ios.o(.constdata__ZTVSt9basic_iosIcSt11char_traitsIcEE)
 <LI><a href="#[d1]">std::basic_ios&lang;char, std::char_traits&lang;char&rang;&rang;::~basic_ios()</a> from ios.o(i._ZNSt9basic_iosIcSt11char_traitsIcEED1Ev) referenced from ios.o(.constdata__ZTVSt9basic_iosIcSt11char_traitsIcEE)
 <LI><a href="#[d4]">std::basic_ios&lang;wchar_t, std::char_traits&lang;wchar_t&rang;&rang;::~basic_ios__deallocating()</a> from ios.o(i._ZNSt9basic_iosIwSt11char_traitsIwEED0Ev) referenced from ios.o(.constdata__ZTVSt9basic_iosIwSt11char_traitsIwEE)
 <LI><a href="#[d3]">std::basic_ios&lang;wchar_t, std::char_traits&lang;wchar_t&rang;&rang;::~basic_ios()</a> from ios.o(i._ZNSt9basic_iosIwSt11char_traitsIwEED1Ev) referenced from ios.o(.constdata__ZTVSt9basic_iosIwSt11char_traitsIwEE)
 <LI><a href="#[a]">std::exception::~exception()</a> from exception_dtor.o(i._ZNSt9exceptionD1Ev) referenced from exception_dtor.o(.constdata__ZTVSt9exception)
 <LI><a href="#[a]">std::exception::~exception()</a> from exception_dtor.o(i._ZNSt9exceptionD1Ev) referenced from rwthrowproc_impl.o(i._ZN4__rw20__rw_throw_exceptionEiPc)
 <LI><a href="#[24]">std::endl&lang;char, std::char_traits&lang;char&rang;&rang;(std::basic_ostream&lang;T1, T2&rang;&)</a> from main.o(t._ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_) referenced from main.o(.text)
 <LI><a href="#[65]">thunk{v:0,-12} to std::basic_istream&lang;char, std::char_traits&lang;char&rang;&rang;::~basic_istream__deallocating()</a> from ios.o(i._ZTv0_n12_NSiD0Ev) referenced from ios.o(.constdata__ZTVSi)
 <LI><a href="#[64]">thunk{v:0,-12} to std::basic_istream&lang;char, std::char_traits&lang;char&rang;&rang;::~basic_istream()</a> from ios.o(i._ZTv0_n12_NSiD1Ev) referenced from ios.o(.constdata__ZTVSi)
 <LI><a href="#[69]">thunk{v:0,-12} to std::basic_ostream&lang;char, std::char_traits&lang;char&rang;&rang;::~basic_ostream__deallocating()</a> from ios.o(i._ZTv0_n12_NSoD0Ev) referenced from ios.o(.constdata__ZTVSo)
 <LI><a href="#[68]">thunk{v:0,-12} to std::basic_ostream&lang;char, std::char_traits&lang;char&rang;&rang;::~basic_ostream()</a> from ios.o(i._ZTv0_n12_NSoD1Ev) referenced from ios.o(.constdata__ZTVSo)
 <LI><a href="#[95]">thunk{v:0,-12} to std::basic_istream&lang;wchar_t, std::char_traits&lang;wchar_t&rang;&rang;::~basic_istream__deallocating()</a> from ios.o(i._ZTv0_n12_NSt13basic_istreamIwSt11char_traitsIwEED0Ev) referenced from ios.o(.constdata__ZTVSt13basic_istreamIwSt11char_traitsIwEE)
 <LI><a href="#[94]">thunk{v:0,-12} to std::basic_istream&lang;wchar_t, std::char_traits&lang;wchar_t&rang;&rang;::~basic_istream()</a> from ios.o(i._ZTv0_n12_NSt13basic_istreamIwSt11char_traitsIwEED1Ev) referenced from ios.o(.constdata__ZTVSt13basic_istreamIwSt11char_traitsIwEE)
 <LI><a href="#[99]">thunk{v:0,-12} to std::basic_ostream&lang;wchar_t, std::char_traits&lang;wchar_t&rang;&rang;::~basic_ostream__deallocating()</a> from ios.o(i._ZTv0_n12_NSt13basic_ostreamIwSt11char_traitsIwEED0Ev) referenced from ios.o(.constdata__ZTVSt13basic_ostreamIwSt11char_traitsIwEE)
 <LI><a href="#[98]">thunk{v:0,-12} to std::basic_ostream&lang;wchar_t, std::char_traits&lang;wchar_t&rang;&rang;::~basic_ostream()</a> from ios.o(i._ZTv0_n12_NSt13basic_ostreamIwSt11char_traitsIwEED1Ev) referenced from ios.o(.constdata__ZTVSt13basic_ostreamIwSt11char_traitsIwEE)
 <LI><a href="#[4e]">operator delete[] (void*)</a> from array_del.o(i._ZdaPv) referenced from cxa_vec_new.o(i.__cxa_vec_new)
 <LI><a href="#[30]">__aeabi_unwind_cpp_pr0</a> from unwind_pr0.o(.text) referenced from unwinder.o(.text)
 <LI><a href="#[31]">__aeabi_unwind_cpp_pr1</a> from unwind_pr1.o(.text) referenced from unwinder.o(.text)
 <LI><a href="#[32]">__cxa_call_unexpected</a> from arm_exceptions_callunex.o(.text) referenced 2 times from unwind_prcommon.o(.text)
 <LI><a href="#[da]">__main</a> from __main.o(!!!main) referenced from startup_armcm3.o(.text)
 <LI><a href="#[d7]">__sti___10_locale_cpp</a> from locale.o(i.__sti___10_locale_cpp) referenced from locale.o(.init_array)
 <LI><a href="#[d8]">__sti___10_rwcats_cpp</a> from rwcats.o(i.__sti___10_rwcats_cpp) referenced from rwcats.o(.init_array)
 <LI><a href="#[d6]">__sti___8_char_cpp</a> from char.o(i.__sti___8_char_cpp) referenced from char.o(.init_array)
 <LI><a href="#[d5]">__sti___8_main_cpp</a> from main.o(.text) referenced from main.o(.init_array)
 <LI><a href="#[3a]">_fputc$unlocked</a> from fputc.o(i.fputc) referenced from _printf_char_file_locked.o(.text)
 <LI><a href="#[2b]">_get_lc_ctype</a> from lc_ctype_c.o(locale$$code) referenced from rt_ctype_table.o(.text)
 <LI><a href="#[37]">_printf_input_char</a> from _printf_char_common.o(.text) referenced from _printf_char_common.o(.text)
 <LI><a href="#[2e]">_sbackspace</a> from _sgetc.o(.text) referenced from sscanf.o(.text)
 <LI><a href="#[38]">_scanf_char_input</a> from scanf_char.o(.text) referenced from scanf_char.o(.text)
 <LI><a href="#[2d]">_sgetc</a> from _sgetc.o(.text) referenced from sscanf.o(.text)
 <LI><a href="#[2c]">_snputc</a> from _snputc.o(.text) referenced from vsnprintf.o(.text)
 <LI><a href="#[39]">isspace</a> from isspace.o(.text) referenced from scanf_char.o(.text)
 <LI><a href="#[58]">main</a> from main.o(.text) referenced from rtx_conf_cm.o(.constdata)
 <LI><a href="#[165]">osThreadExit</a> from rt_cmsis.o(.text) referenced 2 times from rt_cmsis.o(.text)
 <LI><a href="#[29]">os_idle_demon</a> from rtx_conf_cm.o(.text) referenced from rt_task.o(.text)
 <LI><a href="#[1e]">rt_alloc_box</a> from rt_membox.o(.text) referenced from hal_cm3.o(.emb_text)
 <LI><a href="#[1f]">rt_free_box</a> from rt_membox.o(.text) referenced from hal_cm3.o(.emb_text)
 <LI><a href="#[23]">rt_mut_release</a> from rt_mutex.o(.text) referenced from rtx_conf_cm.o(.text)
 <LI><a href="#[22]">rt_mut_wait</a> from rt_mutex.o(.text) referenced from rtx_conf_cm.o(.text)
 <LI><a href="#[170]">svcDelay</a> from rt_cmsis.o(.text) referenced from rt_cmsis.o(.text)
 <LI><a href="#[168]">svcKernelStart</a> from rt_cmsis.o(.text) referenced from rt_cmsis.o(.text)
 <LI><a href="#[1a2]">svcMailCreate</a> from rt_cmsis.o(.text) referenced from rt_cmsis.o(.text)
 <LI><a href="#[166]">svcMessageCreate</a> from rt_cmsis.o(.text) referenced from rt_cmsis.o(.text)
 <LI><a href="#[17e]">svcMessageGet</a> from rt_cmsis.o(.text) referenced from rt_cmsis.o(.text)
 <LI><a href="#[19f]">svcMessagePut</a> from rt_cmsis.o(.text) referenced from rt_cmsis.o(.text)
 <LI><a href="#[18c]">svcMutexCreate</a> from rt_cmsis.o(.text) referenced from rt_cmsis.o(.text)
 <LI><a href="#[18e]">svcMutexRelease</a> from rt_cmsis.o(.text) referenced from rt_cmsis.o(.text)
 <LI><a href="#[18d]">svcMutexWait</a> from rt_cmsis.o(.text) referenced from rt_cmsis.o(.text)
 <LI><a href="#[197]">svcPoolCreate</a> from rt_cmsis.o(.text) referenced from rt_cmsis.o(.text)
 <LI><a href="#[18f]">svcSemaphoreCreate</a> from rt_cmsis.o(.text) referenced from rt_cmsis.o(.text)
 <LI><a href="#[193]">svcSemaphoreRelease</a> from rt_cmsis.o(.text) referenced from rt_cmsis.o(.text)
 <LI><a href="#[191]">svcSemaphoreWait</a> from rt_cmsis.o(.text) referenced from rt_cmsis.o(.text)
 <LI><a href="#[188]">svcSignalClear</a> from rt_cmsis.o(.text) referenced from rt_cmsis.o(.text)
 <LI><a href="#[18a]">svcSignalGet</a> from rt_cmsis.o(.text) referenced from rt_cmsis.o(.text)
 <LI><a href="#[186]">svcSignalSet</a> from rt_cmsis.o(.text) referenced from rt_cmsis.o(.text)
 <LI><a href="#[184]">svcSignalWait</a> from rt_cmsis.o(.text) referenced from rt_cmsis.o(.text)
 <LI><a href="#[162]">svcThreadCreate</a> from rt_cmsis.o(.text) referenced from rt_cmsis.o(.text)
 <LI><a href="#[15d]">svcThreadGetId</a> from rt_cmsis.o(.text) referenced 2 times from rt_cmsis.o(.text)
 <LI><a href="#[16f]">svcThreadGetPriority</a> from rt_cmsis.o(.text) referenced from rt_cmsis.o(.text)
 <LI><a href="#[16d]">svcThreadSetPriority</a> from rt_cmsis.o(.text) referenced from rt_cmsis.o(.text)
 <LI><a href="#[15e]">svcThreadTerminate</a> from rt_cmsis.o(.text) referenced 2 times from rt_cmsis.o(.text)
 <LI><a href="#[16b]">svcThreadYield</a> from rt_cmsis.o(.text) referenced from rt_cmsis.o(.text)
 <LI><a href="#[173]">svcTimerCall</a> from rt_cmsis.o(.text) referenced from rt_cmsis.o(.text)
 <LI><a href="#[17d]">svcTimerCreate</a> from rt_cmsis.o(.text) referenced from rt_cmsis.o(.text)
 <LI><a href="#[175]">svcTimerStart</a> from rt_cmsis.o(.text) referenced from rt_cmsis.o(.text)
 <LI><a href="#[178]">svcTimerStop</a> from rt_cmsis.o(.text) referenced from rt_cmsis.o(.text)
 <LI><a href="#[1a3]">sysMailAlloc</a> from rt_cmsis.o(.text) referenced 2 times from rt_cmsis.o(.text)
 <LI><a href="#[1a6]">sysMailFree</a> from rt_cmsis.o(.text) referenced from rt_cmsis.o(.text)
 <LI><a href="#[199]">sysPoolAlloc</a> from rt_cmsis.o(.text) referenced 2 times from rt_cmsis.o(.text)
 <LI><a href="#[19b]">sysPoolFree</a> from rt_cmsis.o(.text) referenced from rt_cmsis.o(.text)
</UL>
<P>
<H3>
Global Symbols
</H3>
<P><STRONG><a name="[da]"></a>__main</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, __main.o(!!!main))
<BR><BR>[Stack]<UL><LI>Max Depth = 24 + Unknown Stack Size
<LI>Call Chain = __main &rArr; __rt_entry &rArr; __rt_lib_init &rArr; _fp_init &rArr; __rt_fp_status_addr &rArr; __user_perthread_libspace
</UL>
<BR>[Calls]<UL><LI><a href="#[e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry
<LI><a href="#[e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload
</UL>

<P><STRONG><a name="[e1]"></a>__scatterload</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __scatter.o(!!!scatter))
<BR><BR>[Called By]<UL><LI><a href="#[da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__main
</UL>

<P><STRONG><a name="[e3]"></a>__scatterload_rt2</STRONG> (Thumb, 44 bytes, Stack size unknown bytes, __scatter.o(!!!scatter), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry
</UL>

<P><STRONG><a name="[39b]"></a>__scatterload_rt2_thumb_only</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __scatter.o(!!!scatter), UNUSED)

<P><STRONG><a name="[39c]"></a>__scatterload_null</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __scatter.o(!!!scatter), UNUSED)

<P><STRONG><a name="[e4]"></a>__scatterload_copy</STRONG> (Thumb, 26 bytes, Stack size unknown bytes, __scatter_copy.o(!!handler_copy), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload_copy
</UL>
<BR>[Called By]<UL><LI><a href="#[e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload_copy
</UL>

<P><STRONG><a name="[39d]"></a>__scatterload_zeroinit</STRONG> (Thumb, 28 bytes, Stack size unknown bytes, __scatter_zi.o(!!handler_zi), UNUSED)

<P><STRONG><a name="[e5]"></a>_printf_n</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, _printf_n.o(.ARM.Collect$$_printf_percent$$00000001))
<BR><BR>[Calls]<UL><LI><a href="#[e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_charcount
</UL>

<P><STRONG><a name="[1d0]"></a>_printf_percent</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, _printf_percent.o(.ARM.Collect$$_printf_percent$$00000000))
<BR><BR>[Called By]<UL><LI><a href="#[1ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__printf
</UL>

<P><STRONG><a name="[e7]"></a>_printf_p</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, _printf_p.o(.ARM.Collect$$_printf_percent$$00000002))
<BR><BR>[Stack]<UL><LI>Max Depth = 64 + Unknown Stack Size
<LI>Call Chain = _printf_p &rArr; _printf_hex_ptr &rArr; _printf_longlong_hex &rArr; _printf_int_common &rArr; _printf_post_padding
</UL>
<BR>[Calls]<UL><LI><a href="#[e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_hex_ptr
</UL>

<P><STRONG><a name="[e9]"></a>_printf_f</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, _printf_f.o(.ARM.Collect$$_printf_percent$$00000003))
<BR><BR>[Stack]<UL><LI>Max Depth = 320 + Unknown Stack Size
<LI>Call Chain = _printf_f &rArr; _printf_fp_dec &rArr; _printf_fp_dec_real &rArr; _fp_digits &rArr; _btod_etento &rArr; _btod_emul &rArr; _e2e
</UL>
<BR>[Calls]<UL><LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_fp_dec
</UL>

<P><STRONG><a name="[eb]"></a>_printf_e</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, _printf_e.o(.ARM.Collect$$_printf_percent$$00000004))
<BR><BR>[Stack]<UL><LI>Max Depth = 320 + Unknown Stack Size
<LI>Call Chain = _printf_e &rArr; _printf_fp_dec &rArr; _printf_fp_dec_real &rArr; _fp_digits &rArr; _btod_etento &rArr; _btod_emul &rArr; _e2e
</UL>
<BR>[Calls]<UL><LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_fp_dec
</UL>

<P><STRONG><a name="[ec]"></a>_printf_g</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, _printf_g.o(.ARM.Collect$$_printf_percent$$00000005))
<BR><BR>[Stack]<UL><LI>Max Depth = 320 + Unknown Stack Size
<LI>Call Chain = _printf_g &rArr; _printf_fp_dec &rArr; _printf_fp_dec_real &rArr; _fp_digits &rArr; _btod_etento &rArr; _btod_emul &rArr; _e2e
</UL>
<BR>[Calls]<UL><LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_fp_dec
</UL>

<P><STRONG><a name="[ed]"></a>_printf_a</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, _printf_a.o(.ARM.Collect$$_printf_percent$$00000006))
<BR><BR>[Stack]<UL><LI>Max Depth = 112 + Unknown Stack Size
<LI>Call Chain = _printf_a &rArr; _printf_fp_hex &rArr; _printf_fp_hex_real &rArr; _printf_fp_infnan &rArr; _printf_post_padding
</UL>
<BR>[Calls]<UL><LI><a href="#[ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_fp_hex
</UL>

<P><STRONG><a name="[39e]"></a>_printf_ll</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, _printf_ll.o(.ARM.Collect$$_printf_percent$$00000007))

<P><STRONG><a name="[ef]"></a>_printf_i</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, _printf_i.o(.ARM.Collect$$_printf_percent$$00000008))
<BR><BR>[Stack]<UL><LI>Max Depth = 72 + Unknown Stack Size
<LI>Call Chain = _printf_i &rArr; _printf_int_dec &rArr; _printf_int_common &rArr; _printf_post_padding
</UL>
<BR>[Calls]<UL><LI><a href="#[f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_int_dec
</UL>

<P><STRONG><a name="[f1]"></a>_printf_d</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, _printf_d.o(.ARM.Collect$$_printf_percent$$00000009))
<BR><BR>[Stack]<UL><LI>Max Depth = 72 + Unknown Stack Size
<LI>Call Chain = _printf_d &rArr; _printf_int_dec &rArr; _printf_int_common &rArr; _printf_post_padding
</UL>
<BR>[Calls]<UL><LI><a href="#[f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_int_dec
</UL>

<P><STRONG><a name="[f2]"></a>_printf_u</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, _printf_u.o(.ARM.Collect$$_printf_percent$$0000000A))
<BR><BR>[Stack]<UL><LI>Max Depth = 72 + Unknown Stack Size
<LI>Call Chain = _printf_u &rArr; _printf_int_dec &rArr; _printf_int_common &rArr; _printf_post_padding
</UL>
<BR>[Calls]<UL><LI><a href="#[f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_int_dec
</UL>

<P><STRONG><a name="[f3]"></a>_printf_o</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, _printf_o.o(.ARM.Collect$$_printf_percent$$0000000B))
<BR><BR>[Stack]<UL><LI>Max Depth = 64 + Unknown Stack Size
<LI>Call Chain = _printf_o &rArr; _printf_int_oct &rArr; _printf_longlong_oct &rArr; _printf_int_common &rArr; _printf_post_padding
</UL>
<BR>[Calls]<UL><LI><a href="#[f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_int_oct
</UL>

<P><STRONG><a name="[f5]"></a>_printf_x</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, _printf_x.o(.ARM.Collect$$_printf_percent$$0000000C))
<BR><BR>[Stack]<UL><LI>Max Depth = 80 + Unknown Stack Size
<LI>Call Chain = _printf_x &rArr; _printf_int_hex &rArr; _printf_longlong_hex &rArr; _printf_int_common &rArr; _printf_post_padding
</UL>
<BR>[Calls]<UL><LI><a href="#[f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_int_hex
</UL>

<P><STRONG><a name="[f7]"></a>_printf_lli</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, _printf_lli.o(.ARM.Collect$$_printf_percent$$0000000D))
<BR><BR>[Stack]<UL><LI>Max Depth = 72 + Unknown Stack Size
<LI>Call Chain = _printf_lli &rArr; _printf_longlong_dec &rArr; _printf_int_common &rArr; _printf_post_padding
</UL>
<BR>[Calls]<UL><LI><a href="#[f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_longlong_dec
</UL>

<P><STRONG><a name="[f9]"></a>_printf_lld</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, _printf_lld.o(.ARM.Collect$$_printf_percent$$0000000E))
<BR><BR>[Stack]<UL><LI>Max Depth = 72 + Unknown Stack Size
<LI>Call Chain = _printf_lld &rArr; _printf_longlong_dec &rArr; _printf_int_common &rArr; _printf_post_padding
</UL>
<BR>[Calls]<UL><LI><a href="#[f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_longlong_dec
</UL>

<P><STRONG><a name="[fa]"></a>_printf_llu</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, _printf_llu.o(.ARM.Collect$$_printf_percent$$0000000F))
<BR><BR>[Stack]<UL><LI>Max Depth = 72 + Unknown Stack Size
<LI>Call Chain = _printf_llu &rArr; _printf_longlong_dec &rArr; _printf_int_common &rArr; _printf_post_padding
</UL>
<BR>[Calls]<UL><LI><a href="#[f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_longlong_dec
</UL>

<P><STRONG><a name="[fb]"></a>_printf_llo</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, _printf_llo.o(.ARM.Collect$$_printf_percent$$00000010))
<BR><BR>[Stack]<UL><LI>Max Depth = 56 + Unknown Stack Size
<LI>Call Chain = _printf_llo &rArr; _printf_ll_oct &rArr; _printf_longlong_oct &rArr; _printf_int_common &rArr; _printf_post_padding
</UL>
<BR>[Calls]<UL><LI><a href="#[fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_ll_oct
</UL>

<P><STRONG><a name="[fd]"></a>_printf_llx</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, _printf_llx.o(.ARM.Collect$$_printf_percent$$00000011))
<BR><BR>[Stack]<UL><LI>Max Depth = 64 + Unknown Stack Size
<LI>Call Chain = _printf_llx &rArr; _printf_ll_hex &rArr; _printf_longlong_hex &rArr; _printf_int_common &rArr; _printf_post_padding
</UL>
<BR>[Calls]<UL><LI><a href="#[fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_ll_hex
</UL>

<P><STRONG><a name="[39f]"></a>_printf_l</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, _printf_l.o(.ARM.Collect$$_printf_percent$$00000012))

<P><STRONG><a name="[ff]"></a>_printf_c</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, _printf_c.o(.ARM.Collect$$_printf_percent$$00000013))
<BR><BR>[Stack]<UL><LI>Max Depth = 40 + Unknown Stack Size
<LI>Call Chain = _printf_c &rArr; _printf_char &rArr; _printf_cs_common &rArr; _printf_str &rArr; _printf_post_padding
</UL>
<BR>[Calls]<UL><LI><a href="#[100]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_char
</UL>

<P><STRONG><a name="[101]"></a>_printf_s</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, _printf_s.o(.ARM.Collect$$_printf_percent$$00000014))
<BR><BR>[Stack]<UL><LI>Max Depth = 40 + Unknown Stack Size
<LI>Call Chain = _printf_s &rArr; _printf_string &rArr; _printf_cs_common &rArr; _printf_str &rArr; _printf_post_padding
</UL>
<BR>[Calls]<UL><LI><a href="#[102]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_string
</UL>

<P><STRONG><a name="[103]"></a>_printf_lc</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, _printf_lc.o(.ARM.Collect$$_printf_percent$$00000015))
<BR><BR>[Stack]<UL><LI>Max Depth = 96 + Unknown Stack Size
<LI>Call Chain = _printf_lc &rArr; _printf_wchar &rArr; _printf_lcs_common &rArr; _printf_wctomb &rArr; _wcrtomb &rArr; __rt_ctype_table &rArr; __rt_locale
</UL>
<BR>[Calls]<UL><LI><a href="#[104]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_wchar
</UL>

<P><STRONG><a name="[105]"></a>_printf_ls</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, _printf_ls.o(.ARM.Collect$$_printf_percent$$00000016))
<BR><BR>[Stack]<UL><LI>Max Depth = 96 + Unknown Stack Size
<LI>Call Chain = _printf_ls &rArr; _printf_wstring &rArr; _printf_lcs_common &rArr; _printf_wctomb &rArr; _wcrtomb &rArr; __rt_ctype_table &rArr; __rt_locale
</UL>
<BR>[Calls]<UL><LI><a href="#[106]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_wstring
</UL>

<P><STRONG><a name="[3a0]"></a>_printf_percent_end</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, _printf_percent_end.o(.ARM.Collect$$_printf_percent$$00000017))

<P><STRONG><a name="[107]"></a>__rt_lib_init</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit.o(.ARM.Collect$$libinit$$00000000))
<BR><BR>[Stack]<UL><LI>Max Depth = 24 + Unknown Stack Size
<LI>Call Chain = __rt_lib_init &rArr; _fp_init &rArr; __rt_fp_status_addr &rArr; __user_perthread_libspace
</UL>
<BR>[Calls]<UL><LI><a href="#[108]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_init
</UL>
<BR>[Called By]<UL><LI><a href="#[e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry
</UL>

<P><STRONG><a name="[109]"></a>__rt_lib_init_heap_2</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000001))
<BR><BR>[Stack]<UL><LI>Max Depth = 64 + Unknown Stack Size
<LI>Call Chain = __rt_lib_init_heap_2 &rArr; _init_alloc &rArr; __rt_SIGRTMEM &rArr; __rt_SIGRTMEM_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[10a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_init_alloc
</UL>

<P><STRONG><a name="[3a1]"></a>__rt_lib_init_heap_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000006))

<P><STRONG><a name="[10b]"></a>__rt_lib_init_lc_common</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000000B))
<BR><BR>[Stack]<UL><LI>Max Depth = 8 + Unknown Stack Size
<LI>Call Chain = __rt_lib_init_lc_common &rArr; __rt_locale
</UL>
<BR>[Calls]<UL><LI><a href="#[10c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_locale
</UL>

<P><STRONG><a name="[3a2]"></a>__rt_lib_init_rand_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000000A))

<P><STRONG><a name="[3a3]"></a>__rt_lib_init_user_alloc_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000008))

<P><STRONG><a name="[10d]"></a>__rt_lib_init_lc_collate_2</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000000C))
<BR><BR>[Stack]<UL><LI>Max Depth = 8 + Unknown Stack Size
<LI>Call Chain = __rt_lib_init_lc_collate_2 &rArr; _get_lc_collate
</UL>
<BR>[Calls]<UL><LI><a href="#[10e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_get_lc_collate
</UL>

<P><STRONG><a name="[3a4]"></a>__rt_lib_init_lc_collate_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000000D))

<P><STRONG><a name="[10f]"></a>__rt_lib_init_lc_ctype_2</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000000E))
<BR><BR>[Stack]<UL><LI>Max Depth = 8 + Unknown Stack Size
<LI>Call Chain = __rt_lib_init_lc_ctype_2 &rArr; _get_lc_ctype
</UL>
<BR>[Calls]<UL><LI><a href="#[2b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_get_lc_ctype
</UL>

<P><STRONG><a name="[3a5]"></a>__rt_lib_init_lc_ctype_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000000F))

<P><STRONG><a name="[110]"></a>__rt_lib_init_lc_monetary_2</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000010))
<BR><BR>[Stack]<UL><LI>Max Depth = 8 + Unknown Stack Size
<LI>Call Chain = __rt_lib_init_lc_monetary_2 &rArr; _get_lc_monetary
</UL>
<BR>[Calls]<UL><LI><a href="#[111]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_get_lc_monetary
</UL>

<P><STRONG><a name="[3a6]"></a>__rt_lib_init_lc_monetary_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000011))

<P><STRONG><a name="[112]"></a>__rt_lib_init_lc_numeric_2</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000012))
<BR><BR>[Stack]<UL><LI>Max Depth = 8 + Unknown Stack Size
<LI>Call Chain = __rt_lib_init_lc_numeric_2 &rArr; _get_lc_numeric
</UL>
<BR>[Calls]<UL><LI><a href="#[113]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_get_lc_numeric
</UL>

<P><STRONG><a name="[3a7]"></a>__rt_lib_init_atexit_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000017))

<P><STRONG><a name="[3a8]"></a>__rt_lib_init_clock_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000001D))

<P><STRONG><a name="[3a9]"></a>__rt_lib_init_fp_trap_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000001B))

<P><STRONG><a name="[3aa]"></a>__rt_lib_init_getenv_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000001F))

<P><STRONG><a name="[3ab]"></a>__rt_lib_init_lc_numeric_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000013))

<P><STRONG><a name="[3ac]"></a>__rt_lib_init_lc_time_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000015))

<P><STRONG><a name="[3ad]"></a>__rt_lib_init_signal_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000019))

<P><STRONG><a name="[114]"></a>__rt_lib_init_stdio_2</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000020))
<BR><BR>[Stack]<UL><LI>Max Depth = 168 + Unknown Stack Size
<LI>Call Chain = __rt_lib_init_stdio_2 &rArr; _initio &rArr; freopen &rArr; _freopen_locked &rArr; _fclose_internal &rArr; _fflush &rArr; _writebuf &rArr; _sys_write
</UL>
<BR>[Calls]<UL><LI><a href="#[115]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_initio
</UL>

<P><STRONG><a name="[3ae]"></a>__rt_lib_init_alloca_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000002A))

<P><STRONG><a name="[3af]"></a>__rt_lib_init_argv_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000028))

<P><STRONG><a name="[116]"></a>__rt_lib_init_cpp_2</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000002D))
<BR><BR>[Stack]<UL><LI>Max Depth = 16 + Unknown Stack Size
<LI>Call Chain = __rt_lib_init_cpp_2 &rArr; __cpp_initialize__aeabi_
</UL>
<BR>[Calls]<UL><LI><a href="#[e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cpp_initialize__aeabi_
</UL>

<P><STRONG><a name="[3b0]"></a>__rt_lib_init_exceptions_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000002C))

<P><STRONG><a name="[3b1]"></a>__rt_lib_init_stdio_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000021))

<P><STRONG><a name="[3b2]"></a>__rt_lib_init_cpp_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000002E))

<P><STRONG><a name="[3b3]"></a>__rt_lib_init_return</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000002F))

<P><STRONG><a name="[11c]"></a>__rt_lib_shutdown</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown.o(.ARM.Collect$$libshutdown$$00000000))
<BR><BR>[Called By]<UL><LI><a href="#[11b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_exit_ls
<LI><a href="#[217]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;abort
</UL>

<P><STRONG><a name="[117]"></a>__rt_lib_shutdown_cpp_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$00000001))
<BR><BR>[Stack]<UL><LI>Max Depth = 56 + Unknown Stack Size
<LI>Call Chain = __rt_lib_shutdown_cpp_1 &rArr; __cxa_finalize &rArr; free &rArr; _free_internal &rArr; _mutex_release
</UL>
<BR>[Calls]<UL><LI><a href="#[118]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxa_finalize
</UL>

<P><STRONG><a name="[119]"></a>__rt_lib_shutdown_stdio_2</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$00000002))
<BR><BR>[Stack]<UL><LI>Max Depth = 128 + Unknown Stack Size
<LI>Call Chain = __rt_lib_shutdown_stdio_2 &rArr; _terminateio &rArr; _fclose_internal &rArr; _fflush &rArr; _writebuf &rArr; _sys_write
</UL>
<BR>[Calls]<UL><LI><a href="#[11a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_terminateio
</UL>

<P><STRONG><a name="[3b4]"></a>__rt_lib_shutdown_fp_trap_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$00000006))

<P><STRONG><a name="[3b5]"></a>__rt_lib_shutdown_heap_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$0000000E))

<P><STRONG><a name="[3b6]"></a>__rt_lib_shutdown_return</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$0000000F))

<P><STRONG><a name="[3b7]"></a>__rt_lib_shutdown_signal_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$00000009))

<P><STRONG><a name="[3b8]"></a>__rt_lib_shutdown_stdio_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$00000003))

<P><STRONG><a name="[3b9]"></a>__rt_lib_shutdown_user_alloc_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$0000000B))

<P><STRONG><a name="[1d5]"></a>__rt_exit</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rtexit.o(.ARM.Collect$$rtexit$$00000000))
<BR><BR>[Called By]<UL><LI><a href="#[121]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;exit
</UL>

<P><STRONG><a name="[11b]"></a>__rt_exit_ls</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rtexit2.o(.ARM.Collect$$rtexit$$00000003))
<BR><BR>[Calls]<UL><LI><a href="#[11c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_lib_shutdown
</UL>

<P><STRONG><a name="[3ba]"></a>__rt_exit_prels_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rtexit2.o(.ARM.Collect$$rtexit$$00000002))

<P><STRONG><a name="[11d]"></a>__rt_exit_exit</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rtexit2.o(.ARM.Collect$$rtexit$$00000004))
<BR><BR>[Calls]<UL><LI><a href="#[11e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_sys_exit
</UL>

<P><STRONG><a name="[e2]"></a>__rt_entry</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, rtx_conf_cm.o(.emb_text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24 + Unknown Stack Size
<LI>Call Chain = __rt_entry &rArr; __rt_lib_init &rArr; _fp_init &rArr; __rt_fp_status_addr &rArr; __user_perthread_libspace
</UL>
<BR>[Calls]<UL><LI><a href="#[120]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osKernelStart
<LI><a href="#[107]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_lib_init
<LI><a href="#[121]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;exit
<LI><a href="#[11f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_setup_stackheap
</UL>
<BR>[Called By]<UL><LI><a href="#[da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__main
<LI><a href="#[e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload_rt2
</UL>

<P><STRONG><a name="[1bd]"></a>rt_set_PSP</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, hal_cm3.o(.emb_text))
<BR><BR>[Called By]<UL><LI><a href="#[16a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_sys_init
</UL>

<P><STRONG><a name="[3bb]"></a>os_set_env</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, hal_cm3.o(.emb_text), UNUSED)

<P><STRONG><a name="[1c7]"></a>_alloc_box</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, hal_cm3.o(.emb_text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[1c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_calloc_box
</UL>

<P><STRONG><a name="[3bc]"></a>_free_box</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, hal_cm3.o(.emb_text), UNUSED)

<P><STRONG><a name="[19]"></a>SVC_Handler</STRONG> (Thumb, 108 bytes, Stack size 0 bytes, hal_cm3.o(.emb_text))
<BR><BR>[Calls]<UL><LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_stk_check
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_armcm3.o(RESET)
</UL>
<P><STRONG><a name="[1b]"></a>PendSV_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, hal_cm3.o(.emb_text))
<BR>[Address Reference Count : 1]<UL><LI> startup_armcm3.o(RESET)
</UL>
<P><STRONG><a name="[123]"></a>Sys_Handler</STRONG> (Thumb, 60 bytes, Stack size 0 bytes, hal_cm3.o(.emb_text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_stk_check
<LI><a href="#[125]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_systick
<LI><a href="#[124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_pop_req
</UL>

<P><STRONG><a name="[1c]"></a>SysTick_Handler</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, hal_cm3.o(.emb_text))
<BR>[Address Reference Count : 1]<UL><LI> startup_armcm3.o(RESET)
</UL>
<P><STRONG><a name="[126]"></a>__cxa_end_cleanup</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, arm_exceptions_cleanup.o(.emb_text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[128]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Unwind_Resume
<LI><a href="#[127]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_cxa_end_cleanup
</UL>

<P><STRONG><a name="[6]"></a>__ARM_Unwind_VRS_VFPpreserve_low</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, unwinder.o(.emb_text), UNUSED)

<P><STRONG><a name="[7]"></a>__ARM_Unwind_VRS_VFPpreserve_high</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, unwinder.o(.emb_text), UNUSED)

<P><STRONG><a name="[8]"></a>__ARM_Unwind_VRS_VFPrestore_low</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, unwinder.o(.emb_text), UNUSED)

<P><STRONG><a name="[9]"></a>__ARM_Unwind_VRS_VFPrestore_high</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, unwinder.o(.emb_text), UNUSED)

<P><STRONG><a name="[223]"></a>__ARM_Unwind_VRS_corerestore</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, unwinder.o(.emb_text))
<BR><BR>[Called By]<UL><LI><a href="#[222]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_unwind_next_frame
<LI><a href="#[12b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_Unwind_Resume
</UL>

<P><STRONG><a name="[129]"></a>_Unwind_RaiseException</STRONG> (Thumb, 46 bytes, Stack size 0 bytes, unwinder.o(.emb_text))
<BR><BR>[Stack]<UL><LI>Max Depth = 432 + Unknown Stack Size
<LI>Call Chain = _Unwind_RaiseException &rArr; __ARM_Unwind_RaiseException &rArr; malloc &rArr; _malloc_internal &rArr; __Heap_Full &rArr; __Heap_ProvideMemory &rArr; _free_internal &rArr; _mutex_release
</UL>
<BR>[Calls]<UL><LI><a href="#[12a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_Unwind_RaiseException
</UL>
<BR>[Called By]<UL><LI><a href="#[144]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxa_throw
<LI><a href="#[1e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxa_rethrow
</UL>

<P><STRONG><a name="[128]"></a>_Unwind_Resume</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, unwinder.o(.emb_text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[12b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_Unwind_Resume
</UL>
<BR>[Called By]<UL><LI><a href="#[126]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxa_end_cleanup
</UL>

<P><STRONG><a name="[1e8]"></a>_Unwind_Activity</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, unwind_activity.o(.emb_text))
<BR><BR>[Called By]<UL><LI><a href="#[1db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_unwind_cpp_prcommon
<LI><a href="#[12a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_Unwind_RaiseException
<LI><a href="#[220]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;find_and_expand_eit_entry
<LI><a href="#[144]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxa_throw
<LI><a href="#[1e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxa_rethrow
</UL>

<P><STRONG><a name="[13]"></a>Reset_Handler</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, startup_armcm3.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_armcm3.o(RESET)
</UL>
<P><STRONG><a name="[3bd]"></a>_maybe_terminate_alloc</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, maybetermalloc1.o(.emb_text), UNUSED)

<P><STRONG><a name="[14]"></a>NMI_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_armcm3.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[14]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NMI_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[14]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NMI_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_armcm3.o(RESET)
</UL>
<P><STRONG><a name="[15]"></a>HardFault_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_armcm3.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[15]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HardFault_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[15]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HardFault_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_armcm3.o(RESET)
</UL>
<P><STRONG><a name="[16]"></a>MemManage_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_armcm3.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[16]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MemManage_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[16]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MemManage_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_armcm3.o(RESET)
</UL>
<P><STRONG><a name="[17]"></a>BusFault_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_armcm3.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[17]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BusFault_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[17]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BusFault_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_armcm3.o(RESET)
</UL>
<P><STRONG><a name="[18]"></a>UsageFault_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_armcm3.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[18]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UsageFault_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[18]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UsageFault_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_armcm3.o(RESET)
</UL>
<P><STRONG><a name="[1a]"></a>DebugMon_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_armcm3.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[1a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DebugMon_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[1a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DebugMon_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_armcm3.o(RESET)
</UL>
<P><STRONG><a name="[1d]"></a>DEF_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_armcm3.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[1d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DEF_IRQHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[1d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DEF_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_armcm3.o(RESET)
</UL>
<P><STRONG><a name="[1c9]"></a>__user_initial_stackheap</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, startup_armcm3.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[11f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_setup_stackheap
</UL>

<P><STRONG><a name="[3be]"></a>SystemCoreClockUpdate</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, system_armcm3.o(.text), UNUSED)

<P><STRONG><a name="[20]"></a>SystemInit</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, system_armcm3.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_armcm3.o(.text)
</UL>
<P><STRONG><a name="[29]"></a>os_idle_demon</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, rtx_conf_cm.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> rt_task.o(.text)
</UL>
<P><STRONG><a name="[db]"></a>os_error</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, rtx_conf_cm.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_stk_check
<LI><a href="#[1c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_mbx_psh
<LI><a href="#[1a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_psq_enq
</UL>

<P><STRONG><a name="[dc]"></a>__user_perthread_libspace</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, rtx_conf_cm.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __user_perthread_libspace
</UL>
<BR>[Calls]<UL><LI><a href="#[12c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_tsk_self
</UL>
<BR>[Called By]<UL><LI><a href="#[204]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_errno_addr
<LI><a href="#[232]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_fp_status_addr
</UL>

<P><STRONG><a name="[dd]"></a>_mutex_initialize</STRONG> (Thumb, 38 bytes, Stack size 8 bytes, rtx_conf_cm.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = _mutex_initialize
</UL>
<BR>[Calls]<UL><LI><a href="#[12d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_mut_init
</UL>
<BR>[Called By]<UL><LI><a href="#[236]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__Heap_Initialize
<LI><a href="#[115]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_initio
<LI><a href="#[247]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fopen$locked
</UL>

<P><STRONG><a name="[de]"></a>_mutex_acquire</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, rtx_conf_cm.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = _mutex_acquire
</UL>
<BR>[Calls]<UL><LI><a href="#[12c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_tsk_self
</UL>
<BR>[Called By]<UL><LI><a href="#[11a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_terminateio
<LI><a href="#[20f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ferror
<LI><a href="#[20e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;clearerr
<LI><a href="#[20d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fseek
<LI><a href="#[20c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fclose
<LI><a href="#[20b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ftell
<LI><a href="#[1d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fflush
<LI><a href="#[1d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_do_fflush
<LI><a href="#[1ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_char_file
<LI><a href="#[247]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fopen$locked
<LI><a href="#[210]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;freopen
<LI><a href="#[246]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_freopen_locked
<LI><a href="#[212]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setvbuf
<LI><a href="#[264]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_flushlinebuffered
<LI><a href="#[26b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fwrite
<LI><a href="#[269]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fread_bytes_avail
<LI><a href="#[1f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_free_internal
<LI><a href="#[1f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_malloc_internal
</UL>

<P><STRONG><a name="[df]"></a>_mutex_release</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, rtx_conf_cm.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = _mutex_release
</UL>
<BR>[Calls]<UL><LI><a href="#[12c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_tsk_self
</UL>
<BR>[Called By]<UL><LI><a href="#[11a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_terminateio
<LI><a href="#[20f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ferror
<LI><a href="#[20e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;clearerr
<LI><a href="#[20d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fseek
<LI><a href="#[20c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fclose
<LI><a href="#[20b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ftell
<LI><a href="#[1d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fflush
<LI><a href="#[1d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_do_fflush
<LI><a href="#[1ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_char_file
<LI><a href="#[247]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fopen$locked
<LI><a href="#[210]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;freopen
<LI><a href="#[246]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_freopen_locked
<LI><a href="#[212]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setvbuf
<LI><a href="#[264]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_flushlinebuffered
<LI><a href="#[26b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fwrite
<LI><a href="#[269]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fread_bytes_avail
<LI><a href="#[1f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_free_internal
<LI><a href="#[1f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_malloc_internal
</UL>

<P><STRONG><a name="[12e]"></a>_ttywrch</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, retarget.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[12f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SER_PutChar
</UL>
<BR>[Called By]<UL><LI><a href="#[267]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__default_signal_display
</UL>

<P><STRONG><a name="[130]"></a>_sys_open</STRONG> (Thumb, 60 bytes, Stack size 16 bytes, retarget.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = _sys_open
</UL>
<BR>[Calls]<UL><LI><a href="#[131]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcmp
</UL>
<BR>[Called By]<UL><LI><a href="#[246]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_freopen_locked
</UL>

<P><STRONG><a name="[209]"></a>_sys_close</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, retarget.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[208]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fclose_internal
</UL>

<P><STRONG><a name="[132]"></a>_sys_write</STRONG> (Thumb, 48 bytes, Stack size 24 bytes, retarget.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = _sys_write
</UL>
<BR>[Calls]<UL><LI><a href="#[12f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SER_PutChar
</UL>
<BR>[Called By]<UL><LI><a href="#[205]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_writebuf
</UL>

<P><STRONG><a name="[133]"></a>_sys_read</STRONG> (Thumb, 64 bytes, Stack size 24 bytes, retarget.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = _sys_read
</UL>
<BR>[Calls]<UL><LI><a href="#[12f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SER_PutChar
<LI><a href="#[134]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SER_GetChar
</UL>
<BR>[Called By]<UL><LI><a href="#[262]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_readbuf
</UL>

<P><STRONG><a name="[206]"></a>_sys_seek</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, retarget.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[205]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_writebuf
<LI><a href="#[263]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__filbuf
</UL>

<P><STRONG><a name="[3bf]"></a>_sys_ensure</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, retarget.o(.text), UNUSED)

<P><STRONG><a name="[202]"></a>_sys_flen</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, retarget.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[1d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fseek
<LI><a href="#[266]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__flsbuf
</UL>

<P><STRONG><a name="[200]"></a>_sys_istty</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, retarget.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[1d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fseek
<LI><a href="#[266]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__flsbuf
</UL>

<P><STRONG><a name="[11e]"></a>_sys_exit</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, retarget.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[11d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_exit_exit
<LI><a href="#[217]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;abort
<LI><a href="#[24b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__sig_exit
</UL>

<P><STRONG><a name="[151]"></a>SER_Init</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, serial.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[12f]"></a>SER_PutChar</STRONG> (Thumb, 46 bytes, Stack size 0 bytes, serial.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[133]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_sys_read
<LI><a href="#[132]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_sys_write
<LI><a href="#[12e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ttywrch
</UL>

<P><STRONG><a name="[134]"></a>SER_GetChar</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, serial.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[133]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_sys_read
</UL>

<P><STRONG><a name="[135]"></a>stl_test()</STRONG> (Thumb, 460 bytes, Stack size 56 bytes, main.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1144 + Unknown Stack Size
<LI>Call Chain = stl_test() &rArr; std::operator &lang;&lang;&lang;std::char_traits&lang;char&rang;&rang;(std::basic_ostream&lang;char, T1&rang;&, const char*) &rArr; __rw::__rw_insert&lang;char, std::char_traits&lang;char&rang;, char&rang;(std::basic_ostream&lang;T1, T2&rang;&, const T3*, long, long) &rArr; __rw::__rw_insert&lang;char, std::char_traits&lang;char&rang;, char&rang;(std::basic_ostream&lang;T1, T2&rang;&, T3*, long, long) &rArr; std::basic_ostream&lang;char, std::char_traits&lang;char&rang;&rang;::sentry::sentry(std::basic_ostream&lang;char, std::char_traits&lang;char&rang;&rang;&) &rArr; std::basic_ostream&lang;char, std::char_traits&lang;char&rang;&rang;::_C_opfx() &rArr; std::basic_ostream&lang;char, std::char_traits&lang;char&rang;&rang;::flush() &rArr; std::basic_ios&lang;char, std::char_traits&lang;char&rang;&rang;::setstate(int) &rArr; std::basic_ios&lang;char, std::char_traits&lang;char&rang;&rang;::clear(int, int) &rArr; std::ios_base::_C_unsafe_clear(int, int) &rArr; __rw::__rw_throw(int, ...) &rArr; std::__rw_exception::_C_vformat(int, std::__va_list) &rArr; __rw::__rw_vfmatstr(char*, unsigned, int, std::__va_list) &rArr; std::locale::locale() &rArr; std::locale::_C_init() &rArr; __rw::__rw_locale_imp::__rw_locale_imp(const char*, unsigned, unsigned) &rArr; __aeabi_vec_new_cookie &rArr; __cxa_vec_new &rArr; __ARM_array_new_general &rArr; __cxa_rethrow &rArr; _Unwind_RaiseException &rArr; __ARM_Unwind_RaiseException &rArr; malloc &rArr; _malloc_internal &rArr; __Heap_Full &rArr; __Heap_ProvideMemory &rArr; _free_internal &rArr; _mutex_release
</UL>
<BR>[Calls]<UL><LI><a href="#[13a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
<LI><a href="#[141]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::operator &lang;&lang;&lang;std::char_traits&lang;char&rang;&rang;(std::basic_ostream&lang;char, T1&rang;&, const char*)
<LI><a href="#[137]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::vector&lang;int, std::allocator&lang;int&rang;&rang;::push_back(const int&)
<LI><a href="#[138]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::vector&lang;int, std::allocator&lang;int&rang;&rang;::begin()
<LI><a href="#[139]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::vector&lang;int, std::allocator&lang;int&rang;&rang;::end()
<LI><a href="#[13b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::map&lang;int, int, std::less&lang;int&rang;, std::allocator&lang;std::pair&lang;const int, int&rang;&rang;&rang;::operator [](const int&)
<LI><a href="#[146]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;::operator =(const char*)
<LI><a href="#[14b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;::replace(unsigned, unsigned, const char*, unsigned)
<LI><a href="#[142]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::basic_ostream&lang;char, std::char_traits&lang;char&rang;&rang;::operator &lang;&lang;(std::basic_ostream&lang;char, std::char_traits&lang;char&rang;&rang;&(*)(std::basic_ostream&lang;char, std::char_traits&lang;char&rang;&rang;&))
<LI><a href="#[136]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::vector&lang;int, std::allocator&lang;int&rang;&rang;::size() const
<LI><a href="#[148]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;::length() const
<LI><a href="#[149]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;::size() const
<LI><a href="#[14c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;::data() const
<LI><a href="#[13d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rw_tree_iter&lang;std::pair&lang;const int, int&rang;, int, std::pair&lang;const int, int&rang;*, std::pair&lang;const int, int&rang;&, __rw::__rw_rb_tree_node&lang;std::allocator&lang;std::pair&lang;const int, int&rang;&rang;, std::pair&lang;const int, int&rang;, int, __rw::__select1st&lang;std::pair&lang;const int, int&rang;, int&rang;&rang;&rang;::operator -&rang;() const
<LI><a href="#[140]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::operator !=&lang;std::pair&lang;const int, int&rang;, int, std::pair&lang;const int, int&rang;*, std::pair&lang;const int, int&rang;&, std::pair&lang;const int, int&rang;*, std::pair&lang;const int, int&rang;&, __rw::__rw_rb_tree_node&lang;std::allocator&lang;std::pair&lang;const int, int&rang;&rang;, std::pair&lang;const int, int&rang;, int, __rw::__select1st&lang;std::pair&lang;const int, int&rang;, int&rang;&rang;&rang;(const __rw::__rw_tree_iter&lang;T1, T2, T3, T4, T7&rang;&, const __rw::__rw_tree_iter&lang;T1, T2, T5, T6, T7&rang;&)
<LI><a href="#[13c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rb_tree&lang;int, std::pair&lang;const int, int&rang;, __rw::__select1st&lang;std::pair&lang;const int, int&rang;, int&rang;, std::less&lang;int&rang;, std::allocator&lang;std::pair&lang;const int, int&rang;&rang;&rang;::begin()
<LI><a href="#[13f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rb_tree&lang;int, std::pair&lang;const int, int&rang;, __rw::__select1st&lang;std::pair&lang;const int, int&rang;, int&rang;, std::less&lang;int&rang;, std::allocator&lang;std::pair&lang;const int, int&rang;&rang;&rang;::end()
<LI><a href="#[13e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rw_tree_iter&lang;std::pair&lang;const int, int&rang;, int, std::pair&lang;const int, int&rang;*, std::pair&lang;const int, int&rang;&, __rw::__rw_rb_tree_node&lang;std::allocator&lang;std::pair&lang;const int, int&rang;&rang;, std::pair&lang;const int, int&rang;, int, __rw::__select1st&lang;std::pair&lang;const int, int&rang;, int&rang;&rang;&rang;::operator ++(int)
<LI><a href="#[14d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rw_insert&lang;char, std::char_traits&lang;char&rang;, char&rang;(std::basic_ostream&lang;T1, T2&rang;&, const T3*, long, long)
<LI><a href="#[14e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::ios_base::width(long)
<LI><a href="#[14a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::char_traits&lang;char&rang;::length(const char*)
<LI><a href="#[144]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxa_throw
<LI><a href="#[147]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxa_end_catch
<LI><a href="#[145]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxa_begin_catch
<LI><a href="#[143]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxa_allocate_exception
</UL>
<BR>[Called By]<UL><LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;threadX(const void*)
</UL>

<P><STRONG><a name="[59]"></a>threadX(const void*)</STRONG> (Thumb, 34 bytes, Stack size 16 bytes, main.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1160 + Unknown Stack Size
<LI>Call Chain = threadX(const void*) &rArr; stl_test() &rArr; std::operator &lang;&lang;&lang;std::char_traits&lang;char&rang;&rang;(std::basic_ostream&lang;char, T1&rang;&, const char*) &rArr; __rw::__rw_insert&lang;char, std::char_traits&lang;char&rang;, char&rang;(std::basic_ostream&lang;T1, T2&rang;&, const T3*, long, long) &rArr; __rw::__rw_insert&lang;char, std::char_traits&lang;char&rang;, char&rang;(std::basic_ostream&lang;T1, T2&rang;&, T3*, long, long) &rArr; std::basic_ostream&lang;char, std::char_traits&lang;char&rang;&rang;::sentry::sentry(std::basic_ostream&lang;char, std::char_traits&lang;char&rang;&rang;&) &rArr; std::basic_ostream&lang;char, std::char_traits&lang;char&rang;&rang;::_C_opfx() &rArr; std::basic_ostream&lang;char, std::char_traits&lang;char&rang;&rang;::flush() &rArr; std::basic_ios&lang;char, std::char_traits&lang;char&rang;&rang;::setstate(int) &rArr; std::basic_ios&lang;char, std::char_traits&lang;char&rang;&rang;::clear(int, int) &rArr; std::ios_base::_C_unsafe_clear(int, int) &rArr; __rw::__rw_throw(int, ...) &rArr; std::__rw_exception::_C_vformat(int, std::__va_list) &rArr; __rw::__rw_vfmatstr(char*, unsigned, int, std::__va_list) &rArr; std::locale::locale() &rArr; std::locale::_C_init() &rArr; __rw::__rw_locale_imp::__rw_locale_imp(const char*, unsigned, unsigned) &rArr; __aeabi_vec_new_cookie &rArr; __cxa_vec_new &rArr; __ARM_array_new_general &rArr; __cxa_rethrow &rArr; _Unwind_RaiseException &rArr; __ARM_Unwind_RaiseException &rArr; malloc &rArr; _malloc_internal &rArr; __Heap_Full &rArr; __Heap_ProvideMemory &rArr; _free_internal &rArr; _mutex_release
</UL>
<BR>[Calls]<UL><LI><a href="#[14f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osSignalWait
<LI><a href="#[150]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osSignalSet
<LI><a href="#[135]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;stl_test()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> main.o(.constdata)
</UL>
<P><STRONG><a name="[58]"></a>main</STRONG> (Thumb, 100 bytes, Stack size 24 bytes, main.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1112 + Unknown Stack Size
<LI>Call Chain = main &rArr; std::operator &lang;&lang;&lang;std::char_traits&lang;char&rang;&rang;(std::basic_ostream&lang;char, T1&rang;&, const char*) &rArr; __rw::__rw_insert&lang;char, std::char_traits&lang;char&rang;, char&rang;(std::basic_ostream&lang;T1, T2&rang;&, const T3*, long, long) &rArr; __rw::__rw_insert&lang;char, std::char_traits&lang;char&rang;, char&rang;(std::basic_ostream&lang;T1, T2&rang;&, T3*, long, long) &rArr; std::basic_ostream&lang;char, std::char_traits&lang;char&rang;&rang;::sentry::sentry(std::basic_ostream&lang;char, std::char_traits&lang;char&rang;&rang;&) &rArr; std::basic_ostream&lang;char, std::char_traits&lang;char&rang;&rang;::_C_opfx() &rArr; std::basic_ostream&lang;char, std::char_traits&lang;char&rang;&rang;::flush() &rArr; std::basic_ios&lang;char, std::char_traits&lang;char&rang;&rang;::setstate(int) &rArr; std::basic_ios&lang;char, std::char_traits&lang;char&rang;&rang;::clear(int, int) &rArr; std::ios_base::_C_unsafe_clear(int, int) &rArr; __rw::__rw_throw(int, ...) &rArr; std::__rw_exception::_C_vformat(int, std::__va_list) &rArr; __rw::__rw_vfmatstr(char*, unsigned, int, std::__va_list) &rArr; std::locale::locale() &rArr; std::locale::_C_init() &rArr; __rw::__rw_locale_imp::__rw_locale_imp(const char*, unsigned, unsigned) &rArr; __aeabi_vec_new_cookie &rArr; __cxa_vec_new &rArr; __ARM_array_new_general &rArr; __cxa_rethrow &rArr; _Unwind_RaiseException &rArr; __ARM_Unwind_RaiseException &rArr; malloc &rArr; _malloc_internal &rArr; __Heap_Full &rArr; __Heap_ProvideMemory &rArr; _free_internal &rArr; _mutex_release
</UL>
<BR>[Calls]<UL><LI><a href="#[151]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SER_Init
<LI><a href="#[152]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osThreadGetId
<LI><a href="#[153]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osThreadCreate
<LI><a href="#[14f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osSignalWait
<LI><a href="#[150]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osSignalSet
<LI><a href="#[141]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::operator &lang;&lang;&lang;std::char_traits&lang;char&rang;&rang;(std::basic_ostream&lang;char, T1&rang;&, const char*)
<LI><a href="#[142]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::basic_ostream&lang;char, std::char_traits&lang;char&rang;&rang;::operator &lang;&lang;(std::basic_ostream&lang;char, std::char_traits&lang;char&rang;&rang;&(*)(std::basic_ostream&lang;char, std::char_traits&lang;char&rang;&rang;&))
</UL>
<BR>[Address Reference Count : 1]<UL><LI> rtx_conf_cm.o(.constdata)
</UL>
<P><STRONG><a name="[15d]"></a>svcThreadGetId</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, rt_cmsis.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = svcThreadGetId
</UL>
<BR>[Calls]<UL><LI><a href="#[12c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_tsk_self
</UL>
<BR>[Called By]<UL><LI><a href="#[168]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;svcKernelStart
</UL>
<BR>[Address Reference Count : 1]<UL><LI> rt_cmsis.o(.text)
</UL>
<P><STRONG><a name="[15e]"></a>svcThreadTerminate</STRONG> (Thumb, 52 bytes, Stack size 16 bytes, rt_cmsis.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 68<LI>Call Chain = svcThreadTerminate &rArr; rt_tsk_delete &rArr; rt_dispatch &rArr; rt_put_prio
</UL>
<BR>[Calls]<UL><LI><a href="#[160]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_tsk_delete
<LI><a href="#[161]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_free_mem
<LI><a href="#[15f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_tid2ptcb
</UL>
<BR>[Called By]<UL><LI><a href="#[168]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;svcKernelStart
</UL>
<BR>[Address Reference Count : 1]<UL><LI> rt_cmsis.o(.text)
</UL>
<P><STRONG><a name="[165]"></a>osThreadExit</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, rt_cmsis.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> rt_cmsis.o(.text)
</UL>
<P><STRONG><a name="[162]"></a>svcThreadCreate</STRONG> (Thumb, 102 bytes, Stack size 16 bytes, rt_cmsis.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 68<LI>Call Chain = svcThreadCreate &rArr; rt_tsk_create &rArr; rt_dispatch &rArr; rt_put_prio
</UL>
<BR>[Calls]<UL><LI><a href="#[164]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_tsk_create
<LI><a href="#[161]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_free_mem
<LI><a href="#[163]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_alloc_mem
</UL>
<BR>[Called By]<UL><LI><a href="#[168]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;svcKernelStart
</UL>
<BR>[Address Reference Count : 1]<UL><LI> rt_cmsis.o(.text)
</UL>
<P><STRONG><a name="[166]"></a>svcMessageCreate</STRONG> (Thumb, 36 bytes, Stack size 8 bytes, rt_cmsis.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = svcMessageCreate
</UL>
<BR>[Calls]<UL><LI><a href="#[167]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_mbx_init
</UL>
<BR>[Called By]<UL><LI><a href="#[168]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;svcKernelStart
</UL>
<BR>[Address Reference Count : 1]<UL><LI> rt_cmsis.o(.text)
</UL>
<P><STRONG><a name="[168]"></a>svcKernelStart</STRONG> (Thumb, 176 bytes, Stack size 16 bytes, rt_cmsis.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 92<LI>Call Chain = svcKernelStart &rArr; rt_sys_init &rArr; rt_tsk_create &rArr; rt_dispatch &rArr; rt_put_prio
</UL>
<BR>[Calls]<UL><LI><a href="#[16a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_sys_init
<LI><a href="#[169]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_init_mem
<LI><a href="#[163]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_alloc_mem
<LI><a href="#[166]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;svcMessageCreate
<LI><a href="#[162]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;svcThreadCreate
<LI><a href="#[15e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;svcThreadTerminate
<LI><a href="#[15d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;svcThreadGetId
</UL>
<BR>[Address Reference Count : 1]<UL><LI> rt_cmsis.o(.text)
</UL>
<P><STRONG><a name="[120]"></a>osKernelStart</STRONG> (Thumb, 94 bytes, Stack size 0 bytes, rt_cmsis.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry
</UL>

<P><STRONG><a name="[3c0]"></a>osKernelRunning</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, rt_cmsis.o(.text), UNUSED)

<P><STRONG><a name="[16b]"></a>svcThreadYield</STRONG> (Thumb, 10 bytes, Stack size 8 bytes, rt_cmsis.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = svcThreadYield &rArr; rt_tsk_pass &rArr; rt_put_prio
</UL>
<BR>[Calls]<UL><LI><a href="#[16c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_tsk_pass
</UL>
<BR>[Address Reference Count : 1]<UL><LI> rt_cmsis.o(.text)
</UL>
<P><STRONG><a name="[16d]"></a>svcThreadSetPriority</STRONG> (Thumb, 46 bytes, Stack size 8 bytes, rt_cmsis.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = svcThreadSetPriority &rArr; rt_tsk_prio &rArr; rt_dispatch &rArr; rt_put_prio
</UL>
<BR>[Calls]<UL><LI><a href="#[16e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_tsk_prio
<LI><a href="#[15f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_tid2ptcb
</UL>
<BR>[Address Reference Count : 1]<UL><LI> rt_cmsis.o(.text)
</UL>
<P><STRONG><a name="[16f]"></a>svcThreadGetPriority</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, rt_cmsis.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = svcThreadGetPriority
</UL>
<BR>[Calls]<UL><LI><a href="#[15f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_tid2ptcb
</UL>
<BR>[Address Reference Count : 1]<UL><LI> rt_cmsis.o(.text)
</UL>
<P><STRONG><a name="[153]"></a>osThreadCreate</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, rt_cmsis.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[152]"></a>osThreadGetId</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, rt_cmsis.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[3c1]"></a>osThreadTerminate</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, rt_cmsis.o(.text), UNUSED)

<P><STRONG><a name="[3c2]"></a>osThreadYield</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, rt_cmsis.o(.text), UNUSED)

<P><STRONG><a name="[3c3]"></a>osThreadSetPriority</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, rt_cmsis.o(.text), UNUSED)

<P><STRONG><a name="[3c4]"></a>osThreadGetPriority</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, rt_cmsis.o(.text), UNUSED)

<P><STRONG><a name="[170]"></a>svcDelay</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, rt_cmsis.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = svcDelay &rArr; rt_dly_wait &rArr; rt_block &rArr; rt_put_dly
</UL>
<BR>[Calls]<UL><LI><a href="#[172]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_dly_wait
<LI><a href="#[171]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_ms2tick
</UL>
<BR>[Address Reference Count : 1]<UL><LI> rt_cmsis.o(.text)
</UL>
<P><STRONG><a name="[3c5]"></a>osDelay</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, rt_cmsis.o(.text), UNUSED)

<P><STRONG><a name="[3c6]"></a>osWait</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, rt_cmsis.o(.text), UNUSED)

<P><STRONG><a name="[173]"></a>svcTimerCall</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, rt_cmsis.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = svcTimerCall
</UL>
<BR>[Calls]<UL><LI><a href="#[174]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_id2obj
</UL>
<BR>[Address Reference Count : 1]<UL><LI> rt_cmsis.o(.text)
</UL>
<P><STRONG><a name="[17d]"></a>svcTimerCreate</STRONG> (Thumb, 48 bytes, Stack size 8 bytes, rt_cmsis.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = svcTimerCreate
</UL>
<BR>[Address Reference Count : 1]<UL><LI> rt_cmsis.o(.text)
</UL>
<P><STRONG><a name="[175]"></a>svcTimerStart</STRONG> (Thumb, 122 bytes, Stack size 16 bytes, rt_cmsis.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = svcTimerStart &rArr; rt_timer_insert
</UL>
<BR>[Calls]<UL><LI><a href="#[174]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_id2obj
<LI><a href="#[176]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_timer_remove
<LI><a href="#[177]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_timer_insert
<LI><a href="#[171]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_ms2tick
</UL>
<BR>[Address Reference Count : 1]<UL><LI> rt_cmsis.o(.text)
</UL>
<P><STRONG><a name="[178]"></a>svcTimerStop</STRONG> (Thumb, 36 bytes, Stack size 8 bytes, rt_cmsis.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = svcTimerStop
</UL>
<BR>[Calls]<UL><LI><a href="#[174]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_id2obj
<LI><a href="#[176]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_timer_remove
</UL>
<BR>[Address Reference Count : 1]<UL><LI> rt_cmsis.o(.text)
</UL>
<P><STRONG><a name="[17c]"></a>sysTimerTick</STRONG> (Thumb, 76 bytes, Stack size 24 bytes, rt_cmsis.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[179]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;isrMessagePut
<LI><a href="#[177]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_timer_insert
</UL>
<BR>[Called By]<UL><LI><a href="#[125]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_systick
</UL>

<P><STRONG><a name="[3c7]"></a>osTimerCreate</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, rt_cmsis.o(.text), UNUSED)

<P><STRONG><a name="[3c8]"></a>osTimerStart</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, rt_cmsis.o(.text), UNUSED)

<P><STRONG><a name="[3c9]"></a>osTimerStop</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, rt_cmsis.o(.text), UNUSED)

<P><STRONG><a name="[183]"></a>osTimerCall</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, rt_cmsis.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[182]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osTimerThread
</UL>

<P><STRONG><a name="[17e]"></a>svcMessageGet</STRONG> (Thumb, 58 bytes, Stack size 24 bytes, rt_cmsis.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 68<LI>Call Chain = svcMessageGet &rArr; rt_mbx_wait &rArr; rt_dispatch &rArr; rt_put_prio
</UL>
<BR>[Calls]<UL><LI><a href="#[17f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_mbx_wait
<LI><a href="#[171]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_ms2tick
</UL>
<BR>[Address Reference Count : 1]<UL><LI> rt_cmsis.o(.text)
</UL>
<P><STRONG><a name="[180]"></a>osMessageGet</STRONG> (Thumb, 64 bytes, Stack size 16 bytes, rt_cmsis.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[181]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;isr_mbx_receive
</UL>
<BR>[Called By]<UL><LI><a href="#[1b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osMailGet
<LI><a href="#[182]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osTimerThread
</UL>

<P><STRONG><a name="[182]"></a>osTimerThread</STRONG> (Thumb, 38 bytes, Stack size 0 bytes, rt_cmsis.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[180]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osMessageGet
<LI><a href="#[183]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osTimerCall
</UL>

<P><STRONG><a name="[184]"></a>svcSignalWait</STRONG> (Thumb, 80 bytes, Stack size 16 bytes, rt_cmsis.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = svcSignalWait &rArr; rt_evt_wait &rArr; rt_block &rArr; rt_put_dly
</UL>
<BR>[Calls]<UL><LI><a href="#[185]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_evt_wait
<LI><a href="#[171]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_ms2tick
</UL>
<BR>[Address Reference Count : 1]<UL><LI> rt_cmsis.o(.text)
</UL>
<P><STRONG><a name="[186]"></a>svcSignalSet</STRONG> (Thumb, 36 bytes, Stack size 16 bytes, rt_cmsis.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = svcSignalSet &rArr; rt_evt_set &rArr; rt_dispatch &rArr; rt_put_prio
</UL>
<BR>[Calls]<UL><LI><a href="#[187]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_evt_set
<LI><a href="#[15f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_tid2ptcb
</UL>
<BR>[Address Reference Count : 1]<UL><LI> rt_cmsis.o(.text)
</UL>
<P><STRONG><a name="[188]"></a>svcSignalClear</STRONG> (Thumb, 36 bytes, Stack size 16 bytes, rt_cmsis.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = svcSignalClear
</UL>
<BR>[Calls]<UL><LI><a href="#[189]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_evt_clr
<LI><a href="#[15f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_tid2ptcb
</UL>
<BR>[Address Reference Count : 1]<UL><LI> rt_cmsis.o(.text)
</UL>
<P><STRONG><a name="[18a]"></a>svcSignalGet</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, rt_cmsis.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = svcSignalGet
</UL>
<BR>[Calls]<UL><LI><a href="#[15f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_tid2ptcb
</UL>
<BR>[Address Reference Count : 1]<UL><LI> rt_cmsis.o(.text)
</UL>
<P><STRONG><a name="[150]"></a>osSignalSet</STRONG> (Thumb, 50 bytes, Stack size 16 bytes, rt_cmsis.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = osSignalSet &rArr; isr_evt_set &rArr; rt_psq_enq
</UL>
<BR>[Calls]<UL><LI><a href="#[18b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;isr_evt_set
<LI><a href="#[15f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_tid2ptcb
</UL>
<BR>[Called By]<UL><LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;threadX(const void*)
</UL>

<P><STRONG><a name="[3ca]"></a>osSignalClear</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, rt_cmsis.o(.text), UNUSED)

<P><STRONG><a name="[3cb]"></a>osSignalGet</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, rt_cmsis.o(.text), UNUSED)

<P><STRONG><a name="[14f]"></a>osSignalWait</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, rt_cmsis.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;threadX(const void*)
</UL>

<P><STRONG><a name="[18c]"></a>svcMutexCreate</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, rt_cmsis.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = svcMutexCreate
</UL>
<BR>[Calls]<UL><LI><a href="#[12d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_mut_init
</UL>
<BR>[Address Reference Count : 1]<UL><LI> rt_cmsis.o(.text)
</UL>
<P><STRONG><a name="[18d]"></a>svcMutexWait</STRONG> (Thumb, 54 bytes, Stack size 16 bytes, rt_cmsis.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = svcMutexWait &rArr; rt_mut_wait &rArr; rt_block &rArr; rt_put_dly
</UL>
<BR>[Calls]<UL><LI><a href="#[22]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_mut_wait
<LI><a href="#[174]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_id2obj
<LI><a href="#[171]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_ms2tick
</UL>
<BR>[Address Reference Count : 1]<UL><LI> rt_cmsis.o(.text)
</UL>
<P><STRONG><a name="[18e]"></a>svcMutexRelease</STRONG> (Thumb, 34 bytes, Stack size 8 bytes, rt_cmsis.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 60<LI>Call Chain = svcMutexRelease &rArr; rt_mut_release &rArr; rt_dispatch &rArr; rt_put_prio
</UL>
<BR>[Calls]<UL><LI><a href="#[23]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_mut_release
<LI><a href="#[174]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_id2obj
</UL>
<BR>[Address Reference Count : 1]<UL><LI> rt_cmsis.o(.text)
</UL>
<P><STRONG><a name="[3cc]"></a>osMutexCreate</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, rt_cmsis.o(.text), UNUSED)

<P><STRONG><a name="[3cd]"></a>osMutexWait</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, rt_cmsis.o(.text), UNUSED)

<P><STRONG><a name="[3ce]"></a>osMutexRelease</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, rt_cmsis.o(.text), UNUSED)

<P><STRONG><a name="[18f]"></a>svcSemaphoreCreate</STRONG> (Thumb, 36 bytes, Stack size 8 bytes, rt_cmsis.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = svcSemaphoreCreate
</UL>
<BR>[Calls]<UL><LI><a href="#[190]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_sem_init
</UL>
<BR>[Address Reference Count : 1]<UL><LI> rt_cmsis.o(.text)
</UL>
<P><STRONG><a name="[191]"></a>svcSemaphoreWait</STRONG> (Thumb, 50 bytes, Stack size 16 bytes, rt_cmsis.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = svcSemaphoreWait &rArr; rt_sem_wait &rArr; rt_block &rArr; rt_put_dly
</UL>
<BR>[Calls]<UL><LI><a href="#[192]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_sem_wait
<LI><a href="#[174]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_id2obj
<LI><a href="#[171]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_ms2tick
</UL>
<BR>[Address Reference Count : 1]<UL><LI> rt_cmsis.o(.text)
</UL>
<P><STRONG><a name="[193]"></a>svcSemaphoreRelease</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, rt_cmsis.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = svcSemaphoreRelease &rArr; rt_sem_send &rArr; rt_dispatch &rArr; rt_put_prio
</UL>
<BR>[Calls]<UL><LI><a href="#[194]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_sem_send
<LI><a href="#[174]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_id2obj
</UL>
<BR>[Address Reference Count : 1]<UL><LI> rt_cmsis.o(.text)
</UL>
<P><STRONG><a name="[3cf]"></a>osSemaphoreCreate</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, rt_cmsis.o(.text), UNUSED)

<P><STRONG><a name="[3d0]"></a>osSemaphoreWait</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, rt_cmsis.o(.text), UNUSED)

<P><STRONG><a name="[195]"></a>osSemaphoreRelease</STRONG> (Thumb, 42 bytes, Stack size 8 bytes, rt_cmsis.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[196]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;isr_sem_send
<LI><a href="#[174]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_id2obj
</UL>

<P><STRONG><a name="[197]"></a>svcPoolCreate</STRONG> (Thumb, 54 bytes, Stack size 8 bytes, rt_cmsis.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = svcPoolCreate &rArr; _init_box
</UL>
<BR>[Calls]<UL><LI><a href="#[198]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_init_box
</UL>
<BR>[Address Reference Count : 1]<UL><LI> rt_cmsis.o(.text)
</UL>
<P><STRONG><a name="[199]"></a>sysPoolAlloc</STRONG> (Thumb, 32 bytes, Stack size 16 bytes, rt_cmsis.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = sysPoolAlloc
</UL>
<BR>[Calls]<UL><LI><a href="#[1e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_alloc_box
<LI><a href="#[19a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_clr_box
</UL>
<BR>[Called By]<UL><LI><a href="#[19d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osPoolCAlloc
<LI><a href="#[19c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osPoolAlloc
</UL>
<BR>[Address Reference Count : 1]<UL><LI> rt_cmsis.o(.text)
</UL>
<P><STRONG><a name="[19b]"></a>sysPoolFree</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, rt_cmsis.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = sysPoolFree
</UL>
<BR>[Calls]<UL><LI><a href="#[1f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_free_box
</UL>
<BR>[Called By]<UL><LI><a href="#[19e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osPoolFree
</UL>
<BR>[Address Reference Count : 1]<UL><LI> rt_cmsis.o(.text)
</UL>
<P><STRONG><a name="[3d1]"></a>osPoolCreate</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, rt_cmsis.o(.text), UNUSED)

<P><STRONG><a name="[19c]"></a>osPoolAlloc</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, rt_cmsis.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[199]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sysPoolAlloc
</UL>

<P><STRONG><a name="[19d]"></a>osPoolCAlloc</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, rt_cmsis.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[199]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sysPoolAlloc
</UL>

<P><STRONG><a name="[19e]"></a>osPoolFree</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, rt_cmsis.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[19b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sysPoolFree
</UL>

<P><STRONG><a name="[19f]"></a>svcMessagePut</STRONG> (Thumb, 54 bytes, Stack size 16 bytes, rt_cmsis.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 68<LI>Call Chain = svcMessagePut &rArr; rt_mbx_send &rArr; rt_dispatch &rArr; rt_put_prio
</UL>
<BR>[Calls]<UL><LI><a href="#[1a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_mbx_send
<LI><a href="#[171]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_ms2tick
</UL>
<BR>[Address Reference Count : 1]<UL><LI> rt_cmsis.o(.text)
</UL>
<P><STRONG><a name="[3d2]"></a>osMessageCreate</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, rt_cmsis.o(.text), UNUSED)

<P><STRONG><a name="[1a1]"></a>osMessagePut</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, rt_cmsis.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[179]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;isrMessagePut
</UL>
<BR>[Called By]<UL><LI><a href="#[1b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osMailPut
</UL>

<P><STRONG><a name="[1a2]"></a>svcMailCreate</STRONG> (Thumb, 66 bytes, Stack size 16 bytes, rt_cmsis.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = svcMailCreate &rArr; _init_box
</UL>
<BR>[Calls]<UL><LI><a href="#[167]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_mbx_init
<LI><a href="#[198]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_init_box
</UL>
<BR>[Address Reference Count : 1]<UL><LI> rt_cmsis.o(.text)
</UL>
<P><STRONG><a name="[1a3]"></a>sysMailAlloc</STRONG> (Thumb, 104 bytes, Stack size 24 bytes, rt_cmsis.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = sysMailAlloc &rArr; rt_block &rArr; rt_put_dly
</UL>
<BR>[Calls]<UL><LI><a href="#[1a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_put_prio
<LI><a href="#[1a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_block
<LI><a href="#[1e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_alloc_box
<LI><a href="#[19a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_clr_box
<LI><a href="#[171]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_ms2tick
</UL>
<BR>[Called By]<UL><LI><a href="#[1ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osMailCAlloc
<LI><a href="#[1ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osMailAlloc
</UL>
<BR>[Address Reference Count : 1]<UL><LI> rt_cmsis.o(.text)
</UL>
<P><STRONG><a name="[1a6]"></a>sysMailFree</STRONG> (Thumb, 102 bytes, Stack size 16 bytes, rt_cmsis.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = sysMailFree &rArr; rt_dispatch &rArr; rt_put_prio
</UL>
<BR>[Calls]<UL><LI><a href="#[1ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_rmv_dly
<LI><a href="#[1aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_ret_val
<LI><a href="#[1a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_psq_enq
<LI><a href="#[1a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_psh_req
<LI><a href="#[1a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_get_first
<LI><a href="#[1f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_free_box
<LI><a href="#[1ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_dispatch
<LI><a href="#[1e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_alloc_box
</UL>
<BR>[Called By]<UL><LI><a href="#[1af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osMailFree
</UL>
<BR>[Address Reference Count : 1]<UL><LI> rt_cmsis.o(.text)
</UL>
<P><STRONG><a name="[3d3]"></a>osMailCreate</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, rt_cmsis.o(.text), UNUSED)

<P><STRONG><a name="[1ad]"></a>osMailAlloc</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, rt_cmsis.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[1a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sysMailAlloc
</UL>

<P><STRONG><a name="[1ae]"></a>osMailCAlloc</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, rt_cmsis.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[1a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sysMailAlloc
</UL>

<P><STRONG><a name="[1af]"></a>osMailFree</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, rt_cmsis.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[1a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sysMailFree
</UL>

<P><STRONG><a name="[1b0]"></a>osMailPut</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, rt_cmsis.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[1a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osMessagePut
</UL>

<P><STRONG><a name="[1b1]"></a>osMailGet</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, rt_cmsis.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[180]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osMessageGet
</UL>

<P><STRONG><a name="[1b4]"></a>rt_switch_req</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, rt_task.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[1b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dbg_task_switch
</UL>
<BR>[Called By]<UL><LI><a href="#[125]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_systick
<LI><a href="#[124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_pop_req
<LI><a href="#[16c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_tsk_pass
<LI><a href="#[1ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_dispatch
<LI><a href="#[1a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_block
</UL>

<P><STRONG><a name="[1ac]"></a>rt_dispatch</STRONG> (Thumb, 58 bytes, Stack size 16 bytes, rt_task.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = rt_dispatch &rArr; rt_put_prio
</UL>
<BR>[Calls]<UL><LI><a href="#[1b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_put_rdy_first
<LI><a href="#[1b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_switch_req
<LI><a href="#[1a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_put_prio
<LI><a href="#[1a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_get_first
</UL>
<BR>[Called By]<UL><LI><a href="#[23]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_mut_release
<LI><a href="#[16e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_tsk_prio
<LI><a href="#[160]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_tsk_delete
<LI><a href="#[164]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_tsk_create
<LI><a href="#[194]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_sem_send
<LI><a href="#[17f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_mbx_wait
<LI><a href="#[1a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_mbx_send
<LI><a href="#[187]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_evt_set
<LI><a href="#[1a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sysMailFree
</UL>

<P><STRONG><a name="[1a5]"></a>rt_block</STRONG> (Thumb, 46 bytes, Stack size 16 bytes, rt_task.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = rt_block &rArr; rt_put_dly
</UL>
<BR>[Calls]<UL><LI><a href="#[1b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_put_dly
<LI><a href="#[1b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_switch_req
<LI><a href="#[1a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_get_first
</UL>
<BR>[Called By]<UL><LI><a href="#[22]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_mut_wait
<LI><a href="#[1c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_itv_wait
<LI><a href="#[192]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_sem_wait
<LI><a href="#[17f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_mbx_wait
<LI><a href="#[1a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_mbx_send
<LI><a href="#[185]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_evt_wait
<LI><a href="#[172]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_dly_wait
<LI><a href="#[1a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sysMailAlloc
</UL>

<P><STRONG><a name="[16c]"></a>rt_tsk_pass</STRONG> (Thumb, 36 bytes, Stack size 16 bytes, rt_task.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = rt_tsk_pass &rArr; rt_put_prio
</UL>
<BR>[Calls]<UL><LI><a href="#[1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_get_same_rdy_prio
<LI><a href="#[1b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_switch_req
<LI><a href="#[1a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_put_prio
</UL>
<BR>[Called By]<UL><LI><a href="#[16b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;svcThreadYield
</UL>

<P><STRONG><a name="[12c]"></a>rt_tsk_self</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, rt_task.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_mutex_release
<LI><a href="#[de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_mutex_acquire
<LI><a href="#[dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_perthread_libspace
<LI><a href="#[15d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;svcThreadGetId
</UL>

<P><STRONG><a name="[16e]"></a>rt_tsk_prio</STRONG> (Thumb, 98 bytes, Stack size 16 bytes, rt_task.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = rt_tsk_prio &rArr; rt_dispatch &rArr; rt_put_prio
</UL>
<BR>[Calls]<UL><LI><a href="#[1b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_resort_prio
<LI><a href="#[1a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_put_prio
<LI><a href="#[1a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_get_first
<LI><a href="#[1ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_dispatch
</UL>
<BR>[Called By]<UL><LI><a href="#[16d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;svcThreadSetPriority
</UL>

<P><STRONG><a name="[164]"></a>rt_tsk_create</STRONG> (Thumb, 112 bytes, Stack size 24 bytes, rt_task.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = rt_tsk_create &rArr; rt_dispatch &rArr; rt_put_prio
</UL>
<BR>[Calls]<UL><LI><a href="#[1ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dbg_task_notify
<LI><a href="#[1b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_init_context
<LI><a href="#[1ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_dispatch
<LI><a href="#[1e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_alloc_box
</UL>
<BR>[Called By]<UL><LI><a href="#[16a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_sys_init
<LI><a href="#[162]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;svcThreadCreate
</UL>

<P><STRONG><a name="[160]"></a>rt_tsk_delete</STRONG> (Thumb, 144 bytes, Stack size 24 bytes, rt_task.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = rt_tsk_delete &rArr; rt_dispatch &rArr; rt_put_prio
</UL>
<BR>[Calls]<UL><LI><a href="#[1bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_rmv_list
<LI><a href="#[1ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dbg_task_notify
<LI><a href="#[1ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_rmv_dly
<LI><a href="#[1f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_free_box
<LI><a href="#[1ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_dispatch
</UL>
<BR>[Called By]<UL><LI><a href="#[15e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;svcThreadTerminate
</UL>

<P><STRONG><a name="[16a]"></a>rt_sys_init</STRONG> (Thumb, 240 bytes, Stack size 24 bytes, rt_task.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 76<LI>Call Chain = rt_sys_init &rArr; rt_tsk_create &rArr; rt_dispatch &rArr; rt_put_prio
</UL>
<BR>[Calls]<UL><LI><a href="#[1bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_set_PSP
<LI><a href="#[1be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_init_robin
<LI><a href="#[1bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dbg_init
<LI><a href="#[1b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_init_context
<LI><a href="#[164]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_tsk_create
<LI><a href="#[198]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_init_box
</UL>
<BR>[Called By]<UL><LI><a href="#[168]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;svcKernelStart
</UL>

<P><STRONG><a name="[12d]"></a>rt_mut_init</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, rt_mutex.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_mutex_initialize
<LI><a href="#[18c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;svcMutexCreate
</UL>

<P><STRONG><a name="[23]"></a>rt_mut_release</STRONG> (Thumb, 150 bytes, Stack size 24 bytes, rt_mutex.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = rt_mut_release &rArr; rt_dispatch &rArr; rt_put_prio
</UL>
<BR>[Calls]<UL><LI><a href="#[1ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_rmv_dly
<LI><a href="#[1aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_ret_val
<LI><a href="#[1a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_put_prio
<LI><a href="#[1a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_get_first
<LI><a href="#[1ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_dispatch
</UL>
<BR>[Called By]<UL><LI><a href="#[18e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;svcMutexRelease
</UL>
<BR>[Address Reference Count : 1]<UL><LI> rtx_conf_cm.o(.text)
</UL>
<P><STRONG><a name="[22]"></a>rt_mut_wait</STRONG> (Thumb, 96 bytes, Stack size 16 bytes, rt_mutex.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = rt_mut_wait &rArr; rt_block &rArr; rt_put_dly
</UL>
<BR>[Calls]<UL><LI><a href="#[1b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_resort_prio
<LI><a href="#[1a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_put_prio
<LI><a href="#[1a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_block
</UL>
<BR>[Called By]<UL><LI><a href="#[18d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;svcMutexWait
</UL>
<BR>[Address Reference Count : 1]<UL><LI> rtx_conf_cm.o(.text)
</UL>
<P><STRONG><a name="[3d4]"></a>rt_tsk_lock</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, rt_system.o(.text), UNUSED)

<P><STRONG><a name="[3d5]"></a>rt_tsk_unlock</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, rt_system.o(.text), UNUSED)

<P><STRONG><a name="[1a8]"></a>rt_psh_req</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, rt_system.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[196]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;isr_sem_send
<LI><a href="#[17b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;isr_mbx_send
<LI><a href="#[181]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;isr_mbx_receive
<LI><a href="#[18b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;isr_evt_set
<LI><a href="#[1a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sysMailFree
</UL>

<P><STRONG><a name="[124]"></a>rt_pop_req</STRONG> (Thumb, 106 bytes, Stack size 16 bytes, rt_system.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[1bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_sem_psh
<LI><a href="#[1c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_mbx_psh
<LI><a href="#[1c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_evt_psh
<LI><a href="#[1b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_put_rdy_first
<LI><a href="#[1b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_switch_req
<LI><a href="#[1a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_get_first
</UL>
<BR>[Called By]<UL><LI><a href="#[123]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Sys_Handler
</UL>

<P><STRONG><a name="[125]"></a>rt_systick</STRONG> (Thumb, 48 bytes, Stack size 8 bytes, rt_system.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[1c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_dec_dly
<LI><a href="#[1c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_chk_robin
<LI><a href="#[1b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_put_rdy_first
<LI><a href="#[1b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_switch_req
<LI><a href="#[1a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_get_first
<LI><a href="#[17c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sysTimerTick
</UL>
<BR>[Called By]<UL><LI><a href="#[123]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Sys_Handler
</UL>

<P><STRONG><a name="[122]"></a>rt_stk_check</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, rt_system.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;os_error
</UL>
<BR>[Called By]<UL><LI><a href="#[123]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Sys_Handler
<LI><a href="#[19]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SVC_Handler
</UL>

<P><STRONG><a name="[185]"></a>rt_evt_wait</STRONG> (Thumb, 58 bytes, Stack size 16 bytes, rt_event.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = rt_evt_wait &rArr; rt_block &rArr; rt_put_dly
</UL>
<BR>[Calls]<UL><LI><a href="#[1a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_block
</UL>
<BR>[Called By]<UL><LI><a href="#[184]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;svcSignalWait
</UL>

<P><STRONG><a name="[187]"></a>rt_evt_set</STRONG> (Thumb, 88 bytes, Stack size 8 bytes, rt_event.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = rt_evt_set &rArr; rt_dispatch &rArr; rt_put_prio
</UL>
<BR>[Calls]<UL><LI><a href="#[1c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_ret_val2
<LI><a href="#[1ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_rmv_dly
<LI><a href="#[1ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_dispatch
</UL>
<BR>[Called By]<UL><LI><a href="#[186]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;svcSignalSet
</UL>

<P><STRONG><a name="[189]"></a>rt_evt_clr</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, rt_event.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[188]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;svcSignalClear
</UL>

<P><STRONG><a name="[18b]"></a>isr_evt_set</STRONG> (Thumb, 34 bytes, Stack size 8 bytes, rt_event.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = isr_evt_set &rArr; rt_psq_enq
</UL>
<BR>[Calls]<UL><LI><a href="#[1a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_psq_enq
<LI><a href="#[1a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_psh_req
</UL>
<BR>[Called By]<UL><LI><a href="#[150]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osSignalSet
</UL>

<P><STRONG><a name="[3d6]"></a>rt_evt_get</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, rt_event.o(.text), UNUSED)

<P><STRONG><a name="[1c0]"></a>rt_evt_psh</STRONG> (Thumb, 76 bytes, Stack size 8 bytes, rt_event.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[1c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_ret_val2
<LI><a href="#[1ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_rmv_dly
<LI><a href="#[1a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_put_prio
</UL>
<BR>[Called By]<UL><LI><a href="#[124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_pop_req
</UL>

<P><STRONG><a name="[1a4]"></a>rt_put_prio</STRONG> (Thumb, 54 bytes, Stack size 12 bytes, rt_list.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = rt_put_prio
</UL>
<BR>[Called By]<UL><LI><a href="#[22]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_mut_wait
<LI><a href="#[23]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_mut_release
<LI><a href="#[1bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_sem_psh
<LI><a href="#[1c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_mbx_psh
<LI><a href="#[1c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_evt_psh
<LI><a href="#[1c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_dec_dly
<LI><a href="#[1c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_chk_robin
<LI><a href="#[1b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_resort_prio
<LI><a href="#[16e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_tsk_prio
<LI><a href="#[16c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_tsk_pass
<LI><a href="#[192]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_sem_wait
<LI><a href="#[17f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_mbx_wait
<LI><a href="#[1a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_mbx_send
<LI><a href="#[1ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_dispatch
<LI><a href="#[1a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sysMailAlloc
</UL>

<P><STRONG><a name="[1a9]"></a>rt_get_first</STRONG> (Thumb, 40 bytes, Stack size 0 bytes, rt_list.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[23]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_mut_release
<LI><a href="#[1bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_sem_psh
<LI><a href="#[1c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_mbx_psh
<LI><a href="#[1c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_chk_robin
<LI><a href="#[125]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_systick
<LI><a href="#[124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_pop_req
<LI><a href="#[16e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_tsk_prio
<LI><a href="#[194]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_sem_send
<LI><a href="#[17f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_mbx_wait
<LI><a href="#[1a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_mbx_send
<LI><a href="#[1ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_dispatch
<LI><a href="#[1a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_block
<LI><a href="#[1a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sysMailFree
</UL>

<P><STRONG><a name="[1b6]"></a>rt_put_rdy_first</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, rt_list.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[125]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_systick
<LI><a href="#[124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_pop_req
<LI><a href="#[1ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_dispatch
</UL>

<P><STRONG><a name="[1b8]"></a>rt_get_same_rdy_prio</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, rt_list.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[16c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_tsk_pass
</UL>

<P><STRONG><a name="[1bb]"></a>rt_rmv_list</STRONG> (Thumb, 44 bytes, Stack size 0 bytes, rt_list.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[1b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_resort_prio
<LI><a href="#[160]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_tsk_delete
</UL>

<P><STRONG><a name="[1b9]"></a>rt_resort_prio</STRONG> (Thumb, 44 bytes, Stack size 8 bytes, rt_list.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = rt_resort_prio &rArr; rt_put_prio
</UL>
<BR>[Calls]<UL><LI><a href="#[1bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_rmv_list
<LI><a href="#[1a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_put_prio
</UL>
<BR>[Called By]<UL><LI><a href="#[22]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_mut_wait
<LI><a href="#[16e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_tsk_prio
</UL>

<P><STRONG><a name="[1b7]"></a>rt_put_dly</STRONG> (Thumb, 70 bytes, Stack size 8 bytes, rt_list.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = rt_put_dly
</UL>
<BR>[Called By]<UL><LI><a href="#[1a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_block
</UL>

<P><STRONG><a name="[1c3]"></a>rt_dec_dly</STRONG> (Thumb, 102 bytes, Stack size 16 bytes, rt_list.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[1a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_put_prio
</UL>
<BR>[Called By]<UL><LI><a href="#[125]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_systick
</UL>

<P><STRONG><a name="[1ab]"></a>rt_rmv_dly</STRONG> (Thumb, 40 bytes, Stack size 8 bytes, rt_list.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = rt_rmv_dly
</UL>
<BR>[Called By]<UL><LI><a href="#[23]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_mut_release
<LI><a href="#[1bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_sem_psh
<LI><a href="#[1c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_mbx_psh
<LI><a href="#[1c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_evt_psh
<LI><a href="#[160]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_tsk_delete
<LI><a href="#[194]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_sem_send
<LI><a href="#[17f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_mbx_wait
<LI><a href="#[1a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_mbx_send
<LI><a href="#[187]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_evt_set
<LI><a href="#[1a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sysMailFree
</UL>

<P><STRONG><a name="[1a7]"></a>rt_psq_enq</STRONG> (Thumb, 80 bytes, Stack size 16 bytes, rt_list.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = rt_psq_enq
</UL>
<BR>[Calls]<UL><LI><a href="#[db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;os_error
</UL>
<BR>[Called By]<UL><LI><a href="#[196]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;isr_sem_send
<LI><a href="#[17b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;isr_mbx_send
<LI><a href="#[181]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;isr_mbx_receive
<LI><a href="#[18b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;isr_evt_set
<LI><a href="#[1a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sysMailFree
</UL>

<P><STRONG><a name="[167]"></a>rt_mbx_init</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, rt_mailbox.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[1a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;svcMailCreate
<LI><a href="#[166]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;svcMessageCreate
</UL>

<P><STRONG><a name="[1a0]"></a>rt_mbx_send</STRONG> (Thumb, 164 bytes, Stack size 24 bytes, rt_mailbox.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = rt_mbx_send &rArr; rt_dispatch &rArr; rt_put_prio
</UL>
<BR>[Calls]<UL><LI><a href="#[1c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_ret_val2
<LI><a href="#[1ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_rmv_dly
<LI><a href="#[1a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_put_prio
<LI><a href="#[1a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_get_first
<LI><a href="#[1ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_dispatch
<LI><a href="#[1a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_block
</UL>
<BR>[Called By]<UL><LI><a href="#[19f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;svcMessagePut
</UL>

<P><STRONG><a name="[17f]"></a>rt_mbx_wait</STRONG> (Thumb, 172 bytes, Stack size 16 bytes, rt_mailbox.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = rt_mbx_wait &rArr; rt_dispatch &rArr; rt_put_prio
</UL>
<BR>[Calls]<UL><LI><a href="#[1ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_rmv_dly
<LI><a href="#[1aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_ret_val
<LI><a href="#[1a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_put_prio
<LI><a href="#[1a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_get_first
<LI><a href="#[1ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_dispatch
<LI><a href="#[1a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_block
</UL>
<BR>[Called By]<UL><LI><a href="#[17e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;svcMessageGet
</UL>

<P><STRONG><a name="[17a]"></a>rt_mbx_check</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, rt_mailbox.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[179]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;isrMessagePut
</UL>

<P><STRONG><a name="[17b]"></a>isr_mbx_send</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, rt_mailbox.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[1a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_psq_enq
<LI><a href="#[1a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_psh_req
</UL>
<BR>[Called By]<UL><LI><a href="#[179]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;isrMessagePut
</UL>

<P><STRONG><a name="[181]"></a>isr_mbx_receive</STRONG> (Thumb, 80 bytes, Stack size 8 bytes, rt_mailbox.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[1a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_psq_enq
<LI><a href="#[1a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_psh_req
</UL>
<BR>[Called By]<UL><LI><a href="#[180]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osMessageGet
</UL>

<P><STRONG><a name="[1c1]"></a>rt_mbx_psh</STRONG> (Thumb, 248 bytes, Stack size 24 bytes, rt_mailbox.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;os_error
<LI><a href="#[1c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_ret_val2
<LI><a href="#[1ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_rmv_dly
<LI><a href="#[1aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_ret_val
<LI><a href="#[1a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_put_prio
<LI><a href="#[1a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_get_first
<LI><a href="#[1e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_alloc_box
</UL>
<BR>[Called By]<UL><LI><a href="#[124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_pop_req
</UL>

<P><STRONG><a name="[190]"></a>rt_sem_init</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, rt_semaphore.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[18f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;svcSemaphoreCreate
</UL>

<P><STRONG><a name="[194]"></a>rt_sem_send</STRONG> (Thumb, 42 bytes, Stack size 8 bytes, rt_semaphore.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = rt_sem_send &rArr; rt_dispatch &rArr; rt_put_prio
</UL>
<BR>[Calls]<UL><LI><a href="#[1ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_rmv_dly
<LI><a href="#[1aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_ret_val
<LI><a href="#[1a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_get_first
<LI><a href="#[1ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_dispatch
</UL>
<BR>[Called By]<UL><LI><a href="#[193]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;svcSemaphoreRelease
</UL>

<P><STRONG><a name="[192]"></a>rt_sem_wait</STRONG> (Thumb, 56 bytes, Stack size 8 bytes, rt_semaphore.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = rt_sem_wait &rArr; rt_block &rArr; rt_put_dly
</UL>
<BR>[Calls]<UL><LI><a href="#[1a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_put_prio
<LI><a href="#[1a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_block
</UL>
<BR>[Called By]<UL><LI><a href="#[191]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;svcSemaphoreWait
</UL>

<P><STRONG><a name="[196]"></a>isr_sem_send</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, rt_semaphore.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[1a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_psq_enq
<LI><a href="#[1a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_psh_req
</UL>
<BR>[Called By]<UL><LI><a href="#[195]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osSemaphoreRelease
</UL>

<P><STRONG><a name="[1bf]"></a>rt_sem_psh</STRONG> (Thumb, 48 bytes, Stack size 8 bytes, rt_semaphore.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[1ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_rmv_dly
<LI><a href="#[1aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_ret_val
<LI><a href="#[1a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_put_prio
<LI><a href="#[1a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_get_first
</UL>
<BR>[Called By]<UL><LI><a href="#[124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_pop_req
</UL>

<P><STRONG><a name="[172]"></a>rt_dly_wait</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, rt_time.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = rt_dly_wait &rArr; rt_block &rArr; rt_put_dly
</UL>
<BR>[Calls]<UL><LI><a href="#[1a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_block
</UL>
<BR>[Called By]<UL><LI><a href="#[170]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;svcDelay
</UL>

<P><STRONG><a name="[3d7]"></a>rt_itv_set</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, rt_time.o(.text), UNUSED)

<P><STRONG><a name="[1c5]"></a>rt_itv_wait</STRONG> (Thumb, 34 bytes, Stack size 0 bytes, rt_time.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[1a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_block
</UL>

<P><STRONG><a name="[1be]"></a>rt_init_robin</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, rt_robin.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[16a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_sys_init
</UL>

<P><STRONG><a name="[1c2]"></a>rt_chk_robin</STRONG> (Thumb, 58 bytes, Stack size 8 bytes, rt_robin.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[1a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_put_prio
<LI><a href="#[1a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_get_first
</UL>
<BR>[Called By]<UL><LI><a href="#[125]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_systick
</UL>

<P><STRONG><a name="[198]"></a>_init_box</STRONG> (Thumb, 70 bytes, Stack size 8 bytes, rt_membox.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = _init_box
</UL>
<BR>[Called By]<UL><LI><a href="#[16a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_sys_init
<LI><a href="#[1a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;svcMailCreate
<LI><a href="#[197]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;svcPoolCreate
</UL>

<P><STRONG><a name="[1e]"></a>rt_alloc_box</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, rt_membox.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[1c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_mbx_psh
<LI><a href="#[1b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_init_context
<LI><a href="#[164]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_tsk_create
<LI><a href="#[1a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sysMailFree
<LI><a href="#[1a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sysMailAlloc
<LI><a href="#[199]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sysPoolAlloc
</UL>
<BR>[Address Reference Count : 1]<UL><LI> hal_cm3.o(.emb_text)
</UL>
<P><STRONG><a name="[1c6]"></a>_calloc_box</STRONG> (Thumb, 30 bytes, Stack size 8 bytes, rt_membox.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[1c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_alloc_box
</UL>

<P><STRONG><a name="[1f]"></a>rt_free_box</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, rt_membox.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[160]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_tsk_delete
<LI><a href="#[1a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sysMailFree
<LI><a href="#[19b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sysPoolFree
</UL>
<BR>[Address Reference Count : 1]<UL><LI> hal_cm3.o(.emb_text)
</UL>
<P><STRONG><a name="[169]"></a>rt_init_mem</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, rt_memory.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[168]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;svcKernelStart
</UL>

<P><STRONG><a name="[163]"></a>rt_alloc_mem</STRONG> (Thumb, 60 bytes, Stack size 8 bytes, rt_memory.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = rt_alloc_mem
</UL>
<BR>[Called By]<UL><LI><a href="#[168]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;svcKernelStart
<LI><a href="#[162]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;svcThreadCreate
</UL>

<P><STRONG><a name="[161]"></a>rt_free_mem</STRONG> (Thumb, 40 bytes, Stack size 0 bytes, rt_memory.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[162]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;svcThreadCreate
<LI><a href="#[15e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;svcThreadTerminate
</UL>

<P><STRONG><a name="[1b3]"></a>rt_init_stack</STRONG> (Thumb, 70 bytes, Stack size 8 bytes, hal_cm.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = rt_init_stack
</UL>
<BR>[Called By]<UL><LI><a href="#[1b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_init_context
</UL>

<P><STRONG><a name="[1aa]"></a>rt_ret_val</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, hal_cm.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[23]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_mut_release
<LI><a href="#[1bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_sem_psh
<LI><a href="#[1c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_mbx_psh
<LI><a href="#[194]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_sem_send
<LI><a href="#[17f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_mbx_wait
<LI><a href="#[1a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sysMailFree
</UL>

<P><STRONG><a name="[1c4]"></a>rt_ret_val2</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, hal_cm.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[1c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_mbx_psh
<LI><a href="#[1c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_evt_psh
<LI><a href="#[1a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_mbx_send
<LI><a href="#[187]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_evt_set
</UL>

<P><STRONG><a name="[1bc]"></a>dbg_init</STRONG> (Thumb, 34 bytes, Stack size 0 bytes, hal_cm.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[16a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_sys_init
</UL>

<P><STRONG><a name="[1ba]"></a>dbg_task_notify</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, hal_cm.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[160]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_tsk_delete
<LI><a href="#[164]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_tsk_create
</UL>

<P><STRONG><a name="[1b5]"></a>dbg_task_switch</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, hal_cm.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[1b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_switch_req
</UL>

<P><STRONG><a name="[3d8]"></a>__user_libspace</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, libspace.o(.text), UNUSED)

<P><STRONG><a name="[1c8]"></a>__user_perproc_libspace</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, libspace.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[230]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_eh_globals_addr
<LI><a href="#[10c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_locale
<LI><a href="#[1f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_heap_descriptor
<LI><a href="#[11f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_setup_stackheap
<LI><a href="#[1f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_ddtor_pointer_addr
<LI><a href="#[1f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_new_handler_addr
</UL>

<P><STRONG><a name="[3d9]"></a>__I$use$semihosting</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, use_no_semi.o(.text), UNUSED)

<P><STRONG><a name="[3da]"></a>__use_no_semihosting_swi</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, use_no_semi.o(.text), UNUSED)

<P><STRONG><a name="[11f]"></a>__user_setup_stackheap</STRONG> (Thumb, 74 bytes, Stack size 8 bytes, sys_stackheap_outer.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8 + Unknown Stack Size
<LI>Call Chain = __user_setup_stackheap
</UL>
<BR>[Calls]<UL><LI><a href="#[1c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_initial_stackheap
<LI><a href="#[1c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_perproc_libspace
</UL>
<BR>[Called By]<UL><LI><a href="#[e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry
</UL>

<P><STRONG><a name="[13a]"></a>__2printf</STRONG> (Thumb, 20 bytes, Stack size 24 bytes, __2printf.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 152 + Unknown Stack Size
<LI>Call Chain = __2printf &rArr; _printf_char_file &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[1ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_char_file
</UL>
<BR>[Called By]<UL><LI><a href="#[135]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;stl_test()
</UL>

<P><STRONG><a name="[f0]"></a>_printf_int_dec</STRONG> (Thumb, 102 bytes, Stack size 24 bytes, _printf_dec.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = _printf_int_dec &rArr; _printf_int_common &rArr; _printf_post_padding
</UL>
<BR>[Calls]<UL><LI><a href="#[1cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_truncate_unsigned
<LI><a href="#[1cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_truncate_signed
<LI><a href="#[1cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_int_common
</UL>
<BR>[Called By]<UL><LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_u
<LI><a href="#[ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_i
<LI><a href="#[f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_d
</UL>

<P><STRONG><a name="[1ce]"></a>__printf</STRONG> (Thumb, 390 bytes, Stack size 40 bytes, __printf_flags_ss_wp.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40 + Unknown Stack Size
<LI>Call Chain = __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[1d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_percent
<LI><a href="#[1cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_is_digit
</UL>
<BR>[Called By]<UL><LI><a href="#[1fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_char_common
</UL>

<P><STRONG><a name="[1d1]"></a>_do_fflush</STRONG> (Thumb, 74 bytes, Stack size 24 bytes, fflush_locked.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = _do_fflush &rArr; _fflush &rArr; _writebuf &rArr; _sys_write
</UL>
<BR>[Calls]<UL><LI><a href="#[df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_mutex_release
<LI><a href="#[de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_mutex_acquire
<LI><a href="#[1d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fflush
<LI><a href="#[1d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fseek
</UL>
<BR>[Called By]<UL><LI><a href="#[1d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fflush
<LI><a href="#[264]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_flushlinebuffered
</UL>

<P><STRONG><a name="[1d4]"></a>fflush</STRONG> (Thumb, 60 bytes, Stack size 24 bytes, fflush_locked.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = fflush &rArr; _do_fflush &rArr; _fflush &rArr; _writebuf &rArr; _sys_write
</UL>
<BR>[Calls]<UL><LI><a href="#[df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_mutex_release
<LI><a href="#[de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_mutex_acquire
<LI><a href="#[1d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_do_fflush
</UL>
<BR>[Called By]<UL><LI><a href="#[35f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::basic_ostream&lang;char, std::char_traits&lang;char&rang;&rang;::_C_opfx()
</UL>

<P><STRONG><a name="[121]"></a>exit</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, exit.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[1d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_exit
</UL>
<BR>[Called By]<UL><LI><a href="#[e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry
</UL>

<P><STRONG><a name="[21b]"></a>strlen</STRONG> (Thumb, 62 bytes, Stack size 8 bytes, strlen.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = strlen
</UL>
<BR>[Called By]<UL><LI><a href="#[2c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rw_use_c_lib_locale::__rw_use_c_lib_locale(const char*, int)
<LI><a href="#[21a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strxfrm
<LI><a href="#[14a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::char_traits&lang;char&rang;::length(const char*)
<LI><a href="#[2aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__rw_exception::_C_assign(const char*, unsigned)
<LI><a href="#[287]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__rw_exception::_C_vformat(int, std::__va_list)
<LI><a href="#[2e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__rw_exception::_C_vformat(const char*, std::__va_list)
<LI><a href="#[298]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rw_locale_imp::_C_parse_name(__rw::__rw_locale_vector&lang;std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;&rang;&, const char*)
<LI><a href="#[293]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;::basic_string(const char*, const std::allocator&lang;char&rang;&)
<LI><a href="#[2c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rw_numpunct_impl_base::_C_get_named_init_(const char*)
<LI><a href="#[29f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rw_locale_imp::__rw_locale_imp(const __rw::__rw_locale_imp&, const char*, unsigned)
<LI><a href="#[29b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rw_locale_imp::__rw_locale_imp(const char*, unsigned, unsigned)
</UL>

<P><STRONG><a name="[1d9]"></a>__aeabi_memcpy</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rt_memcpy_v6.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[2df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::char_traits&lang;wchar_t&rang;::copy(wchar_t*, const wchar_t*, unsigned)
<LI><a href="#[a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::collate_byname&lang;char&rang;::do_transform(const char*, const char*) const
<LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::collate_byname&lang;char&rang;::do_compare(const char*, const char*, const char*, const char*) const
<LI><a href="#[21e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memcpy
<LI><a href="#[1d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_memmove
<LI><a href="#[29a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::char_traits&lang;char&rang;::copy(char*, const char*, unsigned)
<LI><a href="#[26b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fwrite
<LI><a href="#[269]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fread_bytes_avail
</UL>

<P><STRONG><a name="[1d6]"></a>__rt_memcpy</STRONG> (Thumb, 138 bytes, Stack size 0 bytes, rt_memcpy_v6.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[1d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>

<P><STRONG><a name="[3db]"></a>_memcpy_lastbytes</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rt_memcpy_v6.o(.text), UNUSED)

<P><STRONG><a name="[24d]"></a>__aeabi_memmove</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rt_memmove_v6.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::basic_filebuf&lang;wchar_t, std::char_traits&lang;wchar_t&rang;&rang;::underflow()
<LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::basic_filebuf&lang;char, std::char_traits&lang;char&rang;&rang;::underflow()
<LI><a href="#[2dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::char_traits&lang;char&rang;::move(char*, const char*, unsigned)
<LI><a href="#[21d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memmove
</UL>

<P><STRONG><a name="[1d8]"></a>__rt_memmove</STRONG> (Thumb, 132 bytes, Stack size 0 bytes, rt_memmove_v6.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[1da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__memmove_aligned
<LI><a href="#[1d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>

<P><STRONG><a name="[3dc]"></a>__memmove_lastfew</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rt_memmove_v6.o(.text), UNUSED)

<P><STRONG><a name="[131]"></a>strcmp</STRONG> (Thumb, 128 bytes, Stack size 0 bytes, strcmpv7m.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[130]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_sys_open
<LI><a href="#[2e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::ctype_byname&lang;char&rang;::_C_get_mask_table(const char*)
<LI><a href="#[219]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcoll
<LI><a href="#[113]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_get_lc_numeric
<LI><a href="#[111]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_get_lc_monetary
<LI><a href="#[10e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_get_lc_collate
<LI><a href="#[2b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_get_lc_ctype
<LI><a href="#[2f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::locale::locale(const char*)
</UL>

<P><STRONG><a name="[3dd]"></a>__use_two_region_memory</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, heapauxi.o(.text), UNUSED)

<P><STRONG><a name="[e]"></a>__rt_heap_escrow</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, heapauxi.o(.text), UNUSED)

<P><STRONG><a name="[d]"></a>__rt_heap_expand</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, heapauxi.o(.text), UNUSED)

<P><STRONG><a name="[e0]"></a>__cpp_initialize__aeabi_</STRONG> (Thumb, 26 bytes, Stack size 16 bytes, init_aeabi.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = __cpp_initialize__aeabi_
</UL>
<BR>[Called By]<UL><LI><a href="#[116]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_lib_init_cpp_2
</UL>

<P><STRONG><a name="[30]"></a>__aeabi_unwind_cpp_pr0</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, unwind_pr0.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 784 + Unknown Stack Size
<LI>Call Chain = __aeabi_unwind_cpp_pr0 &rArr; __ARM_unwind_cpp_prcommon &rArr; __cxa_type_match &rArr; __derived_to_base_conversion &rArr; derived_to_base_conversion_r(void*, void**, const std::type_info*, const std::type_info*, unsigned, int*, int, const std::type_info**, a_result_virtuality*, int*) &rArr;  derived_to_base_conversion_r(void*, void**, const std::type_info*, const std::type_info*, unsigned, int*, int, const std::type_info**, a_result_virtuality*, int*) (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[1db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_unwind_cpp_prcommon
</UL>
<BR>[Address Reference Count : 1]<UL><LI> unwinder.o(.text)
</UL>
<P><STRONG><a name="[31]"></a>__aeabi_unwind_cpp_pr1</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, unwind_pr1.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 784 + Unknown Stack Size
<LI>Call Chain = __aeabi_unwind_cpp_pr1 &rArr; __ARM_unwind_cpp_prcommon &rArr; __cxa_type_match &rArr; __derived_to_base_conversion &rArr; derived_to_base_conversion_r(void*, void**, const std::type_info*, const std::type_info*, unsigned, int*, int, const std::type_info**, a_result_virtuality*, int*) &rArr;  derived_to_base_conversion_r(void*, void**, const std::type_info*, const std::type_info*, unsigned, int*, int, const std::type_info**, a_result_virtuality*, int*) (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[1db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_unwind_cpp_prcommon
</UL>
<BR>[Address Reference Count : 1]<UL><LI> unwinder.o(.text)
</UL>
<P><STRONG><a name="[143]"></a>__cxa_allocate_exception</STRONG> (Thumb, 80 bytes, Stack size 16 bytes, arm_exceptions_alloc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 144 + Unknown Stack Size
<LI>Call Chain = __cxa_allocate_exception &rArr; __ARM::call_terminate_handler(_Unwind_Control_Block*) &rArr; std::terminate() &rArr; __cxa_get_globals &rArr; __ARM_exceptions_buffer_init &rArr; malloc &rArr; _malloc_internal &rArr; __Heap_Full &rArr; __Heap_ProvideMemory &rArr; _free_internal &rArr; _mutex_release
</UL>
<BR>[Calls]<UL><LI><a href="#[1de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_exceptions_buffer_allocate
<LI><a href="#[1dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxa_get_globals
<LI><a href="#[1df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM::call_terminate_handler(_Unwind_Control_Block*)
<LI><a href="#[1dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;malloc
</UL>
<BR>[Called By]<UL><LI><a href="#[1e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM::get_foreign_intermediary(__cxa_exception*, _Unwind_Control_Block*)
<LI><a href="#[32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxa_call_unexpected
<LI><a href="#[228]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxa_bad_typeid
<LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__default_new_handler()
<LI><a href="#[d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rw_throw_exception(int, char*)
<LI><a href="#[135]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;stl_test()
</UL>

<P><STRONG><a name="[145]"></a>__cxa_begin_catch</STRONG> (Thumb, 72 bytes, Stack size 16 bytes, arm_exceptions_begincatch.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 176 + Unknown Stack Size
<LI>Call Chain = __cxa_begin_catch &rArr; __ARM::get_foreign_intermediary(__cxa_exception*, _Unwind_Control_Block*) &rArr; __cxa_allocate_exception &rArr; __ARM::call_terminate_handler(_Unwind_Control_Block*) &rArr; std::terminate() &rArr; __cxa_get_globals &rArr; __ARM_exceptions_buffer_init &rArr; malloc &rArr; _malloc_internal &rArr; __Heap_Full &rArr; __Heap_ProvideMemory &rArr; _free_internal &rArr; _mutex_release
</UL>
<BR>[Calls]<UL><LI><a href="#[1e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM::is_foreign_exception(_Unwind_Control_Block*)
<LI><a href="#[1dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxa_get_globals
<LI><a href="#[1e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM::get_foreign_intermediary(__cxa_exception*, _Unwind_Control_Block*)
<LI><a href="#[1e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Unwind_Complete
</UL>
<BR>[Called By]<UL><LI><a href="#[309]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::ios_base::pword(int)
<LI><a href="#[308]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::ios_base::iword(int)
<LI><a href="#[2fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::ios_base::register_callback(void(*)(std::ios_base::event, std::ios_base&, int), int)
<LI><a href="#[2fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::ios_base::_C_fire_event(std::ios_base::event, bool)
<LI><a href="#[2f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::ios_base::_C_copyfmt(const std::ios_base&)
<LI><a href="#[2c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rw_reallocate_temp_buffer(void*, unsigned)
<LI><a href="#[32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxa_call_unexpected
<LI><a href="#[1e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxa_call_terminate
<LI><a href="#[280]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;catopen(const char*, int)
<LI><a href="#[27e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;catgets(__rw::__rw_cat*, int, int, const char*)
<LI><a href="#[28e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rw_allocate(unsigned, int)
<LI><a href="#[38a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::uninitialized_copy&lang;int*, int*, std::allocator&lang;int&rang;&rang;(T1, T1, T2, T3&)
<LI><a href="#[137]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::vector&lang;int, std::allocator&lang;int&rang;&rang;::push_back(const int&)
<LI><a href="#[388]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::vector&lang;int, std::allocator&lang;int&rang;&rang;::_C_insert_aux(int*, const int&)
<LI><a href="#[32d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rb_tree&lang;int, std::pair&lang;const int, int&rang;, __rw::__select1st&lang;std::pair&lang;const int, int&rang;, int&rang;, std::less&lang;int&rang;, std::allocator&lang;std::pair&lang;const int, int&rang;&rang;&rang;::_C_add_new_buffer()
<LI><a href="#[31c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rw_insert&lang;char, std::char_traits&lang;char&rang;, char&rang;(std::basic_ostream&lang;T1, T2&rang;&, T3*, long, long)
<LI><a href="#[135]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;stl_test()
<LI><a href="#[30d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_array_new_general
<LI><a href="#[30f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_vec_cleanup_rethrow
<LI><a href="#[311]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_vec_dtor
<LI><a href="#[30e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_vec_cleanup
<LI><a href="#[2a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;armcpp_exception_cleanup(_Unwind_Reason_Code, _Unwind_Control_Block*)
<LI><a href="#[29e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_vec_delete
<LI><a href="#[2aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__rw_exception::_C_assign(const char*, unsigned)
<LI><a href="#[287]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__rw_exception::_C_vformat(int, std::__va_list)
<LI><a href="#[2e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__rw_exception::_C_vformat(const char*, std::__va_list)
<LI><a href="#[2f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::locale::_C_init()
</UL>

<P><STRONG><a name="[1e3]"></a>__cxa_begin_cleanup</STRONG> (Thumb, 54 bytes, Stack size 16 bytes, arm_exceptions_cleanup.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 176 + Unknown Stack Size
<LI>Call Chain = __cxa_begin_cleanup &rArr; __ARM::get_foreign_intermediary(__cxa_exception*, _Unwind_Control_Block*) &rArr; __cxa_allocate_exception &rArr; __ARM::call_terminate_handler(_Unwind_Control_Block*) &rArr; std::terminate() &rArr; __cxa_get_globals &rArr; __ARM_exceptions_buffer_init &rArr; malloc &rArr; _malloc_internal &rArr; __Heap_Full &rArr; __Heap_ProvideMemory &rArr; _free_internal &rArr; _mutex_release
</UL>
<BR>[Calls]<UL><LI><a href="#[1e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM::is_foreign_exception(_Unwind_Control_Block*)
<LI><a href="#[1dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxa_get_globals
<LI><a href="#[1e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM::get_foreign_intermediary(__cxa_exception*, _Unwind_Control_Block*)
</UL>
<BR>[Called By]<UL><LI><a href="#[1db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_unwind_cpp_prcommon
</UL>

<P><STRONG><a name="[127]"></a>__ARM_cxa_end_cleanup</STRONG> (Thumb, 70 bytes, Stack size 16 bytes, arm_exceptions_cleanup.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[1e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::terminate()
<LI><a href="#[1e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM::is_foreign_exception(_Unwind_Control_Block*)
<LI><a href="#[1dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxa_get_globals
<LI><a href="#[1e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxa_free_exception
</UL>
<BR>[Called By]<UL><LI><a href="#[126]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxa_end_cleanup
</UL>

<P><STRONG><a name="[147]"></a>__cxa_end_catch</STRONG> (Thumb, 74 bytes, Stack size 16 bytes, arm_exceptions_endcatch.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 128 + Unknown Stack Size
<LI>Call Chain = __cxa_end_catch &rArr; std::terminate() &rArr; __cxa_get_globals &rArr; __ARM_exceptions_buffer_init &rArr; malloc &rArr; _malloc_internal &rArr; __Heap_Full &rArr; __Heap_ProvideMemory &rArr; _free_internal &rArr; _mutex_release
</UL>
<BR>[Calls]<UL><LI><a href="#[1e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::terminate()
<LI><a href="#[1e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM::is_foreign_exception(_Unwind_Control_Block*)
<LI><a href="#[1dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxa_get_globals
<LI><a href="#[1e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxa_free_exception
<LI><a href="#[1e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Unwind_DeleteException
</UL>
<BR>[Called By]<UL><LI><a href="#[309]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::ios_base::pword(int)
<LI><a href="#[308]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::ios_base::iword(int)
<LI><a href="#[2fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::ios_base::register_callback(void(*)(std::ios_base::event, std::ios_base&, int), int)
<LI><a href="#[2c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rw_reallocate_temp_buffer(void*, unsigned)
<LI><a href="#[32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxa_call_unexpected
<LI><a href="#[280]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;catopen(const char*, int)
<LI><a href="#[27e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;catgets(__rw::__rw_cat*, int, int, const char*)
<LI><a href="#[28e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rw_allocate(unsigned, int)
<LI><a href="#[31c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rw_insert&lang;char, std::char_traits&lang;char&rang;, char&rang;(std::basic_ostream&lang;T1, T2&rang;&, T3*, long, long)
<LI><a href="#[135]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;stl_test()
<LI><a href="#[30d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_array_new_general
<LI><a href="#[30f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_vec_cleanup_rethrow
<LI><a href="#[311]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_vec_dtor
<LI><a href="#[30e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_vec_cleanup
<LI><a href="#[2aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__rw_exception::_C_assign(const char*, unsigned)
<LI><a href="#[287]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__rw_exception::_C_vformat(int, std::__va_list)
<LI><a href="#[2e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__rw_exception::_C_vformat(const char*, std::__va_list)
<LI><a href="#[2f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::locale::_C_init()
</UL>

<P><STRONG><a name="[1e7]"></a>__cxa_rethrow</STRONG> (Thumb, 82 bytes, Stack size 16 bytes, arm_exceptions_rethrow.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 448 + Unknown Stack Size
<LI>Call Chain = __cxa_rethrow &rArr; _Unwind_RaiseException &rArr; __ARM_Unwind_RaiseException &rArr; malloc &rArr; _malloc_internal &rArr; __Heap_Full &rArr; __Heap_ProvideMemory &rArr; _free_internal &rArr; _mutex_release
</UL>
<BR>[Calls]<UL><LI><a href="#[1e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM::is_foreign_exception(_Unwind_Control_Block*)
<LI><a href="#[1dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxa_get_globals
<LI><a href="#[1e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxa_call_terminate
<LI><a href="#[1df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM::call_terminate_handler(_Unwind_Control_Block*)
<LI><a href="#[1e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Unwind_Activity
<LI><a href="#[129]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Unwind_RaiseException
</UL>
<BR>[Called By]<UL><LI><a href="#[2fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::ios_base::_C_fire_event(std::ios_base::event, bool)
<LI><a href="#[2f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::ios_base::_C_copyfmt(const std::ios_base&)
<LI><a href="#[32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxa_call_unexpected
<LI><a href="#[38a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::uninitialized_copy&lang;int*, int*, std::allocator&lang;int&rang;&rang;(T1, T1, T2, T3&)
<LI><a href="#[137]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::vector&lang;int, std::allocator&lang;int&rang;&rang;::push_back(const int&)
<LI><a href="#[388]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::vector&lang;int, std::allocator&lang;int&rang;&rang;::_C_insert_aux(int*, const int&)
<LI><a href="#[32d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rb_tree&lang;int, std::pair&lang;const int, int&rang;, __rw::__select1st&lang;std::pair&lang;const int, int&rang;, int&rang;, std::less&lang;int&rang;, std::allocator&lang;std::pair&lang;const int, int&rang;&rang;&rang;::_C_add_new_buffer()
<LI><a href="#[31c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rw_insert&lang;char, std::char_traits&lang;char&rang;, char&rang;(std::basic_ostream&lang;T1, T2&rang;&, T3*, long, long)
<LI><a href="#[30d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_array_new_general
<LI><a href="#[30f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_vec_cleanup_rethrow
<LI><a href="#[2a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;armcpp_exception_cleanup(_Unwind_Reason_Code, _Unwind_Control_Block*)
<LI><a href="#[29e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_vec_delete
</UL>

<P><STRONG><a name="[144]"></a>__cxa_throw</STRONG> (Thumb, 54 bytes, Stack size 16 bytes, arm_exceptions_throw.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 448 + Unknown Stack Size
<LI>Call Chain = __cxa_throw &rArr; _Unwind_RaiseException &rArr; __ARM_Unwind_RaiseException &rArr; malloc &rArr; _malloc_internal &rArr; __Heap_Full &rArr; __Heap_ProvideMemory &rArr; _free_internal &rArr; _mutex_release
</UL>
<BR>[Calls]<UL><LI><a href="#[1dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxa_get_globals
<LI><a href="#[1e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxa_call_terminate
<LI><a href="#[1e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Unwind_Activity
<LI><a href="#[129]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Unwind_RaiseException
</UL>
<BR>[Called By]<UL><LI><a href="#[32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxa_call_unexpected
<LI><a href="#[228]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxa_bad_typeid
<LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__default_new_handler()
<LI><a href="#[d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rw_throw_exception(int, char*)
<LI><a href="#[135]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;stl_test()
</UL>

<P><STRONG><a name="[1ea]"></a>__cxa_type_match</STRONG> (Thumb, 260 bytes, Stack size 48 bytes, arm_exceptions_throw.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 688 + Unknown Stack Size
<LI>Call Chain = __cxa_type_match &rArr; __derived_to_base_conversion &rArr; derived_to_base_conversion_r(void*, void**, const std::type_info*, const std::type_info*, unsigned, int*, int, const std::type_info**, a_result_virtuality*, int*) &rArr;  derived_to_base_conversion_r(void*, void**, const std::type_info*, const std::type_info*, unsigned, int*, int, const std::type_info**, a_result_virtuality*, int*) (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[1ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::type_info::operator !=(const std::type_info&) const
<LI><a href="#[1eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::type_info::operator ==(const std::type_info&) const
<LI><a href="#[1e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM::is_foreign_exception(_Unwind_Control_Block*)
<LI><a href="#[1ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__derived_to_base_conversion
<LI><a href="#[1ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_get_typeid
</UL>
<BR>[Called By]<UL><LI><a href="#[32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxa_call_unexpected
<LI><a href="#[1db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_unwind_cpp_prcommon
</UL>

<P><STRONG><a name="[1ef]"></a>std::uncaught_exception()</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, arm_exceptions_uncaught.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 112 + Unknown Stack Size
<LI>Call Chain = std::uncaught_exception() &rArr; __cxa_get_globals &rArr; __ARM_exceptions_buffer_init &rArr; malloc &rArr; _malloc_internal &rArr; __Heap_Full &rArr; __Heap_ProvideMemory &rArr; _free_internal &rArr; _mutex_release
</UL>
<BR>[Calls]<UL><LI><a href="#[1dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxa_get_globals
</UL>
<BR>[Called By]<UL><LI><a href="#[320]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::basic_ostream&lang;char, std::char_traits&lang;char&rang;&rang;::sentry::~sentry()
</UL>

<P><STRONG><a name="[1f0]"></a>__rt_ctype_table</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, rt_ctype_table.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = __rt_ctype_table &rArr; __rt_locale
</UL>
<BR>[Calls]<UL><LI><a href="#[10c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_locale
</UL>
<BR>[Called By]<UL><LI><a href="#[2e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::ctype_byname&lang;char&rang;::_C_get_mask_table(const char*)
<LI><a href="#[39]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;isspace
<LI><a href="#[239]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_wcrtomb
<LI><a href="#[242]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_mbrtowc
</UL>

<P><STRONG><a name="[1f1]"></a>__rt_new_handler_addr</STRONG> (Thumb, 10 bytes, Stack size 8 bytes, rt_new_handler_addr_twolibspace.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __rt_new_handler_addr
</UL>
<BR>[Calls]<UL><LI><a href="#[1c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_perproc_libspace
</UL>
<BR>[Called By]<UL><LI><a href="#[281]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;operator new(unsigned)
</UL>

<P><STRONG><a name="[1f2]"></a>__rt_ddtor_pointer_addr</STRONG> (Thumb, 10 bytes, Stack size 8 bytes, rt_ddtor_pointer_addr_twolibspace.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __rt_ddtor_pointer_addr
</UL>
<BR>[Calls]<UL><LI><a href="#[1c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_perproc_libspace
</UL>
<BR>[Called By]<UL><LI><a href="#[118]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxa_finalize
<LI><a href="#[155]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_atexit
</UL>

<P><STRONG><a name="[1f3]"></a>_malloc_internal</STRONG> (Thumb, 130 bytes, Stack size 24 bytes, h1_alloc_mt.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = _malloc_internal &rArr; __Heap_Full &rArr; __Heap_ProvideMemory &rArr; _free_internal &rArr; _mutex_release
</UL>
<BR>[Calls]<UL><LI><a href="#[df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_mutex_release
<LI><a href="#[de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_mutex_acquire
<LI><a href="#[1f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__Heap_Full
<LI><a href="#[1f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Heap1_SizeAdjust
</UL>
<BR>[Called By]<UL><LI><a href="#[1dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;malloc
</UL>

<P><STRONG><a name="[1dd]"></a>malloc</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, h1_alloc_mt.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = malloc &rArr; _malloc_internal &rArr; __Heap_Full &rArr; __Heap_ProvideMemory &rArr; _free_internal &rArr; _mutex_release
</UL>
<BR>[Calls]<UL><LI><a href="#[1f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_heap_descriptor
<LI><a href="#[1f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_malloc_internal
</UL>
<BR>[Called By]<UL><LI><a href="#[231]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_exceptions_buffer_init
<LI><a href="#[1dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxa_get_globals
<LI><a href="#[12a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_Unwind_RaiseException
<LI><a href="#[266]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__flsbuf
<LI><a href="#[263]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__filbuf
<LI><a href="#[247]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fopen$locked
<LI><a href="#[143]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxa_allocate_exception
<LI><a href="#[155]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_atexit
<LI><a href="#[281]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;operator new(unsigned)
</UL>

<P><STRONG><a name="[1f7]"></a>_free_internal</STRONG> (Thumb, 98 bytes, Stack size 16 bytes, h1_free_mt.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = _free_internal &rArr; _mutex_release
</UL>
<BR>[Calls]<UL><LI><a href="#[df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_mutex_release
<LI><a href="#[de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_mutex_acquire
</UL>
<BR>[Called By]<UL><LI><a href="#[233]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__Heap_ProvideMemory
<LI><a href="#[1f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;free
</UL>

<P><STRONG><a name="[1f8]"></a>free</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, h1_free_mt.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = free &rArr; _free_internal &rArr; _mutex_release
</UL>
<BR>[Calls]<UL><LI><a href="#[1f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_heap_descriptor
<LI><a href="#[1f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_free_internal
</UL>
<BR>[Called By]<UL><LI><a href="#[118]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxa_finalize
<LI><a href="#[1e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxa_free_exception
<LI><a href="#[1e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Unwind_Complete
<LI><a href="#[11a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_terminateio
<LI><a href="#[208]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fclose_internal
<LI><a href="#[282]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;operator delete (void*)
</UL>

<P><STRONG><a name="[1f9]"></a>vsnprintf</STRONG> (Thumb, 46 bytes, Stack size 24 bytes, vsnprintf.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 128 + Unknown Stack Size
<LI>Call Chain = vsnprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[1fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_sputc
<LI><a href="#[1fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_char_common
</UL>
<BR>[Called By]<UL><LI><a href="#[28f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rw_vfmatstr(char*, unsigned, const char*, std::__va_list)
</UL>

<P><STRONG><a name="[1cd]"></a>_printf_int_common</STRONG> (Thumb, 184 bytes, Stack size 32 bytes, _printf_intcommon.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = _printf_int_common &rArr; _printf_post_padding
</UL>
<BR>[Calls]<UL><LI><a href="#[1fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_post_padding
<LI><a href="#[1fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_pre_padding
</UL>
<BR>[Called By]<UL><LI><a href="#[23c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_longlong_hex
<LI><a href="#[23b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_longlong_oct
<LI><a href="#[f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_longlong_dec
<LI><a href="#[f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_int_dec
</UL>

<P><STRONG><a name="[1fe]"></a>sscanf</STRONG> (Thumb, 52 bytes, Stack size 72 bytes, sscanf.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 488<LI>Call Chain = sscanf &rArr; __vfscanf_char &rArr; __vfscanf &rArr; _scanf_real &rArr; _scanf_really_real &rArr; _fp_value &rArr; _btod_etento &rArr; _btod_emul &rArr; _e2e
</UL>
<BR>[Calls]<UL><LI><a href="#[1ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__vfscanf_char
</UL>
<BR>[Called By]<UL><LI><a href="#[291]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rw_vfmatstr(char*, unsigned, int, std::__va_list)
</UL>

<P><STRONG><a name="[1d3]"></a>_fseek</STRONG> (Thumb, 244 bytes, Stack size 24 bytes, fseek.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = _fseek &rArr; _ftell_internal &rArr; __aeabi_errno_addr &rArr; __user_perthread_libspace
</UL>
<BR>[Calls]<UL><LI><a href="#[200]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_sys_istty
<LI><a href="#[202]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_sys_flen
<LI><a href="#[203]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_seterr
<LI><a href="#[201]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ftell_internal
</UL>
<BR>[Called By]<UL><LI><a href="#[20d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fseek
<LI><a href="#[1d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_do_fflush
<LI><a href="#[246]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_freopen_locked
</UL>

<P><STRONG><a name="[3de]"></a>_fseek$unlocked</STRONG> (Thumb, 0 bytes, Stack size 24 bytes, fseek.o(.text), UNUSED)

<P><STRONG><a name="[3df]"></a>_ftell$unlocked</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, ftell.o(.text), UNUSED)

<P><STRONG><a name="[201]"></a>_ftell_internal</STRONG> (Thumb, 70 bytes, Stack size 8 bytes, ftell.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = _ftell_internal &rArr; __aeabi_errno_addr &rArr; __user_perthread_libspace
</UL>
<BR>[Calls]<UL><LI><a href="#[204]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_errno_addr
</UL>
<BR>[Called By]<UL><LI><a href="#[20b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ftell
<LI><a href="#[1d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fseek
</UL>

<P><STRONG><a name="[203]"></a>_seterr</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, stdio.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[205]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_writebuf
<LI><a href="#[1d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fseek
<LI><a href="#[266]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__flsbuf
<LI><a href="#[263]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__filbuf
<LI><a href="#[262]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_readbuf
</UL>

<P><STRONG><a name="[205]"></a>_writebuf</STRONG> (Thumb, 84 bytes, Stack size 32 bytes, stdio.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = _writebuf &rArr; _sys_write
</UL>
<BR>[Calls]<UL><LI><a href="#[206]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_sys_seek
<LI><a href="#[132]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_sys_write
<LI><a href="#[203]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_seterr
</UL>
<BR>[Called By]<UL><LI><a href="#[1d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fflush
<LI><a href="#[266]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__flsbuf
<LI><a href="#[26b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fwrite
</UL>

<P><STRONG><a name="[1d2]"></a>_fflush</STRONG> (Thumb, 70 bytes, Stack size 16 bytes, stdio.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = _fflush &rArr; _writebuf &rArr; _sys_write
</UL>
<BR>[Calls]<UL><LI><a href="#[205]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_writebuf
</UL>
<BR>[Called By]<UL><LI><a href="#[208]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fclose_internal
<LI><a href="#[207]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_deferredlazyseek
<LI><a href="#[1d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_do_fflush
<LI><a href="#[263]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__filbuf
</UL>

<P><STRONG><a name="[207]"></a>_deferredlazyseek</STRONG> (Thumb, 60 bytes, Stack size 8 bytes, stdio.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[1d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fflush
</UL>
<BR>[Called By]<UL><LI><a href="#[266]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__flsbuf
<LI><a href="#[263]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__filbuf
</UL>

<P><STRONG><a name="[3e0]"></a>_fclose$unlocked</STRONG> (Thumb, 0 bytes, Stack size 32 bytes, fclose.o(.text), UNUSED)

<P><STRONG><a name="[208]"></a>_fclose_internal</STRONG> (Thumb, 76 bytes, Stack size 32 bytes, fclose.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = _fclose_internal &rArr; _fflush &rArr; _writebuf &rArr; _sys_write
</UL>
<BR>[Calls]<UL><LI><a href="#[209]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_sys_close
<LI><a href="#[20a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[1d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fflush
<LI><a href="#[1f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;free
</UL>
<BR>[Called By]<UL><LI><a href="#[11a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_terminateio
<LI><a href="#[20c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fclose
<LI><a href="#[246]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_freopen_locked
</UL>

<P><STRONG><a name="[20b]"></a>ftell</STRONG> (Thumb, 32 bytes, Stack size 16 bytes, ftell_locked.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = ftell &rArr; _ftell_internal &rArr; __aeabi_errno_addr &rArr; __user_perthread_libspace
</UL>
<BR>[Calls]<UL><LI><a href="#[df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_mutex_release
<LI><a href="#[de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_mutex_acquire
<LI><a href="#[201]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ftell_internal
</UL>
<BR>[Called By]<UL><LI><a href="#[289]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rw_file_t::_C_seek(long, int)
</UL>

<P><STRONG><a name="[20c]"></a>fclose</STRONG> (Thumb, 46 bytes, Stack size 16 bytes, fclose_locked.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = fclose &rArr; _fclose_internal &rArr; _fflush &rArr; _writebuf &rArr; _sys_write
</UL>
<BR>[Calls]<UL><LI><a href="#[df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_mutex_release
<LI><a href="#[de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_mutex_acquire
<LI><a href="#[208]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fclose_internal
</UL>
<BR>[Called By]<UL><LI><a href="#[28a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rw_file_t::_C_close()
</UL>

<P><STRONG><a name="[20d]"></a>fseek</STRONG> (Thumb, 44 bytes, Stack size 24 bytes, fseek_locked.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = fseek &rArr; _fseek &rArr; _ftell_internal &rArr; __aeabi_errno_addr &rArr; __user_perthread_libspace
</UL>
<BR>[Calls]<UL><LI><a href="#[df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_mutex_release
<LI><a href="#[de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_mutex_acquire
<LI><a href="#[1d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fseek
</UL>
<BR>[Called By]<UL><LI><a href="#[289]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rw_file_t::_C_seek(long, int)
</UL>

<P><STRONG><a name="[20e]"></a>clearerr</STRONG> (Thumb, 32 bytes, Stack size 16 bytes, clearerr_locked.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = clearerr &rArr; _mutex_release
</UL>
<BR>[Calls]<UL><LI><a href="#[df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_mutex_release
<LI><a href="#[de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_mutex_acquire
</UL>
<BR>[Called By]<UL><LI><a href="#[288]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rw_file_t::_C_read(void*, unsigned, unsigned)
</UL>

<P><STRONG><a name="[20f]"></a>ferror</STRONG> (Thumb, 30 bytes, Stack size 16 bytes, ferror_locked.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = ferror &rArr; _mutex_release
</UL>
<BR>[Calls]<UL><LI><a href="#[df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_mutex_release
<LI><a href="#[de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_mutex_acquire
</UL>
<BR>[Called By]<UL><LI><a href="#[288]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rw_file_t::_C_read(void*, unsigned, unsigned)
</UL>

<P><STRONG><a name="[115]"></a>_initio</STRONG> (Thumb, 240 bytes, Stack size 8 bytes, initio_locked.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 168<LI>Call Chain = _initio &rArr; freopen &rArr; _freopen_locked &rArr; _fclose_internal &rArr; _fflush &rArr; _writebuf &rArr; _sys_write
</UL>
<BR>[Calls]<UL><LI><a href="#[dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_mutex_initialize
<LI><a href="#[20a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[211]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_SIGRTRED
<LI><a href="#[210]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;freopen
<LI><a href="#[212]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setvbuf
</UL>
<BR>[Called By]<UL><LI><a href="#[114]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_lib_init_stdio_2
</UL>

<P><STRONG><a name="[11a]"></a>_terminateio</STRONG> (Thumb, 168 bytes, Stack size 24 bytes, initio_locked.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = _terminateio &rArr; _fclose_internal &rArr; _fflush &rArr; _writebuf &rArr; _sys_write
</UL>
<BR>[Calls]<UL><LI><a href="#[df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_mutex_release
<LI><a href="#[de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_mutex_acquire
<LI><a href="#[208]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fclose_internal
<LI><a href="#[1f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;free
</UL>
<BR>[Called By]<UL><LI><a href="#[119]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_lib_shutdown_stdio_2
</UL>

<P><STRONG><a name="[213]"></a>setlocale</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, locale.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = setlocale &rArr; _setlocale_r &rArr; _set_locale_byname &rArr; _locale_name &rArr; __rt_locale
</UL>
<BR>[Calls]<UL><LI><a href="#[214]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_setlocale_r
</UL>
<BR>[Called By]<UL><LI><a href="#[2c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rw_use_c_lib_locale::__rw_use_c_lib_locale(const char*, int)
<LI><a href="#[2c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rw_use_c_lib_locale::~__rw_use_c_lib_locale()
<LI><a href="#[298]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rw_locale_imp::_C_parse_name(__rw::__rw_locale_vector&lang;std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;&rang;&, const char*)
<LI><a href="#[2f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::locale::global(const std::locale&)
</UL>

<P><STRONG><a name="[215]"></a>localeconv</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, localeconv.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[216]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_get_lconv
</UL>
<BR>[Called By]<UL><LI><a href="#[2c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rw_numpunct_impl_base::_C_get_named_init_(const char*)
</UL>

<P><STRONG><a name="[36c]"></a>mbsinit</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, mbsinit.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[37b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::basic_filebuf&lang;wchar_t, std::char_traits&lang;wchar_t&rang;&rang;::_C_unshift()
<LI><a href="#[369]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::basic_filebuf&lang;char, std::char_traits&lang;char&rang;&rang;::_C_unshift()
</UL>

<P><STRONG><a name="[217]"></a>abort</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, abort.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40 + Unknown Stack Size
<LI>Call Chain = abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[11e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_sys_exit
<LI><a href="#[11c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_lib_shutdown
<LI><a href="#[218]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_SIGABRT
</UL>
<BR>[Called By]<UL><LI><a href="#[1e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::terminate()
<LI><a href="#[1dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxa_get_globals
<LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__default_terminate_handler()
<LI><a href="#[1e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Unwind_Complete
<LI><a href="#[222]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_unwind_next_frame
<LI><a href="#[12b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_Unwind_Resume
<LI><a href="#[22b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::unexpected()
</UL>

<P><STRONG><a name="[219]"></a>strcoll</STRONG> (Thumb, 52 bytes, Stack size 16 bytes, strcoll.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = strcoll &rArr; __rt_locale
</UL>
<BR>[Calls]<UL><LI><a href="#[10c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_locale
<LI><a href="#[131]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcmp
</UL>
<BR>[Called By]<UL><LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::collate_byname&lang;char&rang;::do_compare(const char*, const char*, const char*, const char*) const
</UL>

<P><STRONG><a name="[21a]"></a>strxfrm</STRONG> (Thumb, 80 bytes, Stack size 24 bytes, strxfrm.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = strxfrm &rArr; __rt_locale
</UL>
<BR>[Calls]<UL><LI><a href="#[10c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_locale
<LI><a href="#[21b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
</UL>
<BR>[Called By]<UL><LI><a href="#[a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::collate_byname&lang;char&rang;::do_transform(const char*, const char*) const
</UL>

<P><STRONG><a name="[2c2]"></a>strcpy</STRONG> (Thumb, 72 bytes, Stack size 12 bytes, strcpy.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = strcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[2c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rw_use_c_lib_locale::__rw_use_c_lib_locale(const char*, int)
<LI><a href="#[2aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__rw_exception::_C_assign(const char*, unsigned)
<LI><a href="#[287]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__rw_exception::_C_vformat(int, std::__va_list)
<LI><a href="#[2e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__rw_exception::_C_vformat(const char*, std::__va_list)
<LI><a href="#[2c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rw_numpunct_impl_base::_C_get_named_init_(const char*)
</UL>

<P><STRONG><a name="[292]"></a>strrchr</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, strrchr.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[291]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rw_vfmatstr(char*, unsigned, int, std::__va_list)
</UL>

<P><STRONG><a name="[21c]"></a>wmemmove</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, wmemmove.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = wmemmove &rArr; memmove
</UL>
<BR>[Calls]<UL><LI><a href="#[21d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memmove
</UL>
<BR>[Called By]<UL><LI><a href="#[2e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::char_traits&lang;wchar_t&rang;::move(wchar_t*, const wchar_t*, unsigned)
</UL>

<P><STRONG><a name="[2e9]"></a>strcat</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, strcat.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[287]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__rw_exception::_C_vformat(int, std::__va_list)
<LI><a href="#[2e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__rw_exception::_C_vformat(const char*, std::__va_list)
</UL>

<P><STRONG><a name="[21e]"></a>memcpy</STRONG> (Thumb, 8 bytes, Stack size 8 bytes, memcpy.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[1d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[29f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rw_locale_imp::__rw_locale_imp(const __rw::__rw_locale_imp&, const char*, unsigned)
<LI><a href="#[29b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rw_locale_imp::__rw_locale_imp(const char*, unsigned, unsigned)
</UL>

<P><STRONG><a name="[1d7]"></a>__aeabi_memcpy4</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, rt_memcpy_w.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __aeabi_memcpy4
</UL>
<BR>[Called By]<UL><LI><a href="#[309]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::ios_base::pword(int)
<LI><a href="#[308]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::ios_base::iword(int)
<LI><a href="#[2fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::ios_base::register_callback(void(*)(std::ios_base::event, std::ios_base&, int), int)
<LI><a href="#[2fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::ios_base::_C_fire_event(std::ios_base::event, bool)
<LI><a href="#[2f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::ios_base::_C_copyfmt(const std::ios_base&)
<LI><a href="#[1e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Unwind_Complete
<LI><a href="#[12a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_Unwind_RaiseException
<LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_memmove_w
<LI><a href="#[1d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_memcpy
</UL>

<P><STRONG><a name="[3e1]"></a>__aeabi_memcpy8</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, rt_memcpy_w.o(.text), UNUSED)

<P><STRONG><a name="[3e2]"></a>__rt_memcpy_w</STRONG> (Thumb, 100 bytes, Stack size 8 bytes, rt_memcpy_w.o(.text), UNUSED)

<P><STRONG><a name="[3e3]"></a>_memcpy_lastbytes_aligned</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rt_memcpy_w.o(.text), UNUSED)

<P><STRONG><a name="[3e4]"></a>__aeabi_memmove4</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, rt_memmove_w.o(.text), UNUSED)

<P><STRONG><a name="[3e5]"></a>__aeabi_memmove8</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, rt_memmove_w.o(.text), UNUSED)

<P><STRONG><a name="[21f]"></a>__rt_memmove_w</STRONG> (Thumb, 122 bytes, Stack size 8 bytes, rt_memmove_w.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[1d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>

<P><STRONG><a name="[1da]"></a>__memmove_aligned</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rt_memmove_w.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[1d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_memmove
</UL>

<P><STRONG><a name="[3e6]"></a>__memmove_lastfew_aligned</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rt_memmove_w.o(.text), UNUSED)

<P><STRONG><a name="[20a]"></a>__aeabi_memclr4</STRONG> (Thumb, 0 bytes, Stack size 4 bytes, rt_memclr_w.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = __aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[309]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::ios_base::pword(int)
<LI><a href="#[308]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::ios_base::iword(int)
<LI><a href="#[2fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::ios_base::register_callback(void(*)(std::ios_base::event, std::ios_base&, int), int)
<LI><a href="#[115]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_initio
<LI><a href="#[208]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fclose_internal
<LI><a href="#[247]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fopen$locked
</UL>

<P><STRONG><a name="[3e7]"></a>__aeabi_memclr8</STRONG> (Thumb, 0 bytes, Stack size 4 bytes, rt_memclr_w.o(.text), UNUSED)

<P><STRONG><a name="[3e8]"></a>__rt_memclr_w</STRONG> (Thumb, 78 bytes, Stack size 4 bytes, rt_memclr_w.o(.text), UNUSED)

<P><STRONG><a name="[3e9]"></a>_memset_w</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rt_memclr_w.o(.text), UNUSED)

<P><STRONG><a name="[225]"></a>_Unwind_VRS_Set</STRONG> (Thumb, 46 bytes, Stack size 8 bytes, unwinder.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = _Unwind_VRS_Set
</UL>
<BR>[Called By]<UL><LI><a href="#[1db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_unwind_cpp_prcommon
</UL>

<P><STRONG><a name="[224]"></a>_Unwind_VRS_Get</STRONG> (Thumb, 46 bytes, Stack size 8 bytes, unwinder.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = _Unwind_VRS_Get
</UL>
<BR>[Called By]<UL><LI><a href="#[1db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_unwind_cpp_prcommon
</UL>

<P><STRONG><a name="[227]"></a>_Unwind_VRS_Pop</STRONG> (Thumb, 272 bytes, Stack size 288 bytes, unwinder.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 288<LI>Call Chain = _Unwind_VRS_Pop
</UL>
<BR>[Called By]<UL><LI><a href="#[1db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_unwind_cpp_prcommon
</UL>

<P><STRONG><a name="[222]"></a>__ARM_unwind_next_frame</STRONG> (Thumb, 46 bytes, Stack size 0 bytes, unwinder.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56 + Unknown Stack Size
<LI>Call Chain = __ARM_unwind_next_frame &rArr; find_and_expand_eit_entry &rArr; bsearch
</UL>
<BR>[Calls]<UL><LI><a href="#[223]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_Unwind_VRS_corerestore
<LI><a href="#[220]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;find_and_expand_eit_entry
<LI><a href="#[217]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;abort
</UL>
<BR>[Called By]<UL><LI><a href="#[12b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_Unwind_Resume
<LI><a href="#[12a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_Unwind_RaiseException
</UL>

<P><STRONG><a name="[12a]"></a>__ARM_Unwind_RaiseException</STRONG> (Thumb, 208 bytes, Stack size 352 bytes, unwinder.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 432 + Unknown Stack Size
<LI>Call Chain = __ARM_Unwind_RaiseException &rArr; malloc &rArr; _malloc_internal &rArr; __Heap_Full &rArr; __Heap_ProvideMemory &rArr; _free_internal &rArr; _mutex_release
</UL>
<BR>[Calls]<UL><LI><a href="#[1e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Unwind_Activity
<LI><a href="#[222]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_unwind_next_frame
<LI><a href="#[220]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;find_and_expand_eit_entry
<LI><a href="#[1d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
<LI><a href="#[1dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;malloc
</UL>
<BR>[Called By]<UL><LI><a href="#[129]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Unwind_RaiseException
</UL>

<P><STRONG><a name="[12b]"></a>__ARM_Unwind_Resume</STRONG> (Thumb, 44 bytes, Stack size 0 bytes, unwinder.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[222]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_unwind_next_frame
<LI><a href="#[223]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_Unwind_VRS_corerestore
<LI><a href="#[217]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;abort
</UL>
<BR>[Called By]<UL><LI><a href="#[128]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Unwind_Resume
</UL>

<P><STRONG><a name="[1e2]"></a>_Unwind_Complete</STRONG> (Thumb, 70 bytes, Stack size 16 bytes, unwinder.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56 + Unknown Stack Size
<LI>Call Chain = _Unwind_Complete &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[1d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
<LI><a href="#[217]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;abort
<LI><a href="#[1f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;free
</UL>
<BR>[Called By]<UL><LI><a href="#[145]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxa_begin_catch
</UL>

<P><STRONG><a name="[1e6]"></a>_Unwind_DeleteException</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, unwind_delete.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[147]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxa_end_catch
</UL>

<P><STRONG><a name="[1db]"></a>__ARM_unwind_cpp_prcommon</STRONG> (Thumb, 1496 bytes, Stack size 96 bytes, unwind_prcommon.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 784 + Unknown Stack Size
<LI>Call Chain = __ARM_unwind_cpp_prcommon &rArr; __cxa_type_match &rArr; __derived_to_base_conversion &rArr; derived_to_base_conversion_r(void*, void**, const std::type_info*, const std::type_info*, unsigned, int*, int, const std::type_info**, a_result_virtuality*, int*) &rArr;  derived_to_base_conversion_r(void*, void**, const std::type_info*, const std::type_info*, unsigned, int*, int, const std::type_info**, a_result_virtuality*, int*) (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[226]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;next_unwind_byte
<LI><a href="#[1e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Unwind_Activity
<LI><a href="#[227]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Unwind_VRS_Pop
<LI><a href="#[224]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Unwind_VRS_Get
<LI><a href="#[225]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Unwind_VRS_Set
<LI><a href="#[1ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxa_type_match
<LI><a href="#[1e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxa_begin_cleanup
</UL>
<BR>[Called By]<UL><LI><a href="#[31]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_unwind_cpp_pr1
<LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_unwind_cpp_pr0
</UL>

<P><STRONG><a name="[228]"></a>__cxa_bad_typeid</STRONG> (Thumb, 38 bytes, Stack size 16 bytes, arm_exceptions_bad_typeid.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 464 + Unknown Stack Size
<LI>Call Chain = __cxa_bad_typeid &rArr; __cxa_throw &rArr; _Unwind_RaiseException &rArr; __ARM_Unwind_RaiseException &rArr; malloc &rArr; _malloc_internal &rArr; __Heap_Full &rArr; __Heap_ProvideMemory &rArr; _free_internal &rArr; _mutex_release
</UL>
<BR>[Calls]<UL><LI><a href="#[33]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::bad_typeid::~bad_typeid()
<LI><a href="#[229]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::bad_typeid::bad_typeid()
<LI><a href="#[22a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::bad_typeid::bad_typeid(const std::bad_typeid&)
<LI><a href="#[144]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxa_throw
<LI><a href="#[143]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxa_allocate_exception
</UL>
<BR>[Called By]<UL><LI><a href="#[1ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_get_typeid
</UL>

<P><STRONG><a name="[1df]"></a>__ARM::call_terminate_handler(_Unwind_Control_Block*)</STRONG> (Thumb, 42 bytes, Stack size 16 bytes, arm_exceptions_callterm.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 128 + Unknown Stack Size
<LI>Call Chain = __ARM::call_terminate_handler(_Unwind_Control_Block*) &rArr; std::terminate() &rArr; __cxa_get_globals &rArr; __ARM_exceptions_buffer_init &rArr; malloc &rArr; _malloc_internal &rArr; __Heap_Full &rArr; __Heap_ProvideMemory &rArr; _free_internal &rArr; _mutex_release
</UL>
<BR>[Calls]<UL><LI><a href="#[1e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::terminate()
<LI><a href="#[1e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM::is_foreign_exception(_Unwind_Control_Block*)
<LI><a href="#[1dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxa_get_globals
</UL>
<BR>[Called By]<UL><LI><a href="#[32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxa_call_unexpected
<LI><a href="#[1e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxa_call_terminate
<LI><a href="#[1e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxa_rethrow
<LI><a href="#[143]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxa_allocate_exception
</UL>

<P><STRONG><a name="[1e9]"></a>__cxa_call_terminate</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, arm_exceptions_callterm.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 184 + Unknown Stack Size
<LI>Call Chain = __cxa_call_terminate &rArr; __cxa_begin_catch &rArr; __ARM::get_foreign_intermediary(__cxa_exception*, _Unwind_Control_Block*) &rArr; __cxa_allocate_exception &rArr; __ARM::call_terminate_handler(_Unwind_Control_Block*) &rArr; std::terminate() &rArr; __cxa_get_globals &rArr; __ARM_exceptions_buffer_init &rArr; malloc &rArr; _malloc_internal &rArr; __Heap_Full &rArr; __Heap_ProvideMemory &rArr; _free_internal &rArr; _mutex_release
</UL>
<BR>[Calls]<UL><LI><a href="#[1df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM::call_terminate_handler(_Unwind_Control_Block*)
<LI><a href="#[145]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxa_begin_catch
</UL>
<BR>[Called By]<UL><LI><a href="#[144]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxa_throw
<LI><a href="#[1e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxa_rethrow
</UL>

<P><STRONG><a name="[32]"></a>__cxa_call_unexpected</STRONG> (Thumb, 200 bytes, Stack size 40 bytes, arm_exceptions_callunex.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 728 + Unknown Stack Size
<LI>Call Chain = __cxa_call_unexpected &rArr; __cxa_type_match &rArr; __derived_to_base_conversion &rArr; derived_to_base_conversion_r(void*, void**, const std::type_info*, const std::type_info*, unsigned, int*, int, const std::type_info**, a_result_virtuality*, int*) &rArr;  derived_to_base_conversion_r(void*, void**, const std::type_info*, const std::type_info*, unsigned, int*, int, const std::type_info**, a_result_virtuality*, int*) (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[1eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::type_info::operator ==(const std::type_info&) const
<LI><a href="#[1e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::terminate()
<LI><a href="#[1e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM::is_foreign_exception(_Unwind_Control_Block*)
<LI><a href="#[1dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxa_get_globals
<LI><a href="#[1df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM::call_terminate_handler(_Unwind_Control_Block*)
<LI><a href="#[34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::bad_exception::~bad_exception()
<LI><a href="#[22c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::bad_exception::bad_exception()
<LI><a href="#[22d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::bad_exception::bad_exception(const std::bad_exception&)
<LI><a href="#[22b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::unexpected()
<LI><a href="#[1ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxa_type_match
<LI><a href="#[144]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxa_throw
<LI><a href="#[1e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxa_rethrow
<LI><a href="#[147]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxa_end_catch
<LI><a href="#[145]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxa_begin_catch
<LI><a href="#[143]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxa_allocate_exception
</UL>
<BR>[Address Reference Count : 1]<UL><LI> unwind_prcommon.o(.text)
</UL>
<P><STRONG><a name="[1e1]"></a>__ARM::get_foreign_intermediary(__cxa_exception*, _Unwind_Control_Block*)</STRONG> (Thumb, 60 bytes, Stack size 16 bytes, arm_exceptions_foreign.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 160 + Unknown Stack Size
<LI>Call Chain = __ARM::get_foreign_intermediary(__cxa_exception*, _Unwind_Control_Block*) &rArr; __cxa_allocate_exception &rArr; __ARM::call_terminate_handler(_Unwind_Control_Block*) &rArr; std::terminate() &rArr; __cxa_get_globals &rArr; __ARM_exceptions_buffer_init &rArr; malloc &rArr; _malloc_internal &rArr; __Heap_Full &rArr; __Heap_ProvideMemory &rArr; _free_internal &rArr; _mutex_release
</UL>
<BR>[Calls]<UL><LI><a href="#[22e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM::same_exceptions_class(const void*, const void*)
<LI><a href="#[143]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxa_allocate_exception
</UL>
<BR>[Called By]<UL><LI><a href="#[1e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxa_begin_cleanup
<LI><a href="#[145]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxa_begin_catch
</UL>

<P><STRONG><a name="[1e5]"></a>__cxa_free_exception</STRONG> (Thumb, 34 bytes, Stack size 8 bytes, arm_exceptions_free.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 112 + Unknown Stack Size
<LI>Call Chain = __cxa_free_exception &rArr; __cxa_get_globals &rArr; __ARM_exceptions_buffer_init &rArr; malloc &rArr; _malloc_internal &rArr; __Heap_Full &rArr; __Heap_ProvideMemory &rArr; _free_internal &rArr; _mutex_release
</UL>
<BR>[Calls]<UL><LI><a href="#[22f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_exceptions_buffer_free
<LI><a href="#[1dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxa_get_globals
<LI><a href="#[1f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;free
</UL>
<BR>[Called By]<UL><LI><a href="#[2a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;armcpp_exception_cleanup(_Unwind_Reason_Code, _Unwind_Control_Block*)
<LI><a href="#[147]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxa_end_catch
<LI><a href="#[127]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_cxa_end_cleanup
</UL>

<P><STRONG><a name="[1dc]"></a>__cxa_get_globals</STRONG> (Thumb, 62 bytes, Stack size 16 bytes, arm_exceptions_globs.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 104 + Unknown Stack Size
<LI>Call Chain = __cxa_get_globals &rArr; __ARM_exceptions_buffer_init &rArr; malloc &rArr; _malloc_internal &rArr; __Heap_Full &rArr; __Heap_ProvideMemory &rArr; _free_internal &rArr; _mutex_release
</UL>
<BR>[Calls]<UL><LI><a href="#[230]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_eh_globals_addr
<LI><a href="#[231]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_exceptions_buffer_init
<LI><a href="#[217]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;abort
<LI><a href="#[1dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;malloc
</UL>
<BR>[Called By]<UL><LI><a href="#[1e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::terminate()
<LI><a href="#[1e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxa_free_exception
<LI><a href="#[32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxa_call_unexpected
<LI><a href="#[1df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM::call_terminate_handler(_Unwind_Control_Block*)
<LI><a href="#[22b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::unexpected()
<LI><a href="#[1ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::uncaught_exception()
<LI><a href="#[144]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxa_throw
<LI><a href="#[2a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;armcpp_exception_cleanup(_Unwind_Reason_Code, _Unwind_Control_Block*)
<LI><a href="#[1e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxa_rethrow
<LI><a href="#[147]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxa_end_catch
<LI><a href="#[1e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxa_begin_cleanup
<LI><a href="#[127]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_cxa_end_cleanup
<LI><a href="#[145]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxa_begin_catch
<LI><a href="#[143]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxa_allocate_exception
</UL>

<P><STRONG><a name="[231]"></a>__ARM_exceptions_buffer_init</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, arm_exceptions_mem.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = __ARM_exceptions_buffer_init &rArr; malloc &rArr; _malloc_internal &rArr; __Heap_Full &rArr; __Heap_ProvideMemory &rArr; _free_internal &rArr; _mutex_release
</UL>
<BR>[Calls]<UL><LI><a href="#[1dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;malloc
</UL>
<BR>[Called By]<UL><LI><a href="#[1dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxa_get_globals
</UL>

<P><STRONG><a name="[1de]"></a>__ARM_exceptions_buffer_allocate</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, arm_exceptions_mem.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[143]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxa_allocate_exception
</UL>

<P><STRONG><a name="[22f]"></a>__ARM_exceptions_buffer_free</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, arm_exceptions_mem.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[1e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxa_free_exception
</UL>

<P><STRONG><a name="[22e]"></a>__ARM::same_exceptions_class(const void*, const void*)</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, arm_exceptions_support.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[1e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM::is_foreign_exception(_Unwind_Control_Block*)
<LI><a href="#[1e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM::get_foreign_intermediary(__cxa_exception*, _Unwind_Control_Block*)
</UL>

<P><STRONG><a name="[1e0]"></a>__ARM::is_foreign_exception(_Unwind_Control_Block*)</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, arm_exceptions_support.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __ARM::is_foreign_exception(_Unwind_Control_Block*)
</UL>
<BR>[Calls]<UL><LI><a href="#[22e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM::same_exceptions_class(const void*, const void*)
</UL>
<BR>[Called By]<UL><LI><a href="#[32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxa_call_unexpected
<LI><a href="#[1df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM::call_terminate_handler(_Unwind_Control_Block*)
<LI><a href="#[1ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxa_type_match
<LI><a href="#[1e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxa_rethrow
<LI><a href="#[147]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxa_end_catch
<LI><a href="#[1e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxa_begin_cleanup
<LI><a href="#[127]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_cxa_end_cleanup
<LI><a href="#[145]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxa_begin_catch
</UL>

<P><STRONG><a name="[1e4]"></a>std::terminate()</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, arm_exceptions_terminate.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 112 + Unknown Stack Size
<LI>Call Chain = std::terminate() &rArr; __cxa_get_globals &rArr; __ARM_exceptions_buffer_init &rArr; malloc &rArr; _malloc_internal &rArr; __Heap_Full &rArr; __Heap_ProvideMemory &rArr; _free_internal &rArr; _mutex_release
</UL>
<BR>[Calls]<UL><LI><a href="#[1dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxa_get_globals
<LI><a href="#[217]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;abort
</UL>
<BR>[Called By]<UL><LI><a href="#[32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxa_call_unexpected
<LI><a href="#[1df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM::call_terminate_handler(_Unwind_Control_Block*)
<LI><a href="#[30d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_array_new_general
<LI><a href="#[30f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_vec_cleanup_rethrow
<LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM::default_unexpected_handler()
<LI><a href="#[30e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_vec_cleanup
<LI><a href="#[147]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxa_end_catch
<LI><a href="#[127]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_cxa_end_cleanup
</UL>

<P><STRONG><a name="[232]"></a>__rt_fp_status_addr</STRONG> (Thumb, 10 bytes, Stack size 8 bytes, rt_fp_status_addr_twolibspace.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = __rt_fp_status_addr &rArr; __user_perthread_libspace
</UL>
<BR>[Calls]<UL><LI><a href="#[dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_perthread_libspace
</UL>
<BR>[Called By]<UL><LI><a href="#[108]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_init
</UL>

<P><STRONG><a name="[1f6]"></a>__rt_heap_descriptor</STRONG> (Thumb, 10 bytes, Stack size 8 bytes, rt_heap_descriptor_twolibspace.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __rt_heap_descriptor
</UL>
<BR>[Calls]<UL><LI><a href="#[1c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_perproc_libspace
</UL>
<BR>[Called By]<UL><LI><a href="#[10a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_init_alloc
<LI><a href="#[1f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;free
<LI><a href="#[1dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;malloc
</UL>

<P><STRONG><a name="[10c]"></a>__rt_locale</STRONG> (Thumb, 10 bytes, Stack size 8 bytes, rt_locale_twolibspace.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __rt_locale
</UL>
<BR>[Calls]<UL><LI><a href="#[1c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_perproc_libspace
</UL>
<BR>[Called By]<UL><LI><a href="#[10b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_lib_init_lc_common
<LI><a href="#[21a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strxfrm
<LI><a href="#[219]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcoll
<LI><a href="#[25e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_scanf_really_real
<LI><a href="#[253]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_fp_dec_real
<LI><a href="#[214]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_setlocale_r
<LI><a href="#[249]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_set_locale_byname
<LI><a href="#[248]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_locale_name
<LI><a href="#[216]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_get_lconv
<LI><a href="#[1f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_ctype_table
</UL>

<P><STRONG><a name="[230]"></a>__rt_eh_globals_addr</STRONG> (Thumb, 10 bytes, Stack size 8 bytes, rt_eh_globals_addr_twolibspace.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __rt_eh_globals_addr
</UL>
<BR>[Calls]<UL><LI><a href="#[1c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_perproc_libspace
</UL>
<BR>[Called By]<UL><LI><a href="#[1dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxa_get_globals
</UL>

<P><STRONG><a name="[204]"></a>__aeabi_errno_addr</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, rt_errno_addr_twolibspace.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __aeabi_errno_addr &rArr; __user_perthread_libspace
</UL>
<BR>[Calls]<UL><LI><a href="#[dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_perthread_libspace
</UL>
<BR>[Called By]<UL><LI><a href="#[201]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ftell_internal
<LI><a href="#[25b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_value
<LI><a href="#[26e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__set_errno
<LI><a href="#[26d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__read_errno
</UL>

<P><STRONG><a name="[3ea]"></a>__errno$twolibspace</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rt_errno_addr_twolibspace.o(.text), UNUSED)

<P><STRONG><a name="[3eb]"></a>__rt_errno_addr$twolibspace</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rt_errno_addr_twolibspace.o(.text), UNUSED)

<P><STRONG><a name="[3ec]"></a>__use_no_heap</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, hguard.o(.text), UNUSED)

<P><STRONG><a name="[3ed]"></a>__heap$guard</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, hguard.o(.text), UNUSED)

<P><STRONG><a name="[5]"></a>_terminate_user_alloc</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, init_alloc.o(.text), UNUSED)

<P><STRONG><a name="[4]"></a>_init_user_alloc</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, init_alloc.o(.text), UNUSED)

<P><STRONG><a name="[1f5]"></a>__Heap_Full</STRONG> (Thumb, 34 bytes, Stack size 16 bytes, init_alloc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = __Heap_Full &rArr; __Heap_ProvideMemory &rArr; _free_internal &rArr; _mutex_release
</UL>
<BR>[Calls]<UL><LI><a href="#[233]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__Heap_ProvideMemory
</UL>
<BR>[Called By]<UL><LI><a href="#[1f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_malloc_internal
</UL>

<P><STRONG><a name="[234]"></a>__Heap_Broken</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, init_alloc.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[235]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_SIGRTMEM
</UL>

<P><STRONG><a name="[10a]"></a>_init_alloc</STRONG> (Thumb, 94 bytes, Stack size 24 bytes, init_alloc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = _init_alloc &rArr; __rt_SIGRTMEM &rArr; __rt_SIGRTMEM_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[236]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__Heap_Initialize
<LI><a href="#[1f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_heap_descriptor
<LI><a href="#[235]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_SIGRTMEM
<LI><a href="#[233]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__Heap_ProvideMemory
</UL>
<BR>[Called By]<UL><LI><a href="#[109]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_lib_init_heap_2
</UL>

<P><STRONG><a name="[236]"></a>__Heap_Initialize</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, h1_init_mt.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __Heap_Initialize &rArr; _mutex_initialize
</UL>
<BR>[Calls]<UL><LI><a href="#[dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_mutex_initialize
</UL>
<BR>[Called By]<UL><LI><a href="#[10a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_init_alloc
</UL>

<P><STRONG><a name="[f]"></a>__Heap_DescSize</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, h1_init_mt.o(.text), UNUSED)

<P><STRONG><a name="[1fc]"></a>_printf_pre_padding</STRONG> (Thumb, 46 bytes, Stack size 16 bytes, _printf_pad.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = _printf_pre_padding
</UL>
<BR>[Called By]<UL><LI><a href="#[238]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_wctomb
<LI><a href="#[237]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_str
<LI><a href="#[255]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_fp_infnan
<LI><a href="#[256]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_fp_hex_real
<LI><a href="#[253]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_fp_dec_real
<LI><a href="#[1cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_int_common
</UL>

<P><STRONG><a name="[1fd]"></a>_printf_post_padding</STRONG> (Thumb, 36 bytes, Stack size 16 bytes, _printf_pad.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = _printf_post_padding
</UL>
<BR>[Called By]<UL><LI><a href="#[238]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_wctomb
<LI><a href="#[237]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_str
<LI><a href="#[255]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_fp_infnan
<LI><a href="#[256]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_fp_hex_real
<LI><a href="#[253]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_fp_dec_real
<LI><a href="#[1cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_int_common
</UL>

<P><STRONG><a name="[1cb]"></a>_printf_truncate_signed</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, _printf_truncate.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_int_dec
</UL>

<P><STRONG><a name="[1cc]"></a>_printf_truncate_unsigned</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, _printf_truncate.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_int_hex
<LI><a href="#[f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_int_oct
<LI><a href="#[f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_int_dec
</UL>

<P><STRONG><a name="[237]"></a>_printf_str</STRONG> (Thumb, 82 bytes, Stack size 16 bytes, _printf_str.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = _printf_str &rArr; _printf_post_padding
</UL>
<BR>[Calls]<UL><LI><a href="#[1fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_post_padding
<LI><a href="#[1fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_pre_padding
</UL>
<BR>[Called By]<UL><LI><a href="#[257]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_cs_common
</UL>

<P><STRONG><a name="[e6]"></a>_printf_charcount</STRONG> (Thumb, 42 bytes, Stack size 0 bytes, _printf_charcount.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_n
</UL>

<P><STRONG><a name="[1fa]"></a>_printf_char_common</STRONG> (Thumb, 32 bytes, Stack size 64 bytes, _printf_char_common.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 104 + Unknown Stack Size
<LI>Call Chain = _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[1ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__printf
</UL>
<BR>[Called By]<UL><LI><a href="#[1ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_char_file
<LI><a href="#[1f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vsnprintf
</UL>

<P><STRONG><a name="[1fb]"></a>_sputc</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, _sputc.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[1f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vsnprintf
</UL>

<P><STRONG><a name="[2c]"></a>_snputc</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, _snputc.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> vsnprintf.o(.text)
</UL>
<P><STRONG><a name="[238]"></a>_printf_wctomb</STRONG> (Thumb, 182 bytes, Stack size 56 bytes, _printf_wctomb.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = _printf_wctomb &rArr; _wcrtomb &rArr; __rt_ctype_table &rArr; __rt_locale
</UL>
<BR>[Calls]<UL><LI><a href="#[1fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_post_padding
<LI><a href="#[1fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_pre_padding
<LI><a href="#[239]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_wcrtomb
</UL>
<BR>[Called By]<UL><LI><a href="#[258]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_lcs_common
</UL>

<P><STRONG><a name="[f8]"></a>_printf_longlong_dec</STRONG> (Thumb, 104 bytes, Stack size 24 bytes, _printf_longlong_dec.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = _printf_longlong_dec &rArr; _printf_int_common &rArr; _printf_post_padding
</UL>
<BR>[Calls]<UL><LI><a href="#[23a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ll_udiv10
<LI><a href="#[1cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_int_common
</UL>
<BR>[Called By]<UL><LI><a href="#[fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_llu
<LI><a href="#[f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_lld
<LI><a href="#[f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_lli
</UL>

<P><STRONG><a name="[23b]"></a>_printf_longlong_oct</STRONG> (Thumb, 76 bytes, Stack size 8 bytes, _printf_oct_int_ll.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = _printf_longlong_oct &rArr; _printf_int_common &rArr; _printf_post_padding
</UL>
<BR>[Calls]<UL><LI><a href="#[1cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_int_common
</UL>
<BR>[Called By]<UL><LI><a href="#[fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_ll_oct
<LI><a href="#[f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_int_oct
</UL>

<P><STRONG><a name="[f4]"></a>_printf_int_oct</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, _printf_oct_int_ll.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = _printf_int_oct &rArr; _printf_longlong_oct &rArr; _printf_int_common &rArr; _printf_post_padding
</UL>
<BR>[Calls]<UL><LI><a href="#[23b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_longlong_oct
<LI><a href="#[1cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_truncate_unsigned
</UL>
<BR>[Called By]<UL><LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_o
</UL>

<P><STRONG><a name="[fc]"></a>_printf_ll_oct</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, _printf_oct_int_ll.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = _printf_ll_oct &rArr; _printf_longlong_oct &rArr; _printf_int_common &rArr; _printf_post_padding
</UL>
<BR>[Calls]<UL><LI><a href="#[23b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_longlong_oct
</UL>
<BR>[Called By]<UL><LI><a href="#[fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_llo
</UL>

<P><STRONG><a name="[23c]"></a>_printf_longlong_hex</STRONG> (Thumb, 92 bytes, Stack size 16 bytes, _printf_hex_int_ll_ptr.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = _printf_longlong_hex &rArr; _printf_int_common &rArr; _printf_post_padding
</UL>
<BR>[Calls]<UL><LI><a href="#[1cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_int_common
</UL>
<BR>[Called By]<UL><LI><a href="#[e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_hex_ptr
<LI><a href="#[fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_ll_hex
<LI><a href="#[f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_int_hex
</UL>

<P><STRONG><a name="[f6]"></a>_printf_int_hex</STRONG> (Thumb, 28 bytes, Stack size 16 bytes, _printf_hex_int_ll_ptr.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = _printf_int_hex &rArr; _printf_longlong_hex &rArr; _printf_int_common &rArr; _printf_post_padding
</UL>
<BR>[Calls]<UL><LI><a href="#[23c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_longlong_hex
<LI><a href="#[1cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_truncate_unsigned
</UL>
<BR>[Called By]<UL><LI><a href="#[f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_x
</UL>

<P><STRONG><a name="[fe]"></a>_printf_ll_hex</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, _printf_hex_int_ll_ptr.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = _printf_ll_hex &rArr; _printf_longlong_hex &rArr; _printf_int_common &rArr; _printf_post_padding
</UL>
<BR>[Calls]<UL><LI><a href="#[23c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_longlong_hex
</UL>
<BR>[Called By]<UL><LI><a href="#[fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_llx
</UL>

<P><STRONG><a name="[e8]"></a>_printf_hex_ptr</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, _printf_hex_int_ll_ptr.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = _printf_hex_ptr &rArr; _printf_longlong_hex &rArr; _printf_int_common &rArr; _printf_post_padding
</UL>
<BR>[Calls]<UL><LI><a href="#[23c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_longlong_hex
</UL>
<BR>[Called By]<UL><LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_p
</UL>

<P><STRONG><a name="[23d]"></a>_scanf_longlong</STRONG> (Thumb, 332 bytes, Stack size 56 bytes, _scanf_longlong.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = _scanf_longlong
</UL>
<BR>[Calls]<UL><LI><a href="#[23e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_chval
</UL>
<BR>[Called By]<UL><LI><a href="#[240]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__vfscanf
</UL>

<P><STRONG><a name="[23f]"></a>_scanf_int</STRONG> (Thumb, 336 bytes, Stack size 56 bytes, _scanf_int.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = _scanf_int
</UL>
<BR>[Calls]<UL><LI><a href="#[23e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_chval
</UL>
<BR>[Called By]<UL><LI><a href="#[240]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__vfscanf
</UL>

<P><STRONG><a name="[25a]"></a>_scanf_string</STRONG> (Thumb, 218 bytes, Stack size 56 bytes, _scanf_str.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = _scanf_string
</UL>
<BR>[Called By]<UL><LI><a href="#[240]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__vfscanf
</UL>

<P><STRONG><a name="[1ff]"></a>__vfscanf_char</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, scanf_char.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 416<LI>Call Chain = __vfscanf_char &rArr; __vfscanf &rArr; _scanf_real &rArr; _scanf_really_real &rArr; _fp_value &rArr; _btod_etento &rArr; _btod_emul &rArr; _e2e
</UL>
<BR>[Calls]<UL><LI><a href="#[240]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__vfscanf
</UL>
<BR>[Called By]<UL><LI><a href="#[1fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sscanf
</UL>

<P><STRONG><a name="[2d]"></a>_sgetc</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, _sgetc.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> sscanf.o(.text)
</UL>
<P><STRONG><a name="[2e]"></a>_sbackspace</STRONG> (Thumb, 34 bytes, Stack size 0 bytes, _sgetc.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> sscanf.o(.text)
</UL>
<P><STRONG><a name="[241]"></a>_scanf_mbtowc</STRONG> (Thumb, 280 bytes, Stack size 72 bytes, _scanf_mbtowc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = _scanf_mbtowc &rArr; _mbrtowc &rArr; __rt_ctype_table &rArr; __rt_locale
</UL>
<BR>[Calls]<UL><LI><a href="#[242]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_mbrtowc
</UL>
<BR>[Called By]<UL><LI><a href="#[240]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__vfscanf
</UL>

<P><STRONG><a name="[243]"></a>_scanf_wctomb</STRONG> (Thumb, 226 bytes, Stack size 64 bytes, _scanf_wctomb.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = _scanf_wctomb &rArr; _wcrtomb &rArr; __rt_ctype_table &rArr; __rt_locale
</UL>
<BR>[Calls]<UL><LI><a href="#[244]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_scanf_wcharmap
<LI><a href="#[239]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_wcrtomb
</UL>
<BR>[Called By]<UL><LI><a href="#[240]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__vfscanf
</UL>

<P><STRONG><a name="[245]"></a>_scanf_wstring</STRONG> (Thumb, 202 bytes, Stack size 56 bytes, _scanf_wstr.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = _scanf_wstring &rArr; _scanf_wcharmap
</UL>
<BR>[Calls]<UL><LI><a href="#[244]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_scanf_wcharmap
</UL>
<BR>[Called By]<UL><LI><a href="#[240]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__vfscanf
</UL>

<P><STRONG><a name="[212]"></a>setvbuf</STRONG> (Thumb, 104 bytes, Stack size 32 bytes, setvbuf_locked.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = setvbuf &rArr; _mutex_release
</UL>
<BR>[Calls]<UL><LI><a href="#[df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_mutex_release
<LI><a href="#[de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_mutex_acquire
</UL>
<BR>[Called By]<UL><LI><a href="#[115]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_initio
</UL>

<P><STRONG><a name="[210]"></a>freopen</STRONG> (Thumb, 42 bytes, Stack size 24 bytes, fopen_locked.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 160<LI>Call Chain = freopen &rArr; _freopen_locked &rArr; _fclose_internal &rArr; _fflush &rArr; _writebuf &rArr; _sys_write
</UL>
<BR>[Calls]<UL><LI><a href="#[df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_mutex_release
<LI><a href="#[de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_mutex_acquire
<LI><a href="#[246]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_freopen_locked
</UL>
<BR>[Called By]<UL><LI><a href="#[115]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_initio
</UL>

<P><STRONG><a name="[247]"></a>_fopen$locked</STRONG> (Thumb, 100 bytes, Stack size 24 bytes, fopen_locked.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_mutex_release
<LI><a href="#[de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_mutex_acquire
<LI><a href="#[dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_mutex_initialize
<LI><a href="#[20a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[246]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_freopen_locked
<LI><a href="#[1dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;malloc
</UL>

<P><STRONG><a name="[216]"></a>_get_lconv</STRONG> (Thumb, 118 bytes, Stack size 8 bytes, _lconv.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[10c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_locale
</UL>
<BR>[Called By]<UL><LI><a href="#[215]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;localeconv
</UL>

<P><STRONG><a name="[214]"></a>_setlocale_r</STRONG> (Thumb, 106 bytes, Stack size 32 bytes, locale_r.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = _setlocale_r &rArr; _set_locale_byname &rArr; _locale_name &rArr; __rt_locale
</UL>
<BR>[Calls]<UL><LI><a href="#[10c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_locale
<LI><a href="#[249]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_set_locale_byname
<LI><a href="#[248]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_locale_name
</UL>
<BR>[Called By]<UL><LI><a href="#[213]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setlocale
</UL>

<P><STRONG><a name="[242]"></a>_mbrtowc</STRONG> (Thumb, 60 bytes, Stack size 16 bytes, _mbrtowc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = _mbrtowc &rArr; __rt_ctype_table &rArr; __rt_locale
</UL>
<BR>[Calls]<UL><LI><a href="#[1f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_ctype_table
</UL>
<BR>[Called By]<UL><LI><a href="#[241]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_scanf_mbtowc
</UL>

<P><STRONG><a name="[239]"></a>_wcrtomb</STRONG> (Thumb, 64 bytes, Stack size 16 bytes, _wcrtomb.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = _wcrtomb &rArr; __rt_ctype_table &rArr; __rt_locale
</UL>
<BR>[Calls]<UL><LI><a href="#[1f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_ctype_table
</UL>
<BR>[Called By]<UL><LI><a href="#[238]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_wctomb
<LI><a href="#[243]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_scanf_wctomb
</UL>

<P><STRONG><a name="[221]"></a>bsearch</STRONG> (Thumb, 80 bytes, Stack size 32 bytes, bsearch.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = bsearch
</UL>
<BR>[Called By]<UL><LI><a href="#[220]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;find_and_expand_eit_entry
</UL>

<P><STRONG><a name="[218]"></a>__rt_SIGABRT</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, defsig_abrt_outer.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[24a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_SIGABRT_inner
<LI><a href="#[24b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__sig_exit
</UL>
<BR>[Called By]<UL><LI><a href="#[217]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;abort
</UL>

<P><STRONG><a name="[211]"></a>__rt_SIGRTRED</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, defsig_rtred_outer.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = __rt_SIGRTRED &rArr; __rt_SIGRTRED_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[24c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_SIGRTRED_inner
<LI><a href="#[24b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__sig_exit
</UL>
<BR>[Called By]<UL><LI><a href="#[115]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_initio
</UL>

<P><STRONG><a name="[21d]"></a>memmove</STRONG> (Thumb, 8 bytes, Stack size 8 bytes, memmove.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = memmove
</UL>
<BR>[Calls]<UL><LI><a href="#[24d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memmove
</UL>
<BR>[Called By]<UL><LI><a href="#[21c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wmemmove
</UL>

<P><STRONG><a name="[22b]"></a>std::unexpected()</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, arm_exceptions_unexpected.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 112 + Unknown Stack Size
<LI>Call Chain = std::unexpected() &rArr; __cxa_get_globals &rArr; __ARM_exceptions_buffer_init &rArr; malloc &rArr; _malloc_internal &rArr; __Heap_Full &rArr; __Heap_ProvideMemory &rArr; _free_internal &rArr; _mutex_release
</UL>
<BR>[Calls]<UL><LI><a href="#[1dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxa_get_globals
<LI><a href="#[217]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;abort
</UL>
<BR>[Called By]<UL><LI><a href="#[32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxa_call_unexpected
</UL>

<P><STRONG><a name="[35]"></a>__ARM::default_unexpected_handler()</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, arm_exceptions_unexpected.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 112 + Unknown Stack Size
<LI>Call Chain = __ARM::default_unexpected_handler() &rArr; std::terminate() &rArr; __cxa_get_globals &rArr; __ARM_exceptions_buffer_init &rArr; malloc &rArr; _malloc_internal &rArr; __Heap_Full &rArr; __Heap_ProvideMemory &rArr; _free_internal &rArr; _mutex_release
</UL>
<BR>[Calls]<UL><LI><a href="#[1e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::terminate()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> arm_exceptions_globs.o(.text)
</UL>
<P><STRONG><a name="[233]"></a>__Heap_ProvideMemory</STRONG> (Thumb, 62 bytes, Stack size 8 bytes, h1_extend_mt.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = __Heap_ProvideMemory &rArr; _free_internal &rArr; _mutex_release
</UL>
<BR>[Calls]<UL><LI><a href="#[1f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_free_internal
</UL>
<BR>[Called By]<UL><LI><a href="#[10a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_init_alloc
<LI><a href="#[1f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__Heap_Full
</UL>

<P><STRONG><a name="[23a]"></a>_ll_udiv10</STRONG> (Thumb, 138 bytes, Stack size 12 bytes, lludiv10.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = _ll_udiv10
</UL>
<BR>[Called By]<UL><LI><a href="#[f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_longlong_dec
<LI><a href="#[24e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_digits
</UL>

<P><STRONG><a name="[39]"></a>isspace</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, isspace.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = isspace &rArr; __rt_ctype_table &rArr; __rt_locale
</UL>
<BR>[Calls]<UL><LI><a href="#[1f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_ctype_table
</UL>
<BR>[Address Reference Count : 1]<UL><LI> scanf_char.o(.text)
</UL>
<P><STRONG><a name="[3ee]"></a>__lib_sel_fp_printf</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, _printf_fp_dec.o(.text), UNUSED)

<P><STRONG><a name="[253]"></a>_printf_fp_dec_real</STRONG> (Thumb, 626 bytes, Stack size 104 bytes, _printf_fp_dec.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 320<LI>Call Chain = _printf_fp_dec_real &rArr; _fp_digits &rArr; _btod_etento &rArr; _btod_emul &rArr; _e2e
</UL>
<BR>[Calls]<UL><LI><a href="#[1fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_post_padding
<LI><a href="#[1fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_pre_padding
<LI><a href="#[10c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_locale
<LI><a href="#[255]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_fp_infnan
<LI><a href="#[24e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_digits
<LI><a href="#[254]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_fpclassify
</UL>
<BR>[Called By]<UL><LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_fp_dec
</UL>

<P><STRONG><a name="[256]"></a>_printf_fp_hex_real</STRONG> (Thumb, 762 bytes, Stack size 72 bytes, _printf_fp_hex.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = _printf_fp_hex_real &rArr; _printf_fp_infnan &rArr; _printf_post_padding
</UL>
<BR>[Calls]<UL><LI><a href="#[1fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_post_padding
<LI><a href="#[1fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_pre_padding
<LI><a href="#[255]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_fp_infnan
<LI><a href="#[254]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_fpclassify
</UL>
<BR>[Called By]<UL><LI><a href="#[ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_fp_hex
</UL>

<P><STRONG><a name="[257]"></a>_printf_cs_common</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, _printf_char.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = _printf_cs_common &rArr; _printf_str &rArr; _printf_post_padding
</UL>
<BR>[Calls]<UL><LI><a href="#[237]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_str
</UL>
<BR>[Called By]<UL><LI><a href="#[102]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_string
<LI><a href="#[100]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_char
</UL>

<P><STRONG><a name="[100]"></a>_printf_char</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, _printf_char.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = _printf_char &rArr; _printf_cs_common &rArr; _printf_str &rArr; _printf_post_padding
</UL>
<BR>[Calls]<UL><LI><a href="#[257]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_cs_common
</UL>
<BR>[Called By]<UL><LI><a href="#[ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_c
</UL>

<P><STRONG><a name="[102]"></a>_printf_string</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, _printf_char.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = _printf_string &rArr; _printf_cs_common &rArr; _printf_str &rArr; _printf_post_padding
</UL>
<BR>[Calls]<UL><LI><a href="#[257]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_cs_common
</UL>
<BR>[Called By]<UL><LI><a href="#[101]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_s
</UL>

<P><STRONG><a name="[258]"></a>_printf_lcs_common</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, _printf_wchar.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = _printf_lcs_common &rArr; _printf_wctomb &rArr; _wcrtomb &rArr; __rt_ctype_table &rArr; __rt_locale
</UL>
<BR>[Calls]<UL><LI><a href="#[238]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_wctomb
</UL>
<BR>[Called By]<UL><LI><a href="#[106]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_wstring
<LI><a href="#[104]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_wchar
</UL>

<P><STRONG><a name="[104]"></a>_printf_wchar</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, _printf_wchar.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = _printf_wchar &rArr; _printf_lcs_common &rArr; _printf_wctomb &rArr; _wcrtomb &rArr; __rt_ctype_table &rArr; __rt_locale
</UL>
<BR>[Calls]<UL><LI><a href="#[258]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_lcs_common
</UL>
<BR>[Called By]<UL><LI><a href="#[103]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_lc
</UL>

<P><STRONG><a name="[106]"></a>_printf_wstring</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, _printf_wchar.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = _printf_wstring &rArr; _printf_lcs_common &rArr; _printf_wctomb &rArr; _wcrtomb &rArr; __rt_ctype_table &rArr; __rt_locale
</UL>
<BR>[Calls]<UL><LI><a href="#[258]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_lcs_common
</UL>
<BR>[Called By]<UL><LI><a href="#[105]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_ls
</UL>

<P><STRONG><a name="[23e]"></a>_chval</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, _chval.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[23f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_scanf_int
<LI><a href="#[23d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_scanf_longlong
<LI><a href="#[26f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_scanf_really_hex_real
</UL>

<P><STRONG><a name="[240]"></a>__vfscanf</STRONG> (Thumb, 882 bytes, Stack size 104 bytes, _scanf.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 416<LI>Call Chain = __vfscanf &rArr; _scanf_real &rArr; _scanf_really_real &rArr; _fp_value &rArr; _btod_etento &rArr; _btod_emul &rArr; _e2e
</UL>
<BR>[Calls]<UL><LI><a href="#[259]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_scanf_real
<LI><a href="#[245]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_scanf_wstring
<LI><a href="#[243]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_scanf_wctomb
<LI><a href="#[241]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_scanf_mbtowc
<LI><a href="#[25a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_scanf_string
<LI><a href="#[23f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_scanf_int
<LI><a href="#[23d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_scanf_longlong
</UL>
<BR>[Called By]<UL><LI><a href="#[1ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__vfscanf_char
</UL>

<P><STRONG><a name="[25e]"></a>_scanf_really_real</STRONG> (Thumb, 672 bytes, Stack size 120 bytes, scanf_fp.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 312<LI>Call Chain = _scanf_really_real &rArr; _fp_value &rArr; _btod_etento &rArr; _btod_emul &rArr; _e2e
</UL>
<BR>[Calls]<UL><LI><a href="#[10c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_locale
<LI><a href="#[1cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_is_digit
<LI><a href="#[25b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_value
<LI><a href="#[261]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__mathlib_narrow
<LI><a href="#[25f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_scanf_infnan
<LI><a href="#[260]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_scanf_hex_real
</UL>
<BR>[Called By]<UL><LI><a href="#[259]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_scanf_real
</UL>

<P><STRONG><a name="[244]"></a>_scanf_wcharmap</STRONG> (Thumb, 30 bytes, Stack size 8 bytes, _scanf_wcharmap.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = _scanf_wcharmap
</UL>
<BR>[Called By]<UL><LI><a href="#[245]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_scanf_wstring
<LI><a href="#[243]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_scanf_wctomb
</UL>

<P><STRONG><a name="[262]"></a>_readbuf</STRONG> (Thumb, 56 bytes, Stack size 16 bytes, filbuf.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = _readbuf &rArr; _sys_read
</UL>
<BR>[Calls]<UL><LI><a href="#[133]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_sys_read
<LI><a href="#[203]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_seterr
</UL>
<BR>[Called By]<UL><LI><a href="#[263]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__filbuf
<LI><a href="#[269]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fread_bytes_avail
</UL>

<P><STRONG><a name="[265]"></a>_seteof</STRONG> (Thumb, 40 bytes, Stack size 0 bytes, filbuf.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[263]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__filbuf
<LI><a href="#[269]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fread_bytes_avail
</UL>

<P><STRONG><a name="[263]"></a>__filbuf</STRONG> (Thumb, 482 bytes, Stack size 32 bytes, filbuf.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[206]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_sys_seek
<LI><a href="#[207]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_deferredlazyseek
<LI><a href="#[1d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fflush
<LI><a href="#[203]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_seterr
<LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_seteof
<LI><a href="#[262]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_readbuf
<LI><a href="#[264]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_flushlinebuffered
<LI><a href="#[1dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;malloc
</UL>

<P><STRONG><a name="[26a]"></a>__filbuf_byte</STRONG> (Thumb, 0 bytes, Stack size 32 bytes, filbuf.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = __filbuf_byte
</UL>
<BR>[Called By]<UL><LI><a href="#[269]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fread_bytes_avail
</UL>

<P><STRONG><a name="[3ef]"></a>__filbuf_wide</STRONG> (Thumb, 0 bytes, Stack size 32 bytes, filbuf.o(.text), UNUSED)

<P><STRONG><a name="[266]"></a>__flsbuf</STRONG> (Thumb, 480 bytes, Stack size 32 bytes, flsbuf.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[200]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_sys_istty
<LI><a href="#[202]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_sys_flen
<LI><a href="#[207]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_deferredlazyseek
<LI><a href="#[205]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_writebuf
<LI><a href="#[203]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_seterr
<LI><a href="#[1dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;malloc
</UL>

<P><STRONG><a name="[26c]"></a>__flsbuf_byte</STRONG> (Thumb, 0 bytes, Stack size 32 bytes, flsbuf.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = __flsbuf_byte
</UL>
<BR>[Called By]<UL><LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fputc$unlocked
<LI><a href="#[26b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fwrite
</UL>

<P><STRONG><a name="[3f0]"></a>__flsbuf_wide</STRONG> (Thumb, 0 bytes, Stack size 32 bytes, flsbuf.o(.text), UNUSED)

<P><STRONG><a name="[24b]"></a>__sig_exit</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, defsig_exit.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[11e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_sys_exit
</UL>
<BR>[Called By]<UL><LI><a href="#[235]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_SIGRTMEM
<LI><a href="#[211]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_SIGRTRED
<LI><a href="#[218]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_SIGABRT
</UL>

<P><STRONG><a name="[24a]"></a>__rt_SIGABRT_inner</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, defsig_abrt_inner.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[267]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__default_signal_display
</UL>
<BR>[Called By]<UL><LI><a href="#[218]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_SIGABRT
</UL>

<P><STRONG><a name="[24c]"></a>__rt_SIGRTRED_inner</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, defsig_rtred_inner.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = __rt_SIGRTRED_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[267]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__default_signal_display
</UL>
<BR>[Called By]<UL><LI><a href="#[211]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_SIGRTRED
</UL>

<P><STRONG><a name="[235]"></a>__rt_SIGRTMEM</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, defsig_rtmem_outer.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = __rt_SIGRTMEM &rArr; __rt_SIGRTMEM_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[24b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__sig_exit
<LI><a href="#[268]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_SIGRTMEM_inner
</UL>
<BR>[Called By]<UL><LI><a href="#[10a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_init_alloc
<LI><a href="#[234]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__Heap_Broken
</UL>

<P><STRONG><a name="[255]"></a>_printf_fp_infnan</STRONG> (Thumb, 112 bytes, Stack size 24 bytes, _printf_fp_infnan.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = _printf_fp_infnan &rArr; _printf_post_padding
</UL>
<BR>[Calls]<UL><LI><a href="#[1fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_post_padding
<LI><a href="#[1fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_pre_padding
</UL>
<BR>[Called By]<UL><LI><a href="#[256]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_fp_hex_real
<LI><a href="#[253]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_fp_dec_real
</UL>

<P><STRONG><a name="[1ca]"></a>_printf_char_file</STRONG> (Thumb, 58 bytes, Stack size 24 bytes, _printf_char_file_locked.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 128 + Unknown Stack Size
<LI>Call Chain = _printf_char_file &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_mutex_release
<LI><a href="#[de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_mutex_acquire
<LI><a href="#[1fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_char_common
</UL>
<BR>[Called By]<UL><LI><a href="#[13a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>

<P><STRONG><a name="[24f]"></a>_btod_etento</STRONG> (Thumb, 222 bytes, Stack size 72 bytes, bigflt0.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = _btod_etento &rArr; _btod_emul &rArr; _e2e
</UL>
<BR>[Calls]<UL><LI><a href="#[252]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_btod_emul
<LI><a href="#[251]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_btod_ediv
</UL>
<BR>[Called By]<UL><LI><a href="#[25b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_value
<LI><a href="#[24e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_digits
</UL>

<P><STRONG><a name="[269]"></a>__fread_bytes_avail</STRONG> (Thumb, 230 bytes, Stack size 32 bytes, fread_bytes_avail_locked.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = __fread_bytes_avail &rArr; _readbuf &rArr; _sys_read
</UL>
<BR>[Calls]<UL><LI><a href="#[df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_mutex_release
<LI><a href="#[de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_mutex_acquire
<LI><a href="#[1d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
<LI><a href="#[26a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__filbuf_byte
<LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_seteof
<LI><a href="#[262]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_readbuf
</UL>
<BR>[Called By]<UL><LI><a href="#[288]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rw_file_t::_C_read(void*, unsigned, unsigned)
</UL>

<P><STRONG><a name="[26b]"></a>fwrite</STRONG> (Thumb, 212 bytes, Stack size 40 bytes, fwritefast_locked.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = fwrite &rArr; _writebuf &rArr; _sys_write
</UL>
<BR>[Calls]<UL><LI><a href="#[df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_mutex_release
<LI><a href="#[de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_mutex_acquire
<LI><a href="#[205]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_writebuf
<LI><a href="#[1d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
<LI><a href="#[26c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__flsbuf_byte
</UL>
<BR>[Called By]<UL><LI><a href="#[28c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rw_file_t::_C_write(const void*, unsigned, unsigned)
</UL>

<P><STRONG><a name="[264]"></a>_flushlinebuffered</STRONG> (Thumb, 82 bytes, Stack size 32 bytes, flushlinebuffered_locked.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_mutex_release
<LI><a href="#[de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_mutex_acquire
<LI><a href="#[1d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_do_fflush
</UL>
<BR>[Called By]<UL><LI><a href="#[263]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__filbuf
</UL>

<P><STRONG><a name="[267]"></a>__default_signal_display</STRONG> (Thumb, 50 bytes, Stack size 16 bytes, defsig_general.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[12e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ttywrch
</UL>
<BR>[Called By]<UL><LI><a href="#[24c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_SIGRTRED_inner
<LI><a href="#[24a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_SIGABRT_inner
<LI><a href="#[268]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_SIGRTMEM_inner
</UL>

<P><STRONG><a name="[268]"></a>__rt_SIGRTMEM_inner</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, defsig_rtmem_inner.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = __rt_SIGRTMEM_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[267]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__default_signal_display
</UL>
<BR>[Called By]<UL><LI><a href="#[235]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_SIGRTMEM
</UL>

<P><STRONG><a name="[26d]"></a>__read_errno</STRONG> (Thumb, 10 bytes, Stack size 8 bytes, _rserrno.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[204]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_errno_addr
</UL>

<P><STRONG><a name="[26e]"></a>__set_errno</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, _rserrno.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = __set_errno &rArr; __aeabi_errno_addr &rArr; __user_perthread_libspace
</UL>
<BR>[Calls]<UL><LI><a href="#[204]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_errno_addr
</UL>
<BR>[Called By]<UL><LI><a href="#[31b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ldexp
<LI><a href="#[316]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__mathlib_tofloat
</UL>

<P><STRONG><a name="[26f]"></a>_scanf_really_hex_real</STRONG> (Thumb, 782 bytes, Stack size 80 bytes, scanf_hexfp.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 144<LI>Call Chain = _scanf_really_hex_real &rArr; __support_ldexp &rArr; ldexp &rArr; __aeabi_cdcmpeq
</UL>
<BR>[Calls]<UL><LI><a href="#[23e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_chval
<LI><a href="#[271]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__support_ldexp
<LI><a href="#[270]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsl
<LI><a href="#[261]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__mathlib_narrow
</UL>
<BR>[Called By]<UL><LI><a href="#[260]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_scanf_hex_real
</UL>

<P><STRONG><a name="[39a]"></a>_scanf_really_infnan</STRONG> (Thumb, 298 bytes, Stack size 72 bytes, scanf_infnan.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = _scanf_really_infnan
</UL>
<BR>[Called By]<UL><LI><a href="#[25f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_scanf_infnan
</UL>

<P><STRONG><a name="[270]"></a>__aeabi_llsl</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, llshl.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[26f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_scanf_really_hex_real
</UL>

<P><STRONG><a name="[3f1]"></a>_ll_shift_l</STRONG> (Thumb, 38 bytes, Stack size 0 bytes, llshl.o(.text), UNUSED)

<P><STRONG><a name="[250]"></a>_btod_d2e</STRONG> (Thumb, 62 bytes, Stack size 0 bytes, btod.o(CL$$btod_d2e))
<BR><BR>[Calls]<UL><LI><a href="#[272]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_d2e_norm_op1
</UL>
<BR>[Called By]<UL><LI><a href="#[24e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_digits
</UL>

<P><STRONG><a name="[273]"></a>_d2e_denorm_low</STRONG> (Thumb, 70 bytes, Stack size 0 bytes, btod.o(CL$$btod_d2e_denorm_low))
<BR><BR>[Called By]<UL><LI><a href="#[272]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_d2e_norm_op1
</UL>

<P><STRONG><a name="[272]"></a>_d2e_norm_op1</STRONG> (Thumb, 96 bytes, Stack size 0 bytes, btod.o(CL$$btod_d2e_norm_op1))
<BR><BR>[Calls]<UL><LI><a href="#[273]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_d2e_denorm_low
</UL>
<BR>[Called By]<UL><LI><a href="#[250]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_btod_d2e
</UL>

<P><STRONG><a name="[276]"></a>__btod_div_common</STRONG> (Thumb, 696 bytes, Stack size 24 bytes, btod.o(CL$$btod_div_common))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = __btod_div_common
</UL>
<BR>[Called By]<UL><LI><a href="#[25d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_btod_edivd
<LI><a href="#[251]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_btod_ediv
</UL>

<P><STRONG><a name="[274]"></a>_e2d</STRONG> (Thumb, 80 bytes, Stack size 8 bytes, btod.o(CL$$btod_e2d))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = _e2d &rArr; _e2e
</UL>
<BR>[Calls]<UL><LI><a href="#[275]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_e2e
</UL>
<BR>[Called By]<UL><LI><a href="#[25c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_btod_emuld
<LI><a href="#[25d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_btod_edivd
</UL>

<P><STRONG><a name="[275]"></a>_e2e</STRONG> (Thumb, 198 bytes, Stack size 24 bytes, btod.o(CL$$btod_e2e))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = _e2e
</UL>
<BR>[Called By]<UL><LI><a href="#[252]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_btod_emul
<LI><a href="#[251]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_btod_ediv
<LI><a href="#[274]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_e2d
</UL>

<P><STRONG><a name="[251]"></a>_btod_ediv</STRONG> (Thumb, 40 bytes, Stack size 24 bytes, btod.o(CL$$btod_ediv))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = _btod_ediv &rArr; _e2e
</UL>
<BR>[Calls]<UL><LI><a href="#[275]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_e2e
<LI><a href="#[276]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__btod_div_common
</UL>
<BR>[Called By]<UL><LI><a href="#[24f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_btod_etento
<LI><a href="#[24e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_digits
</UL>

<P><STRONG><a name="[25d]"></a>_btod_edivd</STRONG> (Thumb, 40 bytes, Stack size 24 bytes, btod.o(CL$$btod_edivd))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = _btod_edivd &rArr; _e2d &rArr; _e2e
</UL>
<BR>[Calls]<UL><LI><a href="#[274]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_e2d
<LI><a href="#[276]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__btod_div_common
</UL>
<BR>[Called By]<UL><LI><a href="#[25b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_value
</UL>

<P><STRONG><a name="[252]"></a>_btod_emul</STRONG> (Thumb, 40 bytes, Stack size 24 bytes, btod.o(CL$$btod_emul))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = _btod_emul &rArr; _e2e
</UL>
<BR>[Calls]<UL><LI><a href="#[277]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__btod_mult_common
<LI><a href="#[275]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_e2e
</UL>
<BR>[Called By]<UL><LI><a href="#[24f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_btod_etento
<LI><a href="#[24e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_digits
</UL>

<P><STRONG><a name="[25c]"></a>_btod_emuld</STRONG> (Thumb, 40 bytes, Stack size 24 bytes, btod.o(CL$$btod_emuld))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = _btod_emuld &rArr; _e2d &rArr; _e2e
</UL>
<BR>[Calls]<UL><LI><a href="#[277]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__btod_mult_common
<LI><a href="#[274]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_e2d
</UL>
<BR>[Called By]<UL><LI><a href="#[25b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_value
</UL>

<P><STRONG><a name="[277]"></a>__btod_mult_common</STRONG> (Thumb, 580 bytes, Stack size 16 bytes, btod.o(CL$$btod_mult_common))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = __btod_mult_common
</UL>
<BR>[Called By]<UL><LI><a href="#[25c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_btod_emuld
<LI><a href="#[252]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_btod_emul
</UL>

<P><STRONG><a name="[4d]"></a>__default_new_handler()</STRONG> (Thumb, 38 bytes, Stack size 16 bytes, newhandler.o(i._Z21__default_new_handlerv))
<BR><BR>[Stack]<UL><LI>Max Depth = 464 + Unknown Stack Size
<LI>Call Chain = __default_new_handler() &rArr; __cxa_throw &rArr; _Unwind_RaiseException &rArr; __ARM_Unwind_RaiseException &rArr; malloc &rArr; _malloc_internal &rArr; __Heap_Full &rArr; __Heap_ProvideMemory &rArr; _free_internal &rArr; _mutex_release
</UL>
<BR>[Calls]<UL><LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::bad_alloc::~bad_alloc()
<LI><a href="#[279]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::bad_alloc::bad_alloc()
<LI><a href="#[27a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::bad_alloc::bad_alloc(const std::bad_alloc&)
<LI><a href="#[144]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxa_throw
<LI><a href="#[143]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxa_allocate_exception
</UL>
<BR>[Address Reference Count : 1]<UL><LI> new.o(i._Znwj)
</UL>
<P><STRONG><a name="[27e]"></a>catgets(__rw::__rw_cat*, int, int, const char*)</STRONG> (Thumb, 28 bytes, Stack size 24 bytes, rwcats.o(i._Z7catgetsPN4__rw8__rw_catEiiPKc))
<BR><BR>[Stack]<UL><LI>Max Depth = 200 + Unknown Stack Size
<LI>Call Chain = catgets(__rw::__rw_cat*, int, int, const char*) &rArr; __cxa_begin_catch &rArr; __ARM::get_foreign_intermediary(__cxa_exception*, _Unwind_Control_Block*) &rArr; __cxa_allocate_exception &rArr; __ARM::call_terminate_handler(_Unwind_Control_Block*) &rArr; std::terminate() &rArr; __cxa_get_globals &rArr; __ARM_exceptions_buffer_init &rArr; malloc &rArr; _malloc_internal &rArr; __Heap_Full &rArr; __Heap_ProvideMemory &rArr; _free_internal &rArr; _mutex_release
</UL>
<BR>[Calls]<UL><LI><a href="#[27f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__catfind(__rw::__rw_cat*)
<LI><a href="#[147]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxa_end_catch
<LI><a href="#[145]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxa_begin_catch
</UL>
<BR>[Called By]<UL><LI><a href="#[2d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__rw_messages_base::_C_get_message(int, int, int) const
</UL>

<P><STRONG><a name="[280]"></a>catopen(const char*, int)</STRONG> (Thumb, 34 bytes, Stack size 16 bytes, rwcats.o(i._Z7catopenPKci))
<BR><BR>[Stack]<UL><LI>Max Depth = 192 + Unknown Stack Size
<LI>Call Chain = catopen(const char*, int) &rArr; __cxa_begin_catch &rArr; __ARM::get_foreign_intermediary(__cxa_exception*, _Unwind_Control_Block*) &rArr; __cxa_allocate_exception &rArr; __ARM::call_terminate_handler(_Unwind_Control_Block*) &rArr; std::terminate() &rArr; __cxa_get_globals &rArr; __ARM_exceptions_buffer_init &rArr; malloc &rArr; _malloc_internal &rArr; __Heap_Full &rArr; __Heap_ProvideMemory &rArr; _free_internal &rArr; _mutex_release
</UL>
<BR>[Calls]<UL><LI><a href="#[147]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxa_end_catch
<LI><a href="#[145]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxa_begin_catch
<LI><a href="#[281]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;operator new(unsigned)
<LI><a href="#[282]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;operator delete (void*)
</UL>
<BR>[Called By]<UL><LI><a href="#[2cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__rw_messages_base::_C_cat_open(const std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;&, const std::locale&) const
</UL>

<P><STRONG><a name="[283]"></a>catclose(__rw::__rw_cat*)</STRONG> (Thumb, 74 bytes, Stack size 16 bytes, rwcats.o(i._Z8catclosePN4__rw8__rw_catE), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[27f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__catfind(__rw::__rw_cat*)
<LI><a href="#[282]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;operator delete (void*)
</UL>
<BR>[Called By]<UL><LI><a href="#[2d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__rw_messages_base::_C_cat_close(int) const
</UL>

<P><STRONG><a name="[284]"></a>__rw::__rw_throw(int, ...)</STRONG> (Thumb, 86 bytes, Stack size 48 bytes, rwstdexcept.o(i._ZN4__rw10__rw_throwEiz))
<BR><BR>[Stack]<UL><LI>Max Depth = 792 + Unknown Stack Size
<LI>Call Chain = __rw::__rw_throw(int, ...) &rArr; std::__rw_exception::_C_vformat(int, std::__va_list) &rArr; __rw::__rw_vfmatstr(char*, unsigned, int, std::__va_list) &rArr; std::locale::locale() &rArr; std::locale::_C_init() &rArr; __rw::__rw_locale_imp::__rw_locale_imp(const char*, unsigned, unsigned) &rArr; __aeabi_vec_new_cookie &rArr; __cxa_vec_new &rArr; __ARM_array_new_general &rArr; __cxa_rethrow &rArr; _Unwind_RaiseException &rArr; __ARM_Unwind_RaiseException &rArr; malloc &rArr; _malloc_internal &rArr; __Heap_Full &rArr; __Heap_ProvideMemory &rArr; _free_internal &rArr; _mutex_release
</UL>
<BR>[Calls]<UL><LI><a href="#[285]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;operator new(unsigned, void*)
<LI><a href="#[286]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__rw_exception::__rw_exception()
<LI><a href="#[287]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__rw_exception::_C_vformat(int, std::__va_list)
</UL>
<BR>[Called By]<UL><LI><a href="#[28d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rw_file_t::__rw_file_t(int)
<LI><a href="#[2cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;::basic_string(const char*, unsigned, const std::allocator&lang;char&rang;&)
<LI><a href="#[2fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::ios_base::_C_unsafe_clear(int, int)
<LI><a href="#[2d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::locale::_C_make_facet(const std::locale::id&, bool, int, __rw::__rw_facet_base*(*)(int, const char*, unsigned)) const
<LI><a href="#[28e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rw_allocate(unsigned, int)
<LI><a href="#[361]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;::_C_getRep(unsigned, unsigned)
<LI><a href="#[364]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;::replace(unsigned, unsigned, const char*, unsigned, unsigned, unsigned)
<LI><a href="#[2f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::locale::locale(const std::locale&, const char*, int)
<LI><a href="#[2f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::locale::locale(const char*)
<LI><a href="#[2f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::locale::global(const std::locale&)
<LI><a href="#[2c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rw_numpunct_impl_base::_C_get_named_init_(const char*)
</UL>

<P><STRONG><a name="[37a]"></a>__rw::__rw_file_t::_C_get_mode(int)</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, ios.o(i._ZN4__rw11__rw_file_t11_C_get_modeEi))
<BR><BR>[Called By]<UL><LI><a href="#[302]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::basic_filebuf&lang;wchar_t, std::char_traits&lang;wchar_t&rang;&rang;::basic_filebuf(int, wchar_t*, long)
<LI><a href="#[2fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::basic_filebuf&lang;char, std::char_traits&lang;char&rang;&rang;::basic_filebuf(int, char*, long)
</UL>

<P><STRONG><a name="[288]"></a>__rw::__rw_file_t::_C_read(void*, unsigned, unsigned)</STRONG> (Thumb, 36 bytes, Stack size 16 bytes, ios.o(i._ZN4__rw11__rw_file_t7_C_readEPvjj))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = __rw::__rw_file_t::_C_read(void*, unsigned, unsigned) &rArr; __fread_bytes_avail &rArr; _readbuf &rArr; _sys_read
</UL>
<BR>[Calls]<UL><LI><a href="#[20f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ferror
<LI><a href="#[20e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;clearerr
<LI><a href="#[269]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fread_bytes_avail
</UL>
<BR>[Called By]<UL><LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::basic_filebuf&lang;wchar_t, std::char_traits&lang;wchar_t&rang;&rang;::underflow()
<LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::basic_filebuf&lang;char, std::char_traits&lang;char&rang;&rang;::underflow()
</UL>

<P><STRONG><a name="[289]"></a>__rw::__rw_file_t::_C_seek(long, int)</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, ios.o(i._ZN4__rw11__rw_file_t7_C_seekEli))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = __rw::__rw_file_t::_C_seek(long, int) &rArr; fseek &rArr; _fseek &rArr; _ftell_internal &rArr; __aeabi_errno_addr &rArr; __user_perthread_libspace
</UL>
<BR>[Calls]<UL><LI><a href="#[20d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fseek
<LI><a href="#[20b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ftell
</UL>
<BR>[Called By]<UL><LI><a href="#[37e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::basic_filebuf&lang;wchar_t, std::char_traits&lang;wchar_t&rang;&rang;::_C_file_seek(long, int)
<LI><a href="#[36d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::basic_filebuf&lang;char, std::char_traits&lang;char&rang;&rang;::_C_file_seek(long, int)
</UL>

<P><STRONG><a name="[28a]"></a>__rw::__rw_file_t::_C_close()</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, ios.o(i._ZN4__rw11__rw_file_t8_C_closeEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = __rw::__rw_file_t::_C_close() &rArr; fclose &rArr; _fclose_internal &rArr; _fflush &rArr; _writebuf &rArr; _sys_write
</UL>
<BR>[Calls]<UL><LI><a href="#[28b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rw_file_t::_C_is_open() const
<LI><a href="#[20c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fclose
</UL>
<BR>[Called By]<UL><LI><a href="#[380]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::basic_filebuf&lang;wchar_t, std::char_traits&lang;wchar_t&rang;&rang;::close()
<LI><a href="#[371]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::basic_filebuf&lang;char, std::char_traits&lang;char&rang;&rang;::close()
</UL>

<P><STRONG><a name="[28c]"></a>__rw::__rw_file_t::_C_write(const void*, unsigned, unsigned)</STRONG> (Thumb, 30 bytes, Stack size 16 bytes, ios.o(i._ZN4__rw11__rw_file_t8_C_writeEPKvjj))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = __rw::__rw_file_t::_C_write(const void*, unsigned, unsigned) &rArr; fwrite &rArr; _writebuf &rArr; _sys_write
</UL>
<BR>[Calls]<UL><LI><a href="#[26b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fwrite
</UL>
<BR>[Called By]<UL><LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::basic_filebuf&lang;wchar_t, std::char_traits&lang;wchar_t&rang;&rang;::overflow(int)
<LI><a href="#[37b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::basic_filebuf&lang;wchar_t, std::char_traits&lang;wchar_t&rang;&rang;::_C_unshift()
<LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::basic_filebuf&lang;char, std::char_traits&lang;char&rang;&rang;::overflow(int)
<LI><a href="#[369]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::basic_filebuf&lang;char, std::char_traits&lang;char&rang;&rang;::_C_unshift()
</UL>

<P><STRONG><a name="[2c8]"></a>__rw::__rw_file_t::_C_fileno(std::__FILE*)</STRONG> (Thumb, 38 bytes, Stack size 0 bytes, ios.o(i._ZN4__rw11__rw_file_t9_C_filenoEPSt6__FILE))
<BR><BR>[Called By]<UL><LI><a href="#[2c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rw_file_t::_C_is_std() const
</UL>

<P><STRONG><a name="[28d]"></a>__rw::__rw_file_t::__rw_file_t(int)</STRONG> (Thumb, 46 bytes, Stack size 8 bytes, ios.o(i._ZN4__rw11__rw_file_tC1Ei))
<BR><BR>[Stack]<UL><LI>Max Depth = 800 + Unknown Stack Size
<LI>Call Chain = __rw::__rw_file_t::__rw_file_t(int) &rArr; __rw::__rw_throw(int, ...) &rArr; std::__rw_exception::_C_vformat(int, std::__va_list) &rArr; __rw::__rw_vfmatstr(char*, unsigned, int, std::__va_list) &rArr; std::locale::locale() &rArr; std::locale::_C_init() &rArr; __rw::__rw_locale_imp::__rw_locale_imp(const char*, unsigned, unsigned) &rArr; __aeabi_vec_new_cookie &rArr; __cxa_vec_new &rArr; __ARM_array_new_general &rArr; __cxa_rethrow &rArr; _Unwind_RaiseException &rArr; __ARM_Unwind_RaiseException &rArr; malloc &rArr; _malloc_internal &rArr; __Heap_Full &rArr; __Heap_ProvideMemory &rArr; _free_internal &rArr; _mutex_release
</UL>
<BR>[Calls]<UL><LI><a href="#[284]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rw_throw(int, ...)
</UL>
<BR>[Called By]<UL><LI><a href="#[302]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::basic_filebuf&lang;wchar_t, std::char_traits&lang;wchar_t&rang;&rang;::basic_filebuf(int, wchar_t*, long)
<LI><a href="#[2fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::basic_filebuf&lang;char, std::char_traits&lang;char&rang;&rang;::basic_filebuf(int, char*, long)
</UL>

<P><STRONG><a name="[3f2]"></a>__rw::__rw_file_t::__rw_file_t__sub_object(int)</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, ios.o(i._ZN4__rw11__rw_file_tC1Ei), UNUSED)

<P><STRONG><a name="[28e]"></a>__rw::__rw_allocate(unsigned, int)</STRONG> (Thumb, 32 bytes, Stack size 16 bytes, rwalloc.o(i._ZN4__rw13__rw_allocateEji))
<BR><BR>[Stack]<UL><LI>Max Depth = 192 + Unknown Stack Size
 + In Cycle
<LI>Call Chain = __rw::__rw_allocate(unsigned, int) &rArr;  __rw::__rw_throw(int, ...) (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[284]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rw_throw(int, ...)
<LI><a href="#[147]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxa_end_catch
<LI><a href="#[145]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxa_begin_catch
<LI><a href="#[281]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;operator new(unsigned)
</UL>
<BR>[Called By]<UL><LI><a href="#[388]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::vector&lang;int, std::allocator&lang;int&rang;&rang;::_C_insert_aux(int*, const int&)
<LI><a href="#[361]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;::_C_getRep(unsigned, unsigned)
<LI><a href="#[32d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rb_tree&lang;int, std::pair&lang;const int, int&rang;, __rw::__select1st&lang;std::pair&lang;const int, int&rang;, int&rang;, std::less&lang;int&rang;, std::allocator&lang;std::pair&lang;const int, int&rang;&rang;&rang;::_C_add_new_buffer()
</UL>

<P><STRONG><a name="[297]"></a>__rw::__rw_deallocate(void*, unsigned, int)</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, rwalloc.o(i._ZN4__rw15__rw_deallocateEPvji))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = __rw::__rw_deallocate(void*, unsigned, int) &rArr; operator delete (void*) &rArr; free &rArr; _free_internal &rArr; _mutex_release
</UL>
<BR>[Calls]<UL><LI><a href="#[282]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;operator delete (void*)
</UL>
<BR>[Called By]<UL><LI><a href="#[362]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;::_C_unlink()
<LI><a href="#[35a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::allocator&lang;int&rang;::deallocate(int*, unsigned)
<LI><a href="#[338]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::allocator&lang;__rw::__rb_tree&lang;int, std::pair&lang;const int, int&rang;, __rw::__select1st&lang;std::pair&lang;const int, int&rang;, int&rang;, std::less&lang;int&rang;, std::allocator&lang;std::pair&lang;const int, int&rang;&rang;&rang;::_C_rb_tree_node_buffer&rang;::deallocate(__rw::__rb_tree&lang;int, std::pair&lang;const int, int&rang;, __rw::__select1st&lang;std::pair&lang;const int, int&rang;, int&rang;, std::less&lang;int&rang;, std::allocator&lang;std::pair&lang;const int, int&rang;&rang;&rang;::_C_rb_tree_node_buffer*, unsigned)
<LI><a href="#[339]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rb_tree&lang;int, std::pair&lang;const int, int&rang;, __rw::__select1st&lang;std::pair&lang;const int, int&rang;, int&rang;, std::less&lang;int&rang;, std::allocator&lang;std::pair&lang;const int, int&rang;&rang;&rang;::_C_deallocate_buffers()
</UL>

<P><STRONG><a name="[5c]"></a>__rw::__rw_facet_base::_C_initfacet(const std::locale&)</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, char.o(i._ZN4__rw15__rw_facet_base12_C_initfacetERKSt6locale))
<BR>[Address Reference Count : 6]<UL><LI> char.o(.constdata__ZTVSt14collate_bynameIcE)
<LI> rwstdexcept.o(.constdata__ZTVSt8messagesIcE)
<LI> ios.o(.constdata__ZTVNSt6locale5facetE)
<LI> ios.o(.constdata__ZTVSt5ctypeIwE)
<LI> ios.o(.constdata__ZTVSt7codecvtIccSt11__mbstate_tE)
<LI> ios.o(.constdata__ZTVSt7codecvtIwcSt11__mbstate_tE)
</UL>
<P><STRONG><a name="[298]"></a>__rw::__rw_locale_imp::_C_parse_name(__rw::__rw_locale_vector&lang;std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;&rang;&, const char*)</STRONG> (Thumb, 202 bytes, Stack size 32 bytes, vendor.o(i._ZN4__rw15__rw_locale_imp13_C_parse_nameERNS_18__rw_locale_vectorISsEEPKc), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[213]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setlocale
<LI><a href="#[21b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[146]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;::operator =(const char*)
<LI><a href="#[28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;::~basic_string()
<LI><a href="#[15a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::allocator&lang;char&rang;::allocator()
<LI><a href="#[15b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::allocator&lang;char&rang;::allocator(const std::allocator&lang;char&rang;&)
<LI><a href="#[29a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::char_traits&lang;char&rang;::copy(char*, const char*, unsigned)
<LI><a href="#[299]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;::_C_allocate(unsigned, unsigned, unsigned)
</UL>
<BR>[Called By]<UL><LI><a href="#[2f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::locale::locale(const std::locale&, const char*, int)
<LI><a href="#[2f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::locale::locale(const char*)
</UL>

<P><STRONG><a name="[2f1]"></a>__rw::__rw_locale_imp::_C_map_category(int)</STRONG> (Thumb, 60 bytes, Stack size 0 bytes, vendor.o(i._ZN4__rw15__rw_locale_imp15_C_map_categoryEi), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[2f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::locale::locale(const std::locale&, const std::locale&, int)
<LI><a href="#[2f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::locale::locale(const std::locale&, const char*, int)
<LI><a href="#[2f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::locale::_C_remove_facets(int)
</UL>

<P><STRONG><a name="[29b]"></a>__rw::__rw_locale_imp::__rw_locale_imp(const char*, unsigned, unsigned)</STRONG> (Thumb, 218 bytes, Stack size 40 bytes, locale.o(i._ZN4__rw15__rw_locale_impC1EPKcjj))
<BR><BR>[Stack]<UL><LI>Max Depth = 592 + Unknown Stack Size
<LI>Call Chain = __rw::__rw_locale_imp::__rw_locale_imp(const char*, unsigned, unsigned) &rArr; __aeabi_vec_new_cookie &rArr; __cxa_vec_new &rArr; __ARM_array_new_general &rArr; __cxa_rethrow &rArr; _Unwind_RaiseException &rArr; __ARM_Unwind_RaiseException &rArr; malloc &rArr; _malloc_internal &rArr; __Heap_Full &rArr; __Heap_ProvideMemory &rArr; _free_internal &rArr; _mutex_release
</UL>
<BR>[Calls]<UL><LI><a href="#[29c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_vec_new_cookie
<LI><a href="#[290]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;operator new[] (unsigned)
<LI><a href="#[21e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memcpy
<LI><a href="#[21b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[29d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;::operator =(const std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;&)
<LI><a href="#[28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;::~basic_string()
<LI><a href="#[15a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::allocator&lang;char&rang;::allocator()
<LI><a href="#[29e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_vec_delete
<LI><a href="#[278]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;::basic_string(const std::allocator&lang;char&rang;&)
</UL>
<BR>[Called By]<UL><LI><a href="#[2f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::locale::locale(const char*)
<LI><a href="#[2f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::locale::_C_init()
</UL>

<P><STRONG><a name="[3f3]"></a>__rw::__rw_locale_imp::__rw_locale_imp__sub_object(const char*, unsigned, unsigned)</STRONG> (Thumb, 0 bytes, Stack size 40 bytes, locale.o(i._ZN4__rw15__rw_locale_impC1EPKcjj), UNUSED)

<P><STRONG><a name="[29f]"></a>__rw::__rw_locale_imp::__rw_locale_imp(const __rw::__rw_locale_imp&, const char*, unsigned)</STRONG> (Thumb, 166 bytes, Stack size 24 bytes, locale.o(i._ZN4__rw15__rw_locale_impC1ERKS0_PKcj), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[29c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_vec_new_cookie
<LI><a href="#[290]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;operator new[] (unsigned)
<LI><a href="#[21e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memcpy
<LI><a href="#[21b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[29d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;::operator =(const std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;&)
</UL>
<BR>[Called By]<UL><LI><a href="#[2f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::locale::locale(const std::locale&, const std::locale&, int)
<LI><a href="#[2f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::locale::locale(const std::locale&, const char*, int)
</UL>

<P><STRONG><a name="[3f4]"></a>__rw::__rw_locale_imp::__rw_locale_imp__sub_object(const __rw::__rw_locale_imp&, const char*, unsigned)</STRONG> (Thumb, 0 bytes, Stack size 24 bytes, locale.o(i._ZN4__rw15__rw_locale_impC1ERKS0_PKcj), UNUSED)

<P><STRONG><a name="[2a0]"></a>__rw::__rw_locale_imp::~__rw_locale_imp()</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, locale.o(i._ZN4__rw15__rw_locale_impD1Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 560 + Unknown Stack Size
<LI>Call Chain = __rw::__rw_locale_imp::~__rw_locale_imp() &rArr; __rw::__rw_locale_vector&lang;std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;&rang;::~__rw_locale_vector() &rArr; __aeabi_vec_delete &rArr; __aeabi_vec_dtor_cookie &rArr; __aeabi_vec_dtor &rArr; __ARM_vec_cleanup_rethrow &rArr; __cxa_rethrow &rArr; _Unwind_RaiseException &rArr; __ARM_Unwind_RaiseException &rArr; malloc &rArr; _malloc_internal &rArr; __Heap_Full &rArr; __Heap_ProvideMemory &rArr; _free_internal &rArr; _mutex_release
</UL>
<BR>[Calls]<UL><LI><a href="#[296]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rw_locale_vector&lang;std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;&rang;::~__rw_locale_vector()
<LI><a href="#[2a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rw_locale_vector&lang;__rw::__rw_facet_base*&rang;::~__rw_locale_vector()
<LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;operator delete[] (void*)
</UL>
<BR>[Called By]<UL><LI><a href="#[2f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::locale::locale(const char*)
<LI><a href="#[2d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::locale::operator =(const std::locale&)
<LI><a href="#[2f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::locale::_C_init()
</UL>

<P><STRONG><a name="[3f5]"></a>__rw::__rw_locale_imp::~__rw_locale_imp__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, locale.o(i._ZN4__rw15__rw_locale_impD1Ev), UNUSED)

<P><STRONG><a name="[2a2]"></a>__rw::__rw_punct_data&lang;char&rang;::~__rw_punct_data()</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, main.o(i._ZN4__rw15__rw_punct_dataIcED1Ev), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;::~basic_string()
</UL>
<BR>[Called By]<UL><LI><a href="#[2a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rw_numpunct_impl_data&lang;char&rang;::~__rw_numpunct_impl_data()
</UL>

<P><STRONG><a name="[3f6]"></a>__rw::__rw_punct_data&lang;char&rang;::~__rw_punct_data__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, main.o(i._ZN4__rw15__rw_punct_dataIcED1Ev), UNUSED)

<P><STRONG><a name="[2a3]"></a>__rw::__rw_numpunct_impl&lang;char&rang;::~__rw_numpunct_impl()</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, main.o(i._ZN4__rw18__rw_numpunct_implIcED1Ev), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[2a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rw_numpunct_impl_data&lang;char&rang;::~__rw_numpunct_impl_data()
</UL>
<BR>[Called By]<UL><LI><a href="#[30c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::numpunct&lang;char&rang;::~numpunct()
</UL>

<P><STRONG><a name="[3f7]"></a>__rw::__rw_numpunct_impl&lang;char&rang;::~__rw_numpunct_impl__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, main.o(i._ZN4__rw18__rw_numpunct_implIcED1Ev), UNUSED)

<P><STRONG><a name="[d9]"></a>__rw::__rw_throw_exception(int, char*)</STRONG> (Thumb, 760 bytes, Stack size 16 bytes, rwthrowproc_impl.o(i._ZN4__rw20__rw_throw_exceptionEiPc))
<BR><BR>[Stack]<UL><LI>Max Depth = 464 + Unknown Stack Size
<LI>Call Chain = __rw::__rw_throw_exception(int, char*) &rArr; __cxa_throw &rArr; _Unwind_RaiseException &rArr; __ARM_Unwind_RaiseException &rArr; malloc &rArr; _malloc_internal &rArr; __Heap_Full &rArr; __Heap_ProvideMemory &rArr; _free_internal &rArr; _mutex_release
</UL>
<BR>[Calls]<UL><LI><a href="#[2a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::exception::exception()
<LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::bad_alloc::~bad_alloc()
<LI><a href="#[2a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::exception::exception(const std::exception&)
<LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::bad_cast::~bad_cast()
<LI><a href="#[2a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::bad_cast::bad_cast()
<LI><a href="#[2a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::bad_cast::bad_cast(const std::bad_cast&)
<LI><a href="#[34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::bad_exception::~bad_exception()
<LI><a href="#[22c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::bad_exception::bad_exception()
<LI><a href="#[22d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::bad_exception::bad_exception(const std::bad_exception&)
<LI><a href="#[279]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::bad_alloc::bad_alloc()
<LI><a href="#[27a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::bad_alloc::bad_alloc(const std::bad_alloc&)
<LI><a href="#[2c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::ios_base::failure::failure(const std::ios_base::failure&)
<LI><a href="#[2bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::ios_base::failure::failure(const char*)
<LI><a href="#[2bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::ios_base::failbit_set::failbit_set(const std::ios_base::failbit_set&)
<LI><a href="#[2bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::ios_base::eofbit_set::eofbit_set(const std::ios_base::eofbit_set&)
<LI><a href="#[2be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::ios_base::badbit_set::badbit_set(const std::ios_base::badbit_set&)
<LI><a href="#[2af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::invalid_argument::invalid_argument(const std::invalid_argument&)
<LI><a href="#[2ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::invalid_argument::invalid_argument(const char*)
<LI><a href="#[2bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::underflow_error::underflow_error(const std::underflow_error&)
<LI><a href="#[2ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::underflow_error::underflow_error(const char*)
<LI><a href="#[2b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::overflow_error::overflow_error(const std::overflow_error&)
<LI><a href="#[2b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::overflow_error::overflow_error(const char*)
<LI><a href="#[2b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::runtime_error::runtime_error(const std::runtime_error&)
<LI><a href="#[2b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::runtime_error::runtime_error(const char*)
<LI><a href="#[2b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::out_of_range::out_of_range(const std::out_of_range&)
<LI><a href="#[2b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::out_of_range::out_of_range(const char*)
<LI><a href="#[2b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::length_error::length_error(const std::length_error&)
<LI><a href="#[2b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::length_error::length_error(const char*)
<LI><a href="#[2ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::domain_error::domain_error(const std::domain_error&)
<LI><a href="#[2ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::domain_error::domain_error(const char*)
<LI><a href="#[2b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::range_error::range_error(const std::range_error&)
<LI><a href="#[2b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::range_error::range_error(const char*)
<LI><a href="#[2ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::logic_error::logic_error(const std::logic_error&)
<LI><a href="#[2a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::logic_error::logic_error(const char*)
<LI><a href="#[144]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxa_throw
<LI><a href="#[143]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxa_allocate_exception
<LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;operator delete[] (void*)
<LI><a href="#[2aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__rw_exception::_C_assign(const char*, unsigned)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> rwthrowproc.o(.data)
</UL>
<P><STRONG><a name="[2c1]"></a>__rw::__rw_use_c_lib_locale::__rw_use_c_lib_locale(const char*, int)</STRONG> (Thumb, 58 bytes, Stack size 24 bytes, locale.o(i._ZN4__rw21__rw_use_c_lib_localeC1EPKci))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = __rw::__rw_use_c_lib_locale::__rw_use_c_lib_locale(const char*, int) &rArr; operator new[] (unsigned) &rArr; operator new(unsigned) &rArr; malloc &rArr; _malloc_internal &rArr; __Heap_Full &rArr; __Heap_ProvideMemory &rArr; _free_internal &rArr; _mutex_release
</UL>
<BR>[Calls]<UL><LI><a href="#[290]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;operator new[] (unsigned)
<LI><a href="#[2c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcpy
<LI><a href="#[213]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setlocale
<LI><a href="#[21b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
</UL>
<BR>[Called By]<UL><LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::ctype&lang;char&rang;::_C_initfacet(const std::locale&)
<LI><a href="#[2e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::ctype_byname&lang;char&rang;::_C_get_mask_table(const char*)
<LI><a href="#[a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::collate_byname&lang;char&rang;::do_transform(const char*, const char*) const
<LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::collate_byname&lang;char&rang;::do_compare(const char*, const char*, const char*, const char*) const
<LI><a href="#[2e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::ctype_byname&lang;char&rang;::ctype_byname(const char*, unsigned)
<LI><a href="#[2cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__rw_messages_base::_C_cat_open(const std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;&, const std::locale&) const
<LI><a href="#[2c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rw_numpunct_impl_base::_C_get_named_init_(const char*)
</UL>

<P><STRONG><a name="[3f8]"></a>__rw::__rw_use_c_lib_locale::__rw_use_c_lib_locale__sub_object(const char*, int)</STRONG> (Thumb, 0 bytes, Stack size 24 bytes, locale.o(i._ZN4__rw21__rw_use_c_lib_localeC1EPKci), UNUSED)

<P><STRONG><a name="[2c3]"></a>__rw::__rw_use_c_lib_locale::~__rw_use_c_lib_locale()</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, char.o(i._ZN4__rw21__rw_use_c_lib_localeD1Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = __rw::__rw_use_c_lib_locale::~__rw_use_c_lib_locale() &rArr; setlocale &rArr; _setlocale_r &rArr; _set_locale_byname &rArr; _locale_name &rArr; __rt_locale
</UL>
<BR>[Calls]<UL><LI><a href="#[213]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setlocale
<LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;operator delete[] (void*)
</UL>
<BR>[Called By]<UL><LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::ctype&lang;char&rang;::_C_initfacet(const std::locale&)
<LI><a href="#[2e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::ctype_byname&lang;char&rang;::_C_get_mask_table(const char*)
<LI><a href="#[a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::collate_byname&lang;char&rang;::do_transform(const char*, const char*) const
<LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::collate_byname&lang;char&rang;::do_compare(const char*, const char*, const char*, const char*) const
<LI><a href="#[2e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::ctype_byname&lang;char&rang;::ctype_byname(const char*, unsigned)
<LI><a href="#[2cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__rw_messages_base::_C_cat_open(const std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;&, const std::locale&) const
<LI><a href="#[2c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rw_numpunct_impl_base::_C_get_named_init_(const char*)
</UL>

<P><STRONG><a name="[3f9]"></a>__rw::__rw_use_c_lib_locale::~__rw_use_c_lib_locale__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, char.o(i._ZN4__rw21__rw_use_c_lib_localeD1Ev), UNUSED)

<P><STRONG><a name="[2c4]"></a>__rw::__rw_numpunct_impl_base::_C_get_named_init_(const char*)</STRONG> (Thumb, 128 bytes, Stack size 24 bytes, locale.o(i._ZN4__rw23__rw_numpunct_impl_base18_C_get_named_init_EPKc), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[2c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rw_use_c_lib_locale::__rw_use_c_lib_locale(const char*, int)
<LI><a href="#[2c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rw_use_c_lib_locale::~__rw_use_c_lib_locale()
<LI><a href="#[290]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;operator new[] (unsigned)
<LI><a href="#[2c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcpy
<LI><a href="#[215]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;localeconv
<LI><a href="#[21b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[284]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rw_throw(int, ...)
</UL>

<P><STRONG><a name="[2a4]"></a>__rw::__rw_numpunct_impl_data&lang;char&rang;::~__rw_numpunct_impl_data()</STRONG> (Thumb, 36 bytes, Stack size 8 bytes, main.o(i._ZN4__rw23__rw_numpunct_impl_dataIcED1Ev), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;::~basic_string()
<LI><a href="#[2a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rw_punct_data&lang;char&rang;::~__rw_punct_data()
</UL>
<BR>[Called By]<UL><LI><a href="#[2a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rw_numpunct_impl&lang;char&rang;::~__rw_numpunct_impl()
</UL>

<P><STRONG><a name="[3fa]"></a>__rw::__rw_numpunct_impl_data&lang;char&rang;::~__rw_numpunct_impl_data__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, main.o(i._ZN4__rw23__rw_numpunct_impl_dataIcED1Ev), UNUSED)

<P><STRONG><a name="[2c5]"></a>__rw::__rw_reallocate_temp_buffer(void*, unsigned)</STRONG> (Thumb, 118 bytes, Stack size 40 bytes, ios.o(i._ZN4__rw27__rw_reallocate_temp_bufferEPvj))
<BR><BR>[Stack]<UL><LI>Max Depth = 216 + Unknown Stack Size
<LI>Call Chain = __rw::__rw_reallocate_temp_buffer(void*, unsigned) &rArr; __cxa_begin_catch &rArr; __ARM::get_foreign_intermediary(__cxa_exception*, _Unwind_Control_Block*) &rArr; __cxa_allocate_exception &rArr; __ARM::call_terminate_handler(_Unwind_Control_Block*) &rArr; std::terminate() &rArr; __cxa_get_globals &rArr; __ARM_exceptions_buffer_init &rArr; malloc &rArr; _malloc_internal &rArr; __Heap_Full &rArr; __Heap_ProvideMemory &rArr; _free_internal &rArr; _mutex_release
</UL>
<BR>[Calls]<UL><LI><a href="#[2c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxa_guard_acquire
<LI><a href="#[147]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxa_end_catch
<LI><a href="#[145]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxa_begin_catch
<LI><a href="#[281]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;operator new(unsigned)
<LI><a href="#[282]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;operator delete (void*)
</UL>
<BR>[Called By]<UL><LI><a href="#[2fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::return_temporary_buffer&lang;std::ios_base::_C_event_cb&rang;(T1*)
<LI><a href="#[2fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::ios_base::_C_fire_event(std::ios_base::event, bool)
</UL>

<P><STRONG><a name="[27f]"></a>__rw::__catfind(__rw::__rw_cat*)</STRONG> (Thumb, 42 bytes, Stack size 8 bytes, rwcats.o(i._ZN4__rw9__catfindEPNS_8__rw_catE))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __rw::__catfind(__rw::__rw_cat*)
</UL>
<BR>[Called By]<UL><LI><a href="#[283]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;catclose(__rw::__rw_cat*)
<LI><a href="#[27e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;catgets(__rw::__rw_cat*, int, int, const char*)
</UL>

<P><STRONG><a name="[28b]"></a>__rw::__rw_file_t::_C_is_open() const</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, ios.o(i._ZNK4__rw11__rw_file_t10_C_is_openEv))
<BR><BR>[Called By]<UL><LI><a href="#[34a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::basic_filebuf&lang;wchar_t, std::char_traits&lang;wchar_t&rang;&rang;::is_open() const
<LI><a href="#[349]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::basic_filebuf&lang;char, std::char_traits&lang;char&rang;&rang;::is_open() const
<LI><a href="#[28a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rw_file_t::_C_close()
</UL>

<P><STRONG><a name="[2c7]"></a>__rw::__rw_file_t::_C_is_std() const</STRONG> (Thumb, 56 bytes, Stack size 8 bytes, ios.o(i._ZNK4__rw11__rw_file_t9_C_is_stdEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __rw::__rw_file_t::_C_is_std() const
</UL>
<BR>[Calls]<UL><LI><a href="#[2c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rw_file_t::_C_fileno(std::__FILE*)
</UL>
<BR>[Called By]<UL><LI><a href="#[380]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::basic_filebuf&lang;wchar_t, std::char_traits&lang;wchar_t&rang;&rang;::close()
<LI><a href="#[371]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::basic_filebuf&lang;char, std::char_traits&lang;char&rang;&rang;::close()
</UL>

<P><STRONG><a name="[2ca]"></a>std::basic_ostream&lang;char, std::char_traits&lang;char&rang;&rang;::_C_is_cout() const</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, main.o(i._ZNKSo10_C_is_coutEv))
<BR><BR>[Called By]<UL><LI><a href="#[35f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::basic_ostream&lang;char, std::char_traits&lang;char&rang;&rang;::_C_opfx()
<LI><a href="#[2c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::basic_ostream&lang;char, std::char_traits&lang;char&rang;&rang;::_C_is_std() const
</UL>

<P><STRONG><a name="[2c9]"></a>std::basic_ostream&lang;char, std::char_traits&lang;char&rang;&rang;::_C_is_std() const</STRONG> (Thumb, 62 bytes, Stack size 8 bytes, main.o(i._ZNKSo9_C_is_stdEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = std::basic_ostream&lang;char, std::char_traits&lang;char&rang;&rang;::_C_is_std() const
</UL>
<BR>[Calls]<UL><LI><a href="#[2ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::basic_ostream&lang;char, std::char_traits&lang;char&rang;&rang;::_C_is_cout() const
</UL>
<BR>[Called By]<UL><LI><a href="#[35f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::basic_ostream&lang;char, std::char_traits&lang;char&rang;&rang;::_C_opfx()
<LI><a href="#[320]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::basic_ostream&lang;char, std::char_traits&lang;char&rang;&rang;::sentry::~sentry()
</UL>

<P><STRONG><a name="[5e]"></a>std::__rw_exception::what() const</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, rwstdexcept.o(i._ZNKSt14__rw_exception4whatEv))
<BR>[Address Reference Count : 14]<UL><LI> rwstdexcept.o(.constdata__ZTVSt14__rw_exception)
<LI> rwthrowproc_impl.o(.constdata__ZTVNSt8ios_base7failureE)
<LI> rwthrowproc_impl.o(.constdata__ZTVSt11logic_error)
<LI> rwthrowproc_impl.o(.constdata__ZTVSt12domain_error)
<LI> rwthrowproc_impl.o(.constdata__ZTVSt16invalid_argument)
<LI> rwthrowproc_impl.o(.constdata__ZTVSt12length_error)
<LI> rwthrowproc_impl.o(.constdata__ZTVSt12out_of_range)
<LI> rwthrowproc_impl.o(.constdata__ZTVSt13runtime_error)
<LI> rwthrowproc_impl.o(.constdata__ZTVSt11range_error)
<LI> rwthrowproc_impl.o(.constdata__ZTVSt14overflow_error)
<LI> rwthrowproc_impl.o(.constdata__ZTVSt15underflow_error)
<LI> rwthrowproc_impl.o(.constdata__ZTVNSt8ios_base11failbit_setE)
<LI> rwthrowproc_impl.o(.constdata__ZTVNSt8ios_base10badbit_setE)
<LI> rwthrowproc_impl.o(.constdata__ZTVNSt8ios_base10eofbit_setE)
</UL>
<P><STRONG><a name="[9f]"></a>std::collate_byname&lang;char&rang;::do_compare(const char*, const char*, const char*, const char*) const</STRONG> (Thumb, 154 bytes, Stack size 552 bytes, char.o(i._ZNKSt14collate_bynameIcE10do_compareEPKcS2_S2_S2_))
<BR><BR>[Stack]<UL><LI>Max Depth = 672<LI>Call Chain = std::collate_byname&lang;char&rang;::do_compare(const char*, const char*, const char*, const char*) const &rArr; __rw::__rw_use_c_lib_locale::__rw_use_c_lib_locale(const char*, int) &rArr; operator new[] (unsigned) &rArr; operator new(unsigned) &rArr; malloc &rArr; _malloc_internal &rArr; __Heap_Full &rArr; __Heap_ProvideMemory &rArr; _free_internal &rArr; _mutex_release
</UL>
<BR>[Calls]<UL><LI><a href="#[2c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rw_use_c_lib_locale::__rw_use_c_lib_locale(const char*, int)
<LI><a href="#[2c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rw_use_c_lib_locale::~__rw_use_c_lib_locale()
<LI><a href="#[290]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;operator new[] (unsigned)
<LI><a href="#[219]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcoll
<LI><a href="#[1d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
<LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;operator delete[] (void*)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> char.o(.constdata__ZTVSt14collate_bynameIcE)
</UL>
<P><STRONG><a name="[a0]"></a>std::collate_byname&lang;char&rang;::do_transform(const char*, const char*) const</STRONG> (Thumb, 116 bytes, Stack size 288 bytes, char.o(i._ZNKSt14collate_bynameIcE12do_transformEPKcS2_))
<BR><BR>[Stack]<UL><LI>Max Depth = 1104 + Unknown Stack Size
<LI>Call Chain = std::collate_byname&lang;char&rang;::do_transform(const char*, const char*) const &rArr; std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;::basic_string(const char*, unsigned, const std::allocator&lang;char&rang;&) &rArr; __rw::__rw_throw(int, ...) &rArr; std::__rw_exception::_C_vformat(int, std::__va_list) &rArr; __rw::__rw_vfmatstr(char*, unsigned, int, std::__va_list) &rArr; std::locale::locale() &rArr; std::locale::_C_init() &rArr; __rw::__rw_locale_imp::__rw_locale_imp(const char*, unsigned, unsigned) &rArr; __aeabi_vec_new_cookie &rArr; __cxa_vec_new &rArr; __ARM_array_new_general &rArr; __cxa_rethrow &rArr; _Unwind_RaiseException &rArr; __ARM_Unwind_RaiseException &rArr; malloc &rArr; _malloc_internal &rArr; __Heap_Full &rArr; __Heap_ProvideMemory &rArr; _free_internal &rArr; _mutex_release
</UL>
<BR>[Calls]<UL><LI><a href="#[2c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rw_use_c_lib_locale::__rw_use_c_lib_locale(const char*, int)
<LI><a href="#[2cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;::basic_string(const char*, unsigned, const std::allocator&lang;char&rang;&)
<LI><a href="#[2cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;::begin()
<LI><a href="#[2c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rw_use_c_lib_locale::~__rw_use_c_lib_locale()
<LI><a href="#[290]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;operator new[] (unsigned)
<LI><a href="#[21a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strxfrm
<LI><a href="#[1d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
<LI><a href="#[15a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::allocator&lang;char&rang;::allocator()
<LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;operator delete[] (void*)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> char.o(.constdata__ZTVSt14collate_bynameIcE)
</UL>
<P><STRONG><a name="[2cd]"></a>std::__rw_messages_base::_C_cat_open(const std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;&, const std::locale&) const</STRONG> (Thumb, 114 bytes, Stack size 32 bytes, messages.o(i._ZNKSt18__rw_messages_base11_C_cat_openERKSsRKSt6locale))
<BR><BR>[Stack]<UL><LI>Max Depth = 704 + Unknown Stack Size
<LI>Call Chain = std::__rw_messages_base::_C_cat_open(const std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;&, const std::locale&) const &rArr; __rw::__rw_locale_vector&lang;std::__rw_open_cat_data&rang;::resize(unsigned) &rArr; std::__rw_open_cat_data::__rw_open_cat_data() &rArr; std::locale::classic() &rArr; std::locale::locale(__rw::__rw_locale_imp*) &rArr; std::locale::_C_init() &rArr; __rw::__rw_locale_imp::__rw_locale_imp(const char*, unsigned, unsigned) &rArr; __aeabi_vec_new_cookie &rArr; __cxa_vec_new &rArr; __ARM_array_new_general &rArr; __cxa_rethrow &rArr; _Unwind_RaiseException &rArr; __ARM_Unwind_RaiseException &rArr; malloc &rArr; _malloc_internal &rArr; __Heap_Full &rArr; __Heap_ProvideMemory &rArr; _free_internal &rArr; _mutex_release
</UL>
<BR>[Calls]<UL><LI><a href="#[2c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rw_use_c_lib_locale::__rw_use_c_lib_locale(const char*, int)
<LI><a href="#[2c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rw_use_c_lib_locale::~__rw_use_c_lib_locale()
<LI><a href="#[280]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;catopen(const char*, int)
<LI><a href="#[2cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rw_locale_vector&lang;std::__rw_open_cat_data&rang;::resize(unsigned)
<LI><a href="#[2ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__rw_get_cats()
<LI><a href="#[2d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::locale::operator =(const std::locale&)
</UL>
<BR>[Called By]<UL><LI><a href="#[ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::messages&lang;char&rang;::do_open(const std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;&, const std::locale&) const
</UL>

<P><STRONG><a name="[2d1]"></a>std::__rw_messages_base::_C_cat_close(int) const</STRONG> (Thumb, 64 bytes, Stack size 16 bytes, messages.o(i._ZNKSt18__rw_messages_base12_C_cat_closeEi), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[283]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;catclose(__rw::__rw_cat*)
<LI><a href="#[2ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__rw_get_cats()
<LI><a href="#[2d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::locale::classic()
<LI><a href="#[2d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::locale::operator =(const std::locale&)
</UL>

<P><STRONG><a name="[2d3]"></a>std::__rw_messages_base::_C_get_locale(int) const</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, messages.o(i._ZNKSt18__rw_messages_base13_C_get_localeEi))
<BR><BR>[Stack]<UL><LI>Max Depth = 632 + Unknown Stack Size
<LI>Call Chain = std::__rw_messages_base::_C_get_locale(int) const &rArr; std::locale::classic() &rArr; std::locale::locale(__rw::__rw_locale_imp*) &rArr; std::locale::_C_init() &rArr; __rw::__rw_locale_imp::__rw_locale_imp(const char*, unsigned, unsigned) &rArr; __aeabi_vec_new_cookie &rArr; __cxa_vec_new &rArr; __ARM_array_new_general &rArr; __cxa_rethrow &rArr; _Unwind_RaiseException &rArr; __ARM_Unwind_RaiseException &rArr; malloc &rArr; _malloc_internal &rArr; __Heap_Full &rArr; __Heap_ProvideMemory &rArr; _free_internal &rArr; _mutex_release
</UL>
<BR>[Calls]<UL><LI><a href="#[2ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__rw_get_cats()
<LI><a href="#[2d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::locale::classic()
</UL>
<BR>[Called By]<UL><LI><a href="#[cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::messages&lang;char&rang;::do_get(int, int, int, const std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;&) const
</UL>

<P><STRONG><a name="[2d4]"></a>std::__rw_messages_base::_C_get_message(int, int, int) const</STRONG> (Thumb, 52 bytes, Stack size 24 bytes, messages.o(i._ZNKSt18__rw_messages_base14_C_get_messageEiii))
<BR><BR>[Stack]<UL><LI>Max Depth = 224 + Unknown Stack Size
<LI>Call Chain = std::__rw_messages_base::_C_get_message(int, int, int) const &rArr; catgets(__rw::__rw_cat*, int, int, const char*) &rArr; __cxa_begin_catch &rArr; __ARM::get_foreign_intermediary(__cxa_exception*, _Unwind_Control_Block*) &rArr; __cxa_allocate_exception &rArr; __ARM::call_terminate_handler(_Unwind_Control_Block*) &rArr; std::terminate() &rArr; __cxa_get_globals &rArr; __ARM_exceptions_buffer_init &rArr; malloc &rArr; _malloc_internal &rArr; __Heap_Full &rArr; __Heap_ProvideMemory &rArr; _free_internal &rArr; _mutex_release
</UL>
<BR>[Calls]<UL><LI><a href="#[27e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;catgets(__rw::__rw_cat*, int, int, const char*)
<LI><a href="#[2ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__rw_get_cats()
</UL>
<BR>[Called By]<UL><LI><a href="#[cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::messages&lang;char&rang;::do_get(int, int, int, const std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;&) const
</UL>

<P><STRONG><a name="[71]"></a>std::ctype&lang;char&rang;::do_tolower(char*, const char*) const</STRONG> (Thumb, 44 bytes, Stack size 16 bytes, char.o(i._ZNKSt5ctypeIcE10do_tolowerEPcPKc))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = std::ctype&lang;char&rang;::do_tolower(char*, const char*) const
</UL>
<BR>[Calls]<UL><LI><a href="#[2d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::ctype&lang;char&rang;::is(std::ctype_base::mask, char) const
</UL>
<BR>[Address Reference Count : 2]<UL><LI> char.o(.constdata__ZTVSt5ctypeIcE)
<LI> char.o(.constdata__ZTVSt12ctype_bynameIcE)
</UL>
<P><STRONG><a name="[73]"></a>std::ctype&lang;char&rang;::do_tolower(char) const</STRONG> (Thumb, 30 bytes, Stack size 16 bytes, char.o(i._ZNKSt5ctypeIcE10do_tolowerEc))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = std::ctype&lang;char&rang;::do_tolower(char) const
</UL>
<BR>[Calls]<UL><LI><a href="#[2d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::ctype&lang;char&rang;::is(std::ctype_base::mask, char) const
</UL>
<BR>[Address Reference Count : 2]<UL><LI> char.o(.constdata__ZTVSt5ctypeIcE)
<LI> char.o(.constdata__ZTVSt12ctype_bynameIcE)
</UL>
<P><STRONG><a name="[70]"></a>std::ctype&lang;char&rang;::do_toupper(char*, const char*) const</STRONG> (Thumb, 44 bytes, Stack size 16 bytes, char.o(i._ZNKSt5ctypeIcE10do_toupperEPcPKc))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = std::ctype&lang;char&rang;::do_toupper(char*, const char*) const
</UL>
<BR>[Calls]<UL><LI><a href="#[2d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::ctype&lang;char&rang;::is(std::ctype_base::mask, char) const
</UL>
<BR>[Address Reference Count : 2]<UL><LI> char.o(.constdata__ZTVSt5ctypeIcE)
<LI> char.o(.constdata__ZTVSt12ctype_bynameIcE)
</UL>
<P><STRONG><a name="[72]"></a>std::ctype&lang;char&rang;::do_toupper(char) const</STRONG> (Thumb, 30 bytes, Stack size 16 bytes, char.o(i._ZNKSt5ctypeIcE10do_toupperEc))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = std::ctype&lang;char&rang;::do_toupper(char) const
</UL>
<BR>[Calls]<UL><LI><a href="#[2d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::ctype&lang;char&rang;::is(std::ctype_base::mask, char) const
</UL>
<BR>[Address Reference Count : 2]<UL><LI> char.o(.constdata__ZTVSt5ctypeIcE)
<LI> char.o(.constdata__ZTVSt12ctype_bynameIcE)
</UL>
<P><STRONG><a name="[2d5]"></a>std::ctype&lang;char&rang;::is(std::ctype_base::mask, char) const</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, char.o(i._ZNKSt5ctypeIcE2isENSt10ctype_base4maskEc))
<BR><BR>[Called By]<UL><LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::ctype&lang;char&rang;::_C_initfacet(const std::locale&)
<LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::ctype&lang;char&rang;::do_toupper(char) const
<LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::ctype&lang;char&rang;::do_toupper(char*, const char*) const
<LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::ctype&lang;char&rang;::do_tolower(char) const
<LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::ctype&lang;char&rang;::do_tolower(char*, const char*) const
<LI><a href="#[2e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::ctype&lang;char&rang;::ctype(const std::ctype_base::mask*, bool, unsigned)
<LI><a href="#[2e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::ctype_byname&lang;char&rang;::ctype_byname(const char*, unsigned)
</UL>

<P><STRONG><a name="[74]"></a>std::ctype&lang;char&rang;::do_widen(char) const</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, char.o(i._ZNKSt5ctypeIcE8do_widenEc))
<BR>[Address Reference Count : 2]<UL><LI> char.o(.constdata__ZTVSt5ctypeIcE)
<LI> char.o(.constdata__ZTVSt12ctype_bynameIcE)
</UL>
<P><STRONG><a name="[ba]"></a>std::ctype&lang;wchar_t&rang;::do_widen(char) const</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, ios.o(i._ZNKSt5ctypeIwE8do_widenEc))
<BR>[Address Reference Count : 1]<UL><LI> ios.o(.constdata__ZTVSt5ctypeIwE)
</UL>
<P><STRONG><a name="[2d6]"></a>std::locale::_C_use_facet(const std::locale::id&, bool, int, __rw::__rw_facet_base*(*)(int, const char*, unsigned)) const</STRONG> (Thumb, 76 bytes, Stack size 32 bytes, main.o(i._ZNKSt6locale12_C_use_facetERKNS_2idEbiPFPN4__rw15__rw_facet_baseEiPKcjE))
<BR><BR>[Stack]<UL><LI>Max Depth = 864 + Unknown Stack Size
<LI>Call Chain = std::locale::_C_use_facet(const std::locale::id&, bool, int, __rw::__rw_facet_base*(*)(int, const char*, unsigned)) const &rArr; std::locale::_C_make_facet(const std::locale::id&, bool, int, __rw::__rw_facet_base*(*)(int, const char*, unsigned)) const &rArr; __rw::__rw_throw(int, ...) &rArr; std::__rw_exception::_C_vformat(int, std::__va_list) &rArr; __rw::__rw_vfmatstr(char*, unsigned, int, std::__va_list) &rArr; std::locale::locale() &rArr; std::locale::_C_init() &rArr; __rw::__rw_locale_imp::__rw_locale_imp(const char*, unsigned, unsigned) &rArr; __aeabi_vec_new_cookie &rArr; __cxa_vec_new &rArr; __ARM_array_new_general &rArr; __cxa_rethrow &rArr; _Unwind_RaiseException &rArr; __ARM_Unwind_RaiseException &rArr; malloc &rArr; _malloc_internal &rArr; __Heap_Full &rArr; __Heap_ProvideMemory &rArr; _free_internal &rArr; _mutex_release
</UL>
<BR>[Calls]<UL><LI><a href="#[2d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::locale::_C_make_facet(const std::locale::id&, bool, int, __rw::__rw_facet_base*(*)(int, const char*, unsigned)) const
</UL>
<BR>[Called By]<UL><LI><a href="#[37c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::use_facet&lang;std::codecvt&lang;wchar_t, char, std::__mbstate_t&rang;&rang;(const std::locale&)
<LI><a href="#[36a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::use_facet&lang;std::codecvt&lang;char, char, std::__mbstate_t&rang;&rang;(const std::locale&)
<LI><a href="#[304]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::basic_ios&lang;wchar_t, std::char_traits&lang;wchar_t&rang;&rang;::init(std::basic_streambuf&lang;wchar_t, std::char_traits&lang;wchar_t&rang;&rang;*)
<LI><a href="#[300]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::basic_ios&lang;char, std::char_traits&lang;char&rang;&rang;::init(std::basic_streambuf&lang;char, std::char_traits&lang;char&rang;&rang;*)
<LI><a href="#[359]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::basic_ios&lang;char, std::char_traits&lang;char&rang;&rang;::widen(char) const
</UL>

<P><STRONG><a name="[2d7]"></a>std::locale::_C_make_facet(const std::locale::id&, bool, int, __rw::__rw_facet_base*(*)(int, const char*, unsigned)) const</STRONG> (Thumb, 252 bytes, Stack size 40 bytes, locale.o(i._ZNKSt6locale13_C_make_facetERKNS_2idEbiPFPN4__rw15__rw_facet_baseEiPKcjE))
<BR><BR>[Stack]<UL><LI>Max Depth = 832 + Unknown Stack Size
<LI>Call Chain = std::locale::_C_make_facet(const std::locale::id&, bool, int, __rw::__rw_facet_base*(*)(int, const char*, unsigned)) const &rArr; __rw::__rw_throw(int, ...) &rArr; std::__rw_exception::_C_vformat(int, std::__va_list) &rArr; __rw::__rw_vfmatstr(char*, unsigned, int, std::__va_list) &rArr; std::locale::locale() &rArr; std::locale::_C_init() &rArr; __rw::__rw_locale_imp::__rw_locale_imp(const char*, unsigned, unsigned) &rArr; __aeabi_vec_new_cookie &rArr; __cxa_vec_new &rArr; __ARM_array_new_general &rArr; __cxa_rethrow &rArr; _Unwind_RaiseException &rArr; __ARM_Unwind_RaiseException &rArr; malloc &rArr; _malloc_internal &rArr; __Heap_Full &rArr; __Heap_ProvideMemory &rArr; _free_internal &rArr; _mutex_release
</UL>
<BR>[Calls]<UL><LI><a href="#[284]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rw_throw(int, ...)
<LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::locale::~locale()
<LI><a href="#[2d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rw_locale_vector&lang;__rw::__rw_facet_base*&rang;::resize(unsigned, __rw::__rw_facet_base*const &)
<LI><a href="#[2d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::locale::locale(__rw::__rw_locale_imp*)
<LI><a href="#[2da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::locale::_C_install_facet(__rw::__rw_facet_base*, const std::locale::id&) const
</UL>
<BR>[Called By]<UL><LI><a href="#[2d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::locale::_C_use_facet(const std::locale::id&, bool, int, __rw::__rw_facet_base*(*)(int, const char*, unsigned)) const
<LI><a href="#[cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::messages&lang;char&rang;::do_get(int, int, int, const std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;&) const
</UL>

<P><STRONG><a name="[2da]"></a>std::locale::_C_install_facet(__rw::__rw_facet_base*, const std::locale::id&) const</STRONG> (Thumb, 110 bytes, Stack size 24 bytes, locale.o(i._ZNKSt6locale16_C_install_facetEPN4__rw15__rw_facet_baseERKNS_2idE))
<BR><BR>[Stack]<UL><LI>Max Depth = 144<LI>Call Chain = std::locale::_C_install_facet(__rw::__rw_facet_base*, const std::locale::id&) const &rArr; __rw::__rw_locale_vector&lang;__rw::__rw_facet_base*&rang;::resize(unsigned, __rw::__rw_facet_base*const &) &rArr; operator new[] (unsigned) &rArr; operator new(unsigned) &rArr; malloc &rArr; _malloc_internal &rArr; __Heap_Full &rArr; __Heap_ProvideMemory &rArr; _free_internal &rArr; _mutex_release
</UL>
<BR>[Calls]<UL><LI><a href="#[2d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rw_locale_vector&lang;__rw::__rw_facet_base*&rang;::resize(unsigned, __rw::__rw_facet_base*const &)
</UL>
<BR>[Called By]<UL><LI><a href="#[2d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::locale::_C_make_facet(const std::locale::id&, bool, int, __rw::__rw_facet_base*(*)(int, const char*, unsigned)) const
</UL>

<P><STRONG><a name="[2db]"></a>std::locale::name() const</STRONG> (Thumb, 44 bytes, Stack size 24 bytes, locale.o(i._ZNKSt6locale4nameEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 320 + Unknown Stack Size
<LI>Call Chain = std::locale::name() const &rArr; std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;::basic_string(const char*, const std::allocator&lang;char&rang;&) &rArr; std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;::_C_allocate(unsigned, unsigned, unsigned) &rArr; std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;::_C_getRep(unsigned, unsigned) &rArr;  __rw::__rw_throw(int, ...) (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[15a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::allocator&lang;char&rang;::allocator()
<LI><a href="#[293]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;::basic_string(const char*, const std::allocator&lang;char&rang;&)
</UL>
<BR>[Called By]<UL><LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::ctype&lang;char&rang;::_C_initfacet(const std::locale&)
<LI><a href="#[2f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::locale::global(const std::locale&)
</UL>

<P><STRONG><a name="[be]"></a>std::codecvt&lang;char, char, std::__mbstate_t&rang;::do_unshift(std::__mbstate_t&, char*, char*, char*&) const</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, ios.o(i._ZNKSt7codecvtIccSt11__mbstate_tE10do_unshiftERS0_PcS3_RS3_))
<BR>[Address Reference Count : 1]<UL><LI> ios.o(.constdata__ZTVSt7codecvtIccSt11__mbstate_tE)
</UL>
<P><STRONG><a name="[377]"></a>std::codecvt&lang;char, char, std::__mbstate_t&rang;::max_length() const</STRONG> (Thumb, 10 bytes, Stack size 8 bytes, ios.o(i._ZNKSt7codecvtIccSt11__mbstate_tE10max_lengthEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = std::codecvt&lang;char, char, std::__mbstate_t&rang;::max_length() const
</UL>
<BR>[Called By]<UL><LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::basic_filebuf&lang;char, std::char_traits&lang;char&rang;&rang;::showmanyc()
</UL>

<P><STRONG><a name="[bf]"></a>std::codecvt&lang;char, char, std::__mbstate_t&rang;::do_encoding() const</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, ios.o(i._ZNKSt7codecvtIccSt11__mbstate_tE11do_encodingEv))
<BR>[Address Reference Count : 1]<UL><LI> ios.o(.constdata__ZTVSt7codecvtIccSt11__mbstate_tE)
</UL>
<P><STRONG><a name="[375]"></a>std::codecvt&lang;char, char, std::__mbstate_t&rang;::always_noconv() const</STRONG> (Thumb, 10 bytes, Stack size 8 bytes, ios.o(i._ZNKSt7codecvtIccSt11__mbstate_tE13always_noconvEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = std::codecvt&lang;char, char, std::__mbstate_t&rang;::always_noconv() const
</UL>
<BR>[Called By]<UL><LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::basic_filebuf&lang;char, std::char_traits&lang;char&rang;&rang;::underflow()
<LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::basic_filebuf&lang;char, std::char_traits&lang;char&rang;&rang;::showmanyc()
<LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::basic_filebuf&lang;char, std::char_traits&lang;char&rang;&rang;::overflow(int)
</UL>

<P><STRONG><a name="[c1]"></a>std::codecvt&lang;char, char, std::__mbstate_t&rang;::do_max_length() const</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, ios.o(i._ZNKSt7codecvtIccSt11__mbstate_tE13do_max_lengthEv))
<BR>[Address Reference Count : 1]<UL><LI> ios.o(.constdata__ZTVSt7codecvtIccSt11__mbstate_tE)
</UL>
<P><STRONG><a name="[c0]"></a>std::codecvt&lang;char, char, std::__mbstate_t&rang;::do_always_noconv() const</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, ios.o(i._ZNKSt7codecvtIccSt11__mbstate_tE16do_always_noconvEv))
<BR>[Address Reference Count : 1]<UL><LI> ios.o(.constdata__ZTVSt7codecvtIccSt11__mbstate_tE)
</UL>
<P><STRONG><a name="[370]"></a>std::codecvt&lang;char, char, std::__mbstate_t&rang;::out(std::__mbstate_t&, const char*, const char*, const char*&, char*, char*, char*&) const</STRONG> (Thumb, 28 bytes, Stack size 40 bytes, ios.o(i._ZNKSt7codecvtIccSt11__mbstate_tE3outERS0_PKcS4_RS4_PcS6_RS6_))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = std::codecvt&lang;char, char, std::__mbstate_t&rang;::out(std::__mbstate_t&, const char*, const char*, const char*&, char*, char*, char*&) const
</UL>
<BR>[Called By]<UL><LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::basic_filebuf&lang;char, std::char_traits&lang;char&rang;&rang;::overflow(int)
<LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::basic_filebuf&lang;char, std::char_traits&lang;char&rang;&rang;::sync()
</UL>

<P><STRONG><a name="[bd]"></a>std::codecvt&lang;char, char, std::__mbstate_t&rang;::do_in(std::__mbstate_t&, const char*, const char*, const char*&, char*, char*, char*&) const</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, ios.o(i._ZNKSt7codecvtIccSt11__mbstate_tE5do_inERS0_PKcS4_RS4_PcS6_RS6_))
<BR>[Address Reference Count : 1]<UL><LI> ios.o(.constdata__ZTVSt7codecvtIccSt11__mbstate_tE)
</UL>
<P><STRONG><a name="[bc]"></a>std::codecvt&lang;char, char, std::__mbstate_t&rang;::do_out(std::__mbstate_t&, const char*, const char*, const char*&, char*, char*, char*&) const</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, ios.o(i._ZNKSt7codecvtIccSt11__mbstate_tE6do_outERS0_PKcS4_RS4_PcS6_RS6_))
<BR>[Address Reference Count : 1]<UL><LI> ios.o(.constdata__ZTVSt7codecvtIccSt11__mbstate_tE)
</UL>
<P><STRONG><a name="[36b]"></a>std::codecvt&lang;char, char, std::__mbstate_t&rang;::encoding() const</STRONG> (Thumb, 10 bytes, Stack size 8 bytes, ios.o(i._ZNKSt7codecvtIccSt11__mbstate_tE8encodingEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = std::codecvt&lang;char, char, std::__mbstate_t&rang;::encoding() const
</UL>
<BR>[Called By]<UL><LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::basic_filebuf&lang;char, std::char_traits&lang;char&rang;&rang;::seekoff(long, std::ios_base::_C_seekdir, int)
<LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::basic_filebuf&lang;char, std::char_traits&lang;char&rang;&rang;::sync()
<LI><a href="#[369]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::basic_filebuf&lang;char, std::char_traits&lang;char&rang;&rang;::_C_unshift()
</UL>

<P><STRONG><a name="[c5]"></a>std::codecvt&lang;wchar_t, char, std::__mbstate_t&rang;::do_unshift(std::__mbstate_t&, char*, char*, char*&) const</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, ios.o(i._ZNKSt7codecvtIwcSt11__mbstate_tE10do_unshiftERS0_PcS3_RS3_))
<BR>[Address Reference Count : 1]<UL><LI> ios.o(.constdata__ZTVSt7codecvtIwcSt11__mbstate_tE)
</UL>
<P><STRONG><a name="[387]"></a>std::codecvt&lang;wchar_t, char, std::__mbstate_t&rang;::max_length() const</STRONG> (Thumb, 10 bytes, Stack size 8 bytes, ios.o(i._ZNKSt7codecvtIwcSt11__mbstate_tE10max_lengthEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = std::codecvt&lang;wchar_t, char, std::__mbstate_t&rang;::max_length() const
</UL>
<BR>[Called By]<UL><LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::basic_filebuf&lang;wchar_t, std::char_traits&lang;wchar_t&rang;&rang;::showmanyc()
</UL>

<P><STRONG><a name="[c7]"></a>std::codecvt&lang;wchar_t, char, std::__mbstate_t&rang;::do_encoding() const</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, ios.o(i._ZNKSt7codecvtIwcSt11__mbstate_tE11do_encodingEv))
<BR>[Address Reference Count : 1]<UL><LI> ios.o(.constdata__ZTVSt7codecvtIwcSt11__mbstate_tE)
</UL>
<P><STRONG><a name="[385]"></a>std::codecvt&lang;wchar_t, char, std::__mbstate_t&rang;::always_noconv() const</STRONG> (Thumb, 10 bytes, Stack size 8 bytes, ios.o(i._ZNKSt7codecvtIwcSt11__mbstate_tE13always_noconvEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = std::codecvt&lang;wchar_t, char, std::__mbstate_t&rang;::always_noconv() const
</UL>
<BR>[Called By]<UL><LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::basic_filebuf&lang;wchar_t, std::char_traits&lang;wchar_t&rang;&rang;::underflow()
<LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::basic_filebuf&lang;wchar_t, std::char_traits&lang;wchar_t&rang;&rang;::showmanyc()
<LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::basic_filebuf&lang;wchar_t, std::char_traits&lang;wchar_t&rang;&rang;::overflow(int)
</UL>

<P><STRONG><a name="[c8]"></a>std::codecvt&lang;wchar_t, char, std::__mbstate_t&rang;::do_max_length() const</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, ios.o(i._ZNKSt7codecvtIwcSt11__mbstate_tE13do_max_lengthEv))
<BR>[Address Reference Count : 1]<UL><LI> ios.o(.constdata__ZTVSt7codecvtIwcSt11__mbstate_tE)
</UL>
<P><STRONG><a name="[c6]"></a>std::codecvt&lang;wchar_t, char, std::__mbstate_t&rang;::do_always_noconv() const</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, ios.o(i._ZNKSt7codecvtIwcSt11__mbstate_tE16do_always_noconvEv))
<BR>[Address Reference Count : 1]<UL><LI> ios.o(.constdata__ZTVSt7codecvtIwcSt11__mbstate_tE)
</UL>
<P><STRONG><a name="[37f]"></a>std::codecvt&lang;wchar_t, char, std::__mbstate_t&rang;::out(std::__mbstate_t&, const wchar_t*, const wchar_t*, const wchar_t*&, char*, char*, char*&) const</STRONG> (Thumb, 28 bytes, Stack size 40 bytes, ios.o(i._ZNKSt7codecvtIwcSt11__mbstate_tE3outERS0_PKwS4_RS4_PcS6_RS6_))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = std::codecvt&lang;wchar_t, char, std::__mbstate_t&rang;::out(std::__mbstate_t&, const wchar_t*, const wchar_t*, const wchar_t*&, char*, char*, char*&) const
</UL>
<BR>[Called By]<UL><LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::basic_filebuf&lang;wchar_t, std::char_traits&lang;wchar_t&rang;&rang;::overflow(int)
<LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::basic_filebuf&lang;wchar_t, std::char_traits&lang;wchar_t&rang;&rang;::sync()
</UL>

<P><STRONG><a name="[c4]"></a>std::codecvt&lang;wchar_t, char, std::__mbstate_t&rang;::do_in(std::__mbstate_t&, const char*, const char*, const char*&, wchar_t*, wchar_t*, wchar_t*&) const</STRONG> (Thumb, 50 bytes, Stack size 12 bytes, ios.o(i._ZNKSt7codecvtIwcSt11__mbstate_tE5do_inERS0_PKcS4_RS4_PwS6_RS6_))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = std::codecvt&lang;wchar_t, char, std::__mbstate_t&rang;::do_in(std::__mbstate_t&, const char*, const char*, const char*&, wchar_t*, wchar_t*, wchar_t*&) const
</UL>
<BR>[Address Reference Count : 1]<UL><LI> ios.o(.constdata__ZTVSt7codecvtIwcSt11__mbstate_tE)
</UL>
<P><STRONG><a name="[c3]"></a>std::codecvt&lang;wchar_t, char, std::__mbstate_t&rang;::do_out(std::__mbstate_t&, const wchar_t*, const wchar_t*, const wchar_t*&, char*, char*, char*&) const</STRONG> (Thumb, 50 bytes, Stack size 12 bytes, ios.o(i._ZNKSt7codecvtIwcSt11__mbstate_tE6do_outERS0_PKwS4_RS4_PcS6_RS6_))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = std::codecvt&lang;wchar_t, char, std::__mbstate_t&rang;::do_out(std::__mbstate_t&, const wchar_t*, const wchar_t*, const wchar_t*&, char*, char*, char*&) const
</UL>
<BR>[Address Reference Count : 1]<UL><LI> ios.o(.constdata__ZTVSt7codecvtIwcSt11__mbstate_tE)
</UL>
<P><STRONG><a name="[37d]"></a>std::codecvt&lang;wchar_t, char, std::__mbstate_t&rang;::encoding() const</STRONG> (Thumb, 10 bytes, Stack size 8 bytes, ios.o(i._ZNKSt7codecvtIwcSt11__mbstate_tE8encodingEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = std::codecvt&lang;wchar_t, char, std::__mbstate_t&rang;::encoding() const
</UL>
<BR>[Called By]<UL><LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::basic_filebuf&lang;wchar_t, std::char_traits&lang;wchar_t&rang;&rang;::seekoff(long, std::ios_base::_C_seekdir, int)
<LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::basic_filebuf&lang;wchar_t, std::char_traits&lang;wchar_t&rang;&rang;::sync()
<LI><a href="#[37b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::basic_filebuf&lang;wchar_t, std::char_traits&lang;wchar_t&rang;&rang;::_C_unshift()
</UL>

<P><STRONG><a name="[1eb]"></a>std::type_info::operator ==(const std::type_info&) const</STRONG> (Thumb, 32 bytes, Stack size 16 bytes, type_info_eq.o(i._ZNKSt9type_infoeqERKS_))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = std::type_info::operator ==(const std::type_info&) const
</UL>
<BR>[Called By]<UL><LI><a href="#[32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxa_call_unexpected
<LI><a href="#[313]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__dynamic_cast
<LI><a href="#[1ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__derived_to_base_conversion
<LI><a href="#[27d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;derived_to_base_conversion_r(void*, void**, const std::type_info*, const std::type_info*, unsigned, int*, int, const std::type_info**, a_result_virtuality*, int*)
<LI><a href="#[27c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;find_base_class_at_addr(void*, void*, const std::type_info*, const std::type_info*, int*)
<LI><a href="#[27b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;traverse_base_classes(void*, const std::type_info*, a_base_class_traversal_block*, __cxxabiv1::__base_class_type_info*)
<LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tbc_post_downcast(void*, const std::type_info*, a_base_class_traversal_block*, __cxxabiv1::__base_class_type_info*)
<LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tbc_downcast(void*, const std::type_info*, a_base_class_traversal_block*, __cxxabiv1::__base_class_type_info*)
<LI><a href="#[1ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxa_type_match
</UL>

<P><STRONG><a name="[1ed]"></a>std::type_info::operator !=(const std::type_info&) const</STRONG> (Thumb, 32 bytes, Stack size 16 bytes, type_info_ne.o(i._ZNKSt9type_infoneERKS_))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = std::type_info::operator !=(const std::type_info&) const
</UL>
<BR>[Called By]<UL><LI><a href="#[1ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxa_type_match
</UL>

<P><STRONG><a name="[63]"></a>std::basic_istream&lang;char, std::char_traits&lang;char&rang;&rang;::~basic_istream__deallocating()</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, ios.o(i._ZNSiD0Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 904 + Unknown Stack Size
<LI>Call Chain = std::basic_istream&lang;char, std::char_traits&lang;char&rang;&rang;::~basic_istream__deallocating() &rArr; std::basic_istream&lang;char, std::char_traits&lang;char&rang;&rang;::~basic_istream() &rArr; std::basic_ios&lang;char, std::char_traits&lang;char&rang;&rang;::~basic_ios() &rArr; std::ios_base::~ios_base() &rArr; std::ios_base::_C_fire_event(std::ios_base::event, bool) &rArr; std::ios_base::_C_unsafe_clear(int, int) &rArr; __rw::__rw_throw(int, ...) &rArr; std::__rw_exception::_C_vformat(int, std::__va_list) &rArr; __rw::__rw_vfmatstr(char*, unsigned, int, std::__va_list) &rArr; std::locale::locale() &rArr; std::locale::_C_init() &rArr; __rw::__rw_locale_imp::__rw_locale_imp(const char*, unsigned, unsigned) &rArr; __aeabi_vec_new_cookie &rArr; __cxa_vec_new &rArr; __ARM_array_new_general &rArr; __cxa_rethrow &rArr; _Unwind_RaiseException &rArr; __ARM_Unwind_RaiseException &rArr; malloc &rArr; _malloc_internal &rArr; __Heap_Full &rArr; __Heap_ProvideMemory &rArr; _free_internal &rArr; _mutex_release
</UL>
<BR>[Calls]<UL><LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::basic_istream&lang;char, std::char_traits&lang;char&rang;&rang;::~basic_istream()
<LI><a href="#[282]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;operator delete (void*)
</UL>
<BR>[Called By]<UL><LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;thunk{v:0,-12} to std::basic_istream&lang;char, std::char_traits&lang;char&rang;&rang;::~basic_istream__deallocating()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> ios.o(.constdata__ZTVSi)
</UL>
<P><STRONG><a name="[62]"></a>std::basic_istream&lang;char, std::char_traits&lang;char&rang;&rang;::~basic_istream()</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, ios.o(i._ZNSiD1Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 896 + Unknown Stack Size
<LI>Call Chain = std::basic_istream&lang;char, std::char_traits&lang;char&rang;&rang;::~basic_istream() &rArr; std::basic_ios&lang;char, std::char_traits&lang;char&rang;&rang;::~basic_ios() &rArr; std::ios_base::~ios_base() &rArr; std::ios_base::_C_fire_event(std::ios_base::event, bool) &rArr; std::ios_base::_C_unsafe_clear(int, int) &rArr; __rw::__rw_throw(int, ...) &rArr; std::__rw_exception::_C_vformat(int, std::__va_list) &rArr; __rw::__rw_vfmatstr(char*, unsigned, int, std::__va_list) &rArr; std::locale::locale() &rArr; std::locale::_C_init() &rArr; __rw::__rw_locale_imp::__rw_locale_imp(const char*, unsigned, unsigned) &rArr; __aeabi_vec_new_cookie &rArr; __cxa_vec_new &rArr; __ARM_array_new_general &rArr; __cxa_rethrow &rArr; _Unwind_RaiseException &rArr; __ARM_Unwind_RaiseException &rArr; malloc &rArr; _malloc_internal &rArr; __Heap_Full &rArr; __Heap_ProvideMemory &rArr; _free_internal &rArr; _mutex_release
</UL>
<BR>[Calls]<UL><LI><a href="#[d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::basic_ios&lang;char, std::char_traits&lang;char&rang;&rang;::~basic_ios()
</UL>
<BR>[Called By]<UL><LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;thunk{v:0,-12} to std::basic_istream&lang;char, std::char_traits&lang;char&rang;&rang;::~basic_istream()
<LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::basic_istream&lang;char, std::char_traits&lang;char&rang;&rang;::~basic_istream__deallocating()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> ios.o(.constdata__ZTVSi)
</UL>
<P><STRONG><a name="[67]"></a>std::basic_ostream&lang;char, std::char_traits&lang;char&rang;&rang;::~basic_ostream__deallocating()</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, ios.o(i._ZNSoD0Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 904 + Unknown Stack Size
<LI>Call Chain = std::basic_ostream&lang;char, std::char_traits&lang;char&rang;&rang;::~basic_ostream__deallocating() &rArr; std::basic_ostream&lang;char, std::char_traits&lang;char&rang;&rang;::~basic_ostream() &rArr; std::basic_ios&lang;char, std::char_traits&lang;char&rang;&rang;::~basic_ios() &rArr; std::ios_base::~ios_base() &rArr; std::ios_base::_C_fire_event(std::ios_base::event, bool) &rArr; std::ios_base::_C_unsafe_clear(int, int) &rArr; __rw::__rw_throw(int, ...) &rArr; std::__rw_exception::_C_vformat(int, std::__va_list) &rArr; __rw::__rw_vfmatstr(char*, unsigned, int, std::__va_list) &rArr; std::locale::locale() &rArr; std::locale::_C_init() &rArr; __rw::__rw_locale_imp::__rw_locale_imp(const char*, unsigned, unsigned) &rArr; __aeabi_vec_new_cookie &rArr; __cxa_vec_new &rArr; __ARM_array_new_general &rArr; __cxa_rethrow &rArr; _Unwind_RaiseException &rArr; __ARM_Unwind_RaiseException &rArr; malloc &rArr; _malloc_internal &rArr; __Heap_Full &rArr; __Heap_ProvideMemory &rArr; _free_internal &rArr; _mutex_release
</UL>
<BR>[Calls]<UL><LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::basic_ostream&lang;char, std::char_traits&lang;char&rang;&rang;::~basic_ostream()
<LI><a href="#[282]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;operator delete (void*)
</UL>
<BR>[Called By]<UL><LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;thunk{v:0,-12} to std::basic_ostream&lang;char, std::char_traits&lang;char&rang;&rang;::~basic_ostream__deallocating()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> ios.o(.constdata__ZTVSo)
</UL>
<P><STRONG><a name="[66]"></a>std::basic_ostream&lang;char, std::char_traits&lang;char&rang;&rang;::~basic_ostream()</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, ios.o(i._ZNSoD1Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 896 + Unknown Stack Size
<LI>Call Chain = std::basic_ostream&lang;char, std::char_traits&lang;char&rang;&rang;::~basic_ostream() &rArr; std::basic_ios&lang;char, std::char_traits&lang;char&rang;&rang;::~basic_ios() &rArr; std::ios_base::~ios_base() &rArr; std::ios_base::_C_fire_event(std::ios_base::event, bool) &rArr; std::ios_base::_C_unsafe_clear(int, int) &rArr; __rw::__rw_throw(int, ...) &rArr; std::__rw_exception::_C_vformat(int, std::__va_list) &rArr; __rw::__rw_vfmatstr(char*, unsigned, int, std::__va_list) &rArr; std::locale::locale() &rArr; std::locale::_C_init() &rArr; __rw::__rw_locale_imp::__rw_locale_imp(const char*, unsigned, unsigned) &rArr; __aeabi_vec_new_cookie &rArr; __cxa_vec_new &rArr; __ARM_array_new_general &rArr; __cxa_rethrow &rArr; _Unwind_RaiseException &rArr; __ARM_Unwind_RaiseException &rArr; malloc &rArr; _malloc_internal &rArr; __Heap_Full &rArr; __Heap_ProvideMemory &rArr; _free_internal &rArr; _mutex_release
</UL>
<BR>[Calls]<UL><LI><a href="#[d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::basic_ios&lang;char, std::char_traits&lang;char&rang;&rang;::~basic_ios()
</UL>
<BR>[Called By]<UL><LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;thunk{v:0,-12} to std::basic_ostream&lang;char, std::char_traits&lang;char&rang;&rang;::~basic_ostream()
<LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::basic_ostream&lang;char, std::char_traits&lang;char&rang;&rang;::~basic_ostream__deallocating()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> ios.o(.constdata__ZTVSo)
</UL>
<P><STRONG><a name="[22a]"></a>std::bad_typeid::bad_typeid(const std::bad_typeid&)</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, bad_typeid.o(i._ZNSt10bad_typeidC1ERKS_))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = std::bad_typeid::bad_typeid(const std::bad_typeid&)
</UL>
<BR>[Calls]<UL><LI><a href="#[2a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::exception::exception(const std::exception&)
</UL>
<BR>[Called By]<UL><LI><a href="#[228]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxa_bad_typeid
</UL>

<P><STRONG><a name="[3fb]"></a>std::bad_typeid::bad_typeid__sub_object(const std::bad_typeid&)</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, bad_typeid.o(i._ZNSt10bad_typeidC1ERKS_), UNUSED)

<P><STRONG><a name="[229]"></a>std::bad_typeid::bad_typeid()</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, bad_typeid.o(i._ZNSt10bad_typeidC1Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = std::bad_typeid::bad_typeid()
</UL>
<BR>[Calls]<UL><LI><a href="#[2a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::exception::exception()
</UL>
<BR>[Called By]<UL><LI><a href="#[228]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxa_bad_typeid
</UL>

<P><STRONG><a name="[3fc]"></a>std::bad_typeid::bad_typeid__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, bad_typeid.o(i._ZNSt10bad_typeidC1Ev), UNUSED)

<P><STRONG><a name="[6a]"></a>std::bad_typeid::~bad_typeid__deallocating()</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, bad_typeid.o(i._ZNSt10bad_typeidD0Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = std::bad_typeid::~bad_typeid__deallocating() &rArr; operator delete (void*) &rArr; free &rArr; _free_internal &rArr; _mutex_release
</UL>
<BR>[Calls]<UL><LI><a href="#[33]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::bad_typeid::~bad_typeid()
<LI><a href="#[282]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;operator delete (void*)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> bad_typeid.o(.constdata__ZTVSt10bad_typeid)
</UL>
<P><STRONG><a name="[33]"></a>std::bad_typeid::~bad_typeid()</STRONG> (Thumb, 8 bytes, Stack size 8 bytes, bad_typeid.o(i._ZNSt10bad_typeidD1Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = std::bad_typeid::~bad_typeid()
</UL>
<BR>[Called By]<UL><LI><a href="#[228]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxa_bad_typeid
<LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::bad_typeid::~bad_typeid__deallocating()
</UL>
<BR>[Address Reference Count : 2]<UL><LI> arm_exceptions_bad_typeid.o(.text)
<LI> bad_typeid.o(.constdata__ZTVSt10bad_typeid)
</UL>
<P><STRONG><a name="[3fd]"></a>std::bad_typeid::~bad_typeid__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, bad_typeid.o(i._ZNSt10bad_typeidD1Ev), UNUSED)

<P><STRONG><a name="[2de]"></a>std::char_traits&lang;char&rang;::eq_int_type(const int&, const int&)</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, ios.o(i._ZNSt11char_traitsIcE11eq_int_typeERKiS2_))
<BR><BR>[Called By]<UL><LI><a href="#[34b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::basic_streambuf&lang;char, std::char_traits&lang;char&rang;&rang;::_C_is_eof(int) const
<LI><a href="#[2dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::char_traits&lang;char&rang;::not_eof(const int&)
</UL>

<P><STRONG><a name="[29a]"></a>std::char_traits&lang;char&rang;::copy(char*, const char*, unsigned)</STRONG> (Thumb, 22 bytes, Stack size 16 bytes, main.o(i._ZNSt11char_traitsIcE4copyEPcPKcj))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = std::char_traits&lang;char&rang;::copy(char*, const char*, unsigned)
</UL>
<BR>[Calls]<UL><LI><a href="#[1d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::basic_filebuf&lang;char, std::char_traits&lang;char&rang;&rang;::xsputn(const char*, long)
<LI><a href="#[2cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;::basic_string(const char*, unsigned, const std::allocator&lang;char&rang;&)
<LI><a href="#[2cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;::begin()
<LI><a href="#[294]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;::basic_string(const std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;&)
<LI><a href="#[364]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;::replace(unsigned, unsigned, const char*, unsigned, unsigned, unsigned)
<LI><a href="#[298]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rw_locale_imp::_C_parse_name(__rw::__rw_locale_vector&lang;std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;&rang;&, const char*)
<LI><a href="#[293]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;::basic_string(const char*, const std::allocator&lang;char&rang;&)
</UL>

<P><STRONG><a name="[2dc]"></a>std::char_traits&lang;char&rang;::move(char*, const char*, unsigned)</STRONG> (Thumb, 22 bytes, Stack size 16 bytes, main.o(i._ZNSt11char_traitsIcE4moveEPcPKcj))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = std::char_traits&lang;char&rang;::move(char*, const char*, unsigned)
</UL>
<BR>[Calls]<UL><LI><a href="#[24d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memmove
</UL>
<BR>[Called By]<UL><LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::basic_filebuf&lang;char, std::char_traits&lang;char&rang;&rang;::underflow()
<LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::basic_filebuf&lang;char, std::char_traits&lang;char&rang;&rang;::sync()
<LI><a href="#[364]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;::replace(unsigned, unsigned, const char*, unsigned, unsigned, unsigned)
</UL>

<P><STRONG><a name="[366]"></a>std::char_traits&lang;char&rang;::assign(char&, const char&)</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, main.o(i._ZNSt11char_traitsIcE6assignERcRKc))
<BR><BR>[Called By]<UL><LI><a href="#[35e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::basic_streambuf&lang;char, std::char_traits&lang;char&rang;&rang;::sputc(char)
<LI><a href="#[146]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;::operator =(const char*)
<LI><a href="#[364]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;::replace(unsigned, unsigned, const char*, unsigned, unsigned, unsigned)
</UL>

<P><STRONG><a name="[14a]"></a>std::char_traits&lang;char&rang;::length(const char*)</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, main.o(i._ZNSt11char_traitsIcE6lengthEPKc))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = std::char_traits&lang;char&rang;::length(const char*) &rArr; strlen
</UL>
<BR>[Calls]<UL><LI><a href="#[21b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
</UL>
<BR>[Called By]<UL><LI><a href="#[141]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::operator &lang;&lang;&lang;std::char_traits&lang;char&rang;&rang;(std::basic_ostream&lang;char, T1&rang;&, const char*)
<LI><a href="#[146]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;::operator =(const char*)
<LI><a href="#[135]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;stl_test()
</UL>

<P><STRONG><a name="[2dd]"></a>std::char_traits&lang;char&rang;::not_eof(const int&)</STRONG> (Thumb, 28 bytes, Stack size 16 bytes, ios.o(i._ZNSt11char_traitsIcE7not_eofERKi))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = std::char_traits&lang;char&rang;::not_eof(const int&)
</UL>
<BR>[Calls]<UL><LI><a href="#[2de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::char_traits&lang;char&rang;::eq_int_type(const int&, const int&)
</UL>
<BR>[Called By]<UL><LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::basic_filebuf&lang;char, std::char_traits&lang;char&rang;&rang;::pbackfail(int)
<LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::basic_filebuf&lang;char, std::char_traits&lang;char&rang;&rang;::overflow(int)
</UL>

<P><STRONG><a name="[2e2]"></a>std::char_traits&lang;wchar_t&rang;::eq_int_type(const int&, const int&)</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, ios.o(i._ZNSt11char_traitsIwE11eq_int_typeERKiS2_))
<BR><BR>[Called By]<UL><LI><a href="#[34c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::basic_streambuf&lang;wchar_t, std::char_traits&lang;wchar_t&rang;&rang;::_C_is_eof(int) const
<LI><a href="#[2e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::char_traits&lang;wchar_t&rang;::not_eof(const int&)
</UL>

<P><STRONG><a name="[2df]"></a>std::char_traits&lang;wchar_t&rang;::copy(wchar_t*, const wchar_t*, unsigned)</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, ios.o(i._ZNSt11char_traitsIwE4copyEPwPKwj))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = std::char_traits&lang;wchar_t&rang;::copy(wchar_t*, const wchar_t*, unsigned)
</UL>
<BR>[Calls]<UL><LI><a href="#[1d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::basic_streambuf&lang;wchar_t, std::char_traits&lang;wchar_t&rang;&rang;::xsgetn(wchar_t*, long)
<LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::basic_filebuf&lang;wchar_t, std::char_traits&lang;wchar_t&rang;&rang;::xsputn(const wchar_t*, long)
</UL>

<P><STRONG><a name="[2e0]"></a>std::char_traits&lang;wchar_t&rang;::move(wchar_t*, const wchar_t*, unsigned)</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, ios.o(i._ZNSt11char_traitsIwE4moveEPwPKwj))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = std::char_traits&lang;wchar_t&rang;::move(wchar_t*, const wchar_t*, unsigned) &rArr; wmemmove &rArr; memmove
</UL>
<BR>[Calls]<UL><LI><a href="#[21c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wmemmove
</UL>
<BR>[Called By]<UL><LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::basic_filebuf&lang;wchar_t, std::char_traits&lang;wchar_t&rang;&rang;::underflow()
<LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::basic_filebuf&lang;wchar_t, std::char_traits&lang;wchar_t&rang;&rang;::sync()
</UL>

<P><STRONG><a name="[2e1]"></a>std::char_traits&lang;wchar_t&rang;::not_eof(const int&)</STRONG> (Thumb, 28 bytes, Stack size 16 bytes, ios.o(i._ZNSt11char_traitsIwE7not_eofERKi))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = std::char_traits&lang;wchar_t&rang;::not_eof(const int&)
</UL>
<BR>[Calls]<UL><LI><a href="#[2e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::char_traits&lang;wchar_t&rang;::eq_int_type(const int&, const int&)
</UL>
<BR>[Called By]<UL><LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::basic_filebuf&lang;wchar_t, std::char_traits&lang;wchar_t&rang;&rang;::pbackfail(int)
<LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::basic_filebuf&lang;wchar_t, std::char_traits&lang;wchar_t&rang;&rang;::overflow(int)
</UL>

<P><STRONG><a name="[2a9]"></a>std::logic_error::logic_error(const char*)</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, rwthrowproc_impl.o(i._ZNSt11logic_errorC1EPKc))
<BR><BR>[Stack]<UL><LI>Max Depth = 232 + Unknown Stack Size
<LI>Call Chain = std::logic_error::logic_error(const char*) &rArr; std::__rw_exception::__rw_exception(const char*) &rArr; std::__rw_exception::_C_assign(const char*, unsigned) &rArr; __cxa_begin_catch &rArr; __ARM::get_foreign_intermediary(__cxa_exception*, _Unwind_Control_Block*) &rArr; __cxa_allocate_exception &rArr; __ARM::call_terminate_handler(_Unwind_Control_Block*) &rArr; std::terminate() &rArr; __cxa_get_globals &rArr; __ARM_exceptions_buffer_init &rArr; malloc &rArr; _malloc_internal &rArr; __Heap_Full &rArr; __Heap_ProvideMemory &rArr; _free_internal &rArr; _mutex_release
</UL>
<BR>[Calls]<UL><LI><a href="#[2e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__rw_exception::__rw_exception(const char*)
</UL>
<BR>[Called By]<UL><LI><a href="#[d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rw_throw_exception(int, char*)
<LI><a href="#[2ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::invalid_argument::invalid_argument(const char*)
<LI><a href="#[2b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::out_of_range::out_of_range(const char*)
<LI><a href="#[2b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::length_error::length_error(const char*)
<LI><a href="#[2ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::domain_error::domain_error(const char*)
</UL>

<P><STRONG><a name="[3fe]"></a>std::logic_error::logic_error__sub_object(const char*)</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, rwthrowproc_impl.o(i._ZNSt11logic_errorC1EPKc), UNUSED)

<P><STRONG><a name="[2ab]"></a>std::logic_error::logic_error(const std::logic_error&)</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, rwthrowproc_impl.o(i._ZNSt11logic_errorC1ERKS_))
<BR><BR>[Stack]<UL><LI>Max Depth = 232 + Unknown Stack Size
<LI>Call Chain = std::logic_error::logic_error(const std::logic_error&) &rArr; std::__rw_exception::__rw_exception(const std::__rw_exception&) &rArr; std::__rw_exception::_C_assign(const char*, unsigned) &rArr; __cxa_begin_catch &rArr; __ARM::get_foreign_intermediary(__cxa_exception*, _Unwind_Control_Block*) &rArr; __cxa_allocate_exception &rArr; __ARM::call_terminate_handler(_Unwind_Control_Block*) &rArr; std::terminate() &rArr; __cxa_get_globals &rArr; __ARM_exceptions_buffer_init &rArr; malloc &rArr; _malloc_internal &rArr; __Heap_Full &rArr; __Heap_ProvideMemory &rArr; _free_internal &rArr; _mutex_release
</UL>
<BR>[Calls]<UL><LI><a href="#[2e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__rw_exception::__rw_exception(const std::__rw_exception&)
</UL>
<BR>[Called By]<UL><LI><a href="#[d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rw_throw_exception(int, char*)
<LI><a href="#[2af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::invalid_argument::invalid_argument(const std::invalid_argument&)
<LI><a href="#[2b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::out_of_range::out_of_range(const std::out_of_range&)
<LI><a href="#[2b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::length_error::length_error(const std::length_error&)
<LI><a href="#[2ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::domain_error::domain_error(const std::domain_error&)
</UL>

<P><STRONG><a name="[3ff]"></a>std::logic_error::logic_error__sub_object(const std::logic_error&)</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, rwthrowproc_impl.o(i._ZNSt11logic_errorC1ERKS_), UNUSED)

<P><STRONG><a name="[6b]"></a>std::logic_error::~logic_error__deallocating()</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, rwthrowproc_impl.o(i._ZNSt11logic_errorD0Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = std::logic_error::~logic_error__deallocating() &rArr; std::logic_error::~logic_error() &rArr; std::__rw_exception::~__rw_exception() &rArr; operator delete[] (void*) &rArr; operator delete (void*) &rArr; free &rArr; _free_internal &rArr; _mutex_release
</UL>
<BR>[Calls]<UL><LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::logic_error::~logic_error()
<LI><a href="#[282]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;operator delete (void*)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> rwthrowproc_impl.o(.constdata__ZTVSt11logic_error)
</UL>
<P><STRONG><a name="[3e]"></a>std::logic_error::~logic_error()</STRONG> (Thumb, 8 bytes, Stack size 8 bytes, rwthrowproc_impl.o(i._ZNSt11logic_errorD1Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = std::logic_error::~logic_error() &rArr; std::__rw_exception::~__rw_exception() &rArr; operator delete[] (void*) &rArr; operator delete (void*) &rArr; free &rArr; _free_internal &rArr; _mutex_release
</UL>
<BR>[Calls]<UL><LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__rw_exception::~__rw_exception()
</UL>
<BR>[Called By]<UL><LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::invalid_argument::~invalid_argument()
<LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::out_of_range::~out_of_range()
<LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::length_error::~length_error()
<LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::domain_error::~domain_error()
<LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::logic_error::~logic_error__deallocating()
</UL>
<BR>[Address Reference Count : 2]<UL><LI> rwthrowproc_impl.o(i._ZN4__rw20__rw_throw_exceptionEiPc)
<LI> rwthrowproc_impl.o(.constdata__ZTVSt11logic_error)
</UL>
<P><STRONG><a name="[400]"></a>std::logic_error::~logic_error__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, rwthrowproc_impl.o(i._ZNSt11logic_errorD1Ev), UNUSED)

<P><STRONG><a name="[2b6]"></a>std::range_error::range_error(const char*)</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, rwthrowproc_impl.o(i._ZNSt11range_errorC1EPKc))
<BR><BR>[Stack]<UL><LI>Max Depth = 240 + Unknown Stack Size
<LI>Call Chain = std::range_error::range_error(const char*) &rArr; std::runtime_error::runtime_error(const char*) &rArr; std::__rw_exception::__rw_exception(const char*) &rArr; std::__rw_exception::_C_assign(const char*, unsigned) &rArr; __cxa_begin_catch &rArr; __ARM::get_foreign_intermediary(__cxa_exception*, _Unwind_Control_Block*) &rArr; __cxa_allocate_exception &rArr; __ARM::call_terminate_handler(_Unwind_Control_Block*) &rArr; std::terminate() &rArr; __cxa_get_globals &rArr; __ARM_exceptions_buffer_init &rArr; malloc &rArr; _malloc_internal &rArr; __Heap_Full &rArr; __Heap_ProvideMemory &rArr; _free_internal &rArr; _mutex_release
</UL>
<BR>[Calls]<UL><LI><a href="#[2b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::runtime_error::runtime_error(const char*)
</UL>
<BR>[Called By]<UL><LI><a href="#[d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rw_throw_exception(int, char*)
</UL>

<P><STRONG><a name="[401]"></a>std::range_error::range_error__sub_object(const char*)</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, rwthrowproc_impl.o(i._ZNSt11range_errorC1EPKc), UNUSED)

<P><STRONG><a name="[2b7]"></a>std::range_error::range_error(const std::range_error&)</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, rwthrowproc_impl.o(i._ZNSt11range_errorC1ERKS_))
<BR><BR>[Stack]<UL><LI>Max Depth = 240 + Unknown Stack Size
<LI>Call Chain = std::range_error::range_error(const std::range_error&) &rArr; std::runtime_error::runtime_error(const std::runtime_error&) &rArr; std::__rw_exception::__rw_exception(const std::__rw_exception&) &rArr; std::__rw_exception::_C_assign(const char*, unsigned) &rArr; __cxa_begin_catch &rArr; __ARM::get_foreign_intermediary(__cxa_exception*, _Unwind_Control_Block*) &rArr; __cxa_allocate_exception &rArr; __ARM::call_terminate_handler(_Unwind_Control_Block*) &rArr; std::terminate() &rArr; __cxa_get_globals &rArr; __ARM_exceptions_buffer_init &rArr; malloc &rArr; _malloc_internal &rArr; __Heap_Full &rArr; __Heap_ProvideMemory &rArr; _free_internal &rArr; _mutex_release
</UL>
<BR>[Calls]<UL><LI><a href="#[2b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::runtime_error::runtime_error(const std::runtime_error&)
</UL>
<BR>[Called By]<UL><LI><a href="#[d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rw_throw_exception(int, char*)
</UL>

<P><STRONG><a name="[402]"></a>std::range_error::range_error__sub_object(const std::range_error&)</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, rwthrowproc_impl.o(i._ZNSt11range_errorC1ERKS_), UNUSED)

<P><STRONG><a name="[6c]"></a>std::range_error::~range_error__deallocating()</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, rwthrowproc_impl.o(i._ZNSt11range_errorD0Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = std::range_error::~range_error__deallocating() &rArr; std::range_error::~range_error() &rArr; std::runtime_error::~runtime_error() &rArr; std::__rw_exception::~__rw_exception() &rArr; operator delete[] (void*) &rArr; operator delete (void*) &rArr; free &rArr; _free_internal &rArr; _mutex_release
</UL>
<BR>[Calls]<UL><LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::range_error::~range_error()
<LI><a href="#[282]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;operator delete (void*)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> rwthrowproc_impl.o(.constdata__ZTVSt11range_error)
</UL>
<P><STRONG><a name="[44]"></a>std::range_error::~range_error()</STRONG> (Thumb, 8 bytes, Stack size 8 bytes, rwthrowproc_impl.o(i._ZNSt11range_errorD1Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = std::range_error::~range_error() &rArr; std::runtime_error::~runtime_error() &rArr; std::__rw_exception::~__rw_exception() &rArr; operator delete[] (void*) &rArr; operator delete (void*) &rArr; free &rArr; _free_internal &rArr; _mutex_release
</UL>
<BR>[Calls]<UL><LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::runtime_error::~runtime_error()
</UL>
<BR>[Called By]<UL><LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::range_error::~range_error__deallocating()
</UL>
<BR>[Address Reference Count : 2]<UL><LI> rwthrowproc_impl.o(i._ZN4__rw20__rw_throw_exceptionEiPc)
<LI> rwthrowproc_impl.o(.constdata__ZTVSt11range_error)
</UL>
<P><STRONG><a name="[403]"></a>std::range_error::~range_error__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, rwthrowproc_impl.o(i._ZNSt11range_errorD1Ev), UNUSED)

<P><STRONG><a name="[2e5]"></a>std::ctype_byname&lang;char&rang;::_C_get_mask_table(const char*)</STRONG> (Thumb, 186 bytes, Stack size 24 bytes, char.o(i._ZNSt12ctype_bynameIcE17_C_get_mask_tableEPKc))
<BR><BR>[Stack]<UL><LI>Max Depth = 144<LI>Call Chain = std::ctype_byname&lang;char&rang;::_C_get_mask_table(const char*) &rArr; __rw::__rw_use_c_lib_locale::__rw_use_c_lib_locale(const char*, int) &rArr; operator new[] (unsigned) &rArr; operator new(unsigned) &rArr; malloc &rArr; _malloc_internal &rArr; __Heap_Full &rArr; __Heap_ProvideMemory &rArr; _free_internal &rArr; _mutex_release
</UL>
<BR>[Calls]<UL><LI><a href="#[2c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rw_use_c_lib_locale::__rw_use_c_lib_locale(const char*, int)
<LI><a href="#[2c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rw_use_c_lib_locale::~__rw_use_c_lib_locale()
<LI><a href="#[290]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;operator new[] (unsigned)
<LI><a href="#[131]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcmp
<LI><a href="#[1f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_ctype_table
</UL>
<BR>[Called By]<UL><LI><a href="#[2e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::ctype_byname&lang;char&rang;::ctype_byname(const char*, unsigned)
</UL>

<P><STRONG><a name="[2e6]"></a>std::ctype_byname&lang;char&rang;::ctype_byname(const char*, unsigned)</STRONG> (Thumb, 280 bytes, Stack size 32 bytes, char.o(i._ZNSt12ctype_bynameIcEC1EPKcj))
<BR><BR>[Stack]<UL><LI>Max Depth = 176<LI>Call Chain = std::ctype_byname&lang;char&rang;::ctype_byname(const char*, unsigned) &rArr; std::ctype_byname&lang;char&rang;::_C_get_mask_table(const char*) &rArr; __rw::__rw_use_c_lib_locale::__rw_use_c_lib_locale(const char*, int) &rArr; operator new[] (unsigned) &rArr; operator new(unsigned) &rArr; malloc &rArr; _malloc_internal &rArr; __Heap_Full &rArr; __Heap_ProvideMemory &rArr; _free_internal &rArr; _mutex_release
</UL>
<BR>[Calls]<UL><LI><a href="#[2c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rw_use_c_lib_locale::__rw_use_c_lib_locale(const char*, int)
<LI><a href="#[2e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::ctype_byname&lang;char&rang;::_C_get_mask_table(const char*)
<LI><a href="#[2d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::ctype&lang;char&rang;::is(std::ctype_base::mask, char) const
<LI><a href="#[2c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rw_use_c_lib_locale::~__rw_use_c_lib_locale()
<LI><a href="#[2e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::ctype&lang;char&rang;::ctype(const std::ctype_base::mask*, bool, unsigned)
</UL>
<BR>[Called By]<UL><LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rw_facet_maker&lang;std::ctype&lang;char&rang;&rang;::_C_maker_func(int, const char*, unsigned)
</UL>

<P><STRONG><a name="[404]"></a>std::ctype_byname&lang;char&rang;::ctype_byname__sub_object(const char*, unsigned)</STRONG> (Thumb, 0 bytes, Stack size 32 bytes, char.o(i._ZNSt12ctype_bynameIcEC1EPKcj), UNUSED)

<P><STRONG><a name="[6e]"></a>std::ctype_byname&lang;char&rang;::~ctype_byname__deallocating()</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, char.o(i._ZNSt12ctype_bynameIcED0Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = std::ctype_byname&lang;char&rang;::~ctype_byname__deallocating() &rArr; std::ctype&lang;char&rang;::~ctype() &rArr; operator delete[] (void*) &rArr; operator delete (void*) &rArr; free &rArr; _free_internal &rArr; _mutex_release
</UL>
<BR>[Calls]<UL><LI><a href="#[b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::ctype&lang;char&rang;::~ctype()
<LI><a href="#[282]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;operator delete (void*)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> char.o(.constdata__ZTVSt12ctype_bynameIcE)
</UL>
<P><STRONG><a name="[6d]"></a>std::ctype_byname&lang;char&rang;::~ctype_byname()</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, char.o(i._ZNSt12ctype_bynameIcED1Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = std::ctype_byname&lang;char&rang;::~ctype_byname() &rArr; std::ctype&lang;char&rang;::~ctype() &rArr; operator delete[] (void*) &rArr; operator delete (void*) &rArr; free &rArr; _free_internal &rArr; _mutex_release
</UL>
<BR>[Calls]<UL><LI><a href="#[b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::ctype&lang;char&rang;::~ctype()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> char.o(.constdata__ZTVSt12ctype_bynameIcE)
</UL>
<P><STRONG><a name="[405]"></a>std::ctype_byname&lang;char&rang;::~ctype_byname__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, char.o(i._ZNSt12ctype_bynameIcED1Ev), UNUSED)

<P><STRONG><a name="[2ac]"></a>std::domain_error::domain_error(const char*)</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, rwthrowproc_impl.o(i._ZNSt12domain_errorC1EPKc))
<BR><BR>[Stack]<UL><LI>Max Depth = 240 + Unknown Stack Size
<LI>Call Chain = std::domain_error::domain_error(const char*) &rArr; std::logic_error::logic_error(const char*) &rArr; std::__rw_exception::__rw_exception(const char*) &rArr; std::__rw_exception::_C_assign(const char*, unsigned) &rArr; __cxa_begin_catch &rArr; __ARM::get_foreign_intermediary(__cxa_exception*, _Unwind_Control_Block*) &rArr; __cxa_allocate_exception &rArr; __ARM::call_terminate_handler(_Unwind_Control_Block*) &rArr; std::terminate() &rArr; __cxa_get_globals &rArr; __ARM_exceptions_buffer_init &rArr; malloc &rArr; _malloc_internal &rArr; __Heap_Full &rArr; __Heap_ProvideMemory &rArr; _free_internal &rArr; _mutex_release
</UL>
<BR>[Calls]<UL><LI><a href="#[2a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::logic_error::logic_error(const char*)
</UL>
<BR>[Called By]<UL><LI><a href="#[d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rw_throw_exception(int, char*)
</UL>

<P><STRONG><a name="[406]"></a>std::domain_error::domain_error__sub_object(const char*)</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, rwthrowproc_impl.o(i._ZNSt12domain_errorC1EPKc), UNUSED)

<P><STRONG><a name="[2ad]"></a>std::domain_error::domain_error(const std::domain_error&)</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, rwthrowproc_impl.o(i._ZNSt12domain_errorC1ERKS_))
<BR><BR>[Stack]<UL><LI>Max Depth = 240 + Unknown Stack Size
<LI>Call Chain = std::domain_error::domain_error(const std::domain_error&) &rArr; std::logic_error::logic_error(const std::logic_error&) &rArr; std::__rw_exception::__rw_exception(const std::__rw_exception&) &rArr; std::__rw_exception::_C_assign(const char*, unsigned) &rArr; __cxa_begin_catch &rArr; __ARM::get_foreign_intermediary(__cxa_exception*, _Unwind_Control_Block*) &rArr; __cxa_allocate_exception &rArr; __ARM::call_terminate_handler(_Unwind_Control_Block*) &rArr; std::terminate() &rArr; __cxa_get_globals &rArr; __ARM_exceptions_buffer_init &rArr; malloc &rArr; _malloc_internal &rArr; __Heap_Full &rArr; __Heap_ProvideMemory &rArr; _free_internal &rArr; _mutex_release
</UL>
<BR>[Calls]<UL><LI><a href="#[2ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::logic_error::logic_error(const std::logic_error&)
</UL>
<BR>[Called By]<UL><LI><a href="#[d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rw_throw_exception(int, char*)
</UL>

<P><STRONG><a name="[407]"></a>std::domain_error::domain_error__sub_object(const std::domain_error&)</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, rwthrowproc_impl.o(i._ZNSt12domain_errorC1ERKS_), UNUSED)

<P><STRONG><a name="[75]"></a>std::domain_error::~domain_error__deallocating()</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, rwthrowproc_impl.o(i._ZNSt12domain_errorD0Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = std::domain_error::~domain_error__deallocating() &rArr; std::domain_error::~domain_error() &rArr; std::logic_error::~logic_error() &rArr; std::__rw_exception::~__rw_exception() &rArr; operator delete[] (void*) &rArr; operator delete (void*) &rArr; free &rArr; _free_internal &rArr; _mutex_release
</UL>
<BR>[Calls]<UL><LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::domain_error::~domain_error()
<LI><a href="#[282]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;operator delete (void*)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> rwthrowproc_impl.o(.constdata__ZTVSt12domain_error)
</UL>
<P><STRONG><a name="[3f]"></a>std::domain_error::~domain_error()</STRONG> (Thumb, 8 bytes, Stack size 8 bytes, rwthrowproc_impl.o(i._ZNSt12domain_errorD1Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = std::domain_error::~domain_error() &rArr; std::logic_error::~logic_error() &rArr; std::__rw_exception::~__rw_exception() &rArr; operator delete[] (void*) &rArr; operator delete (void*) &rArr; free &rArr; _free_internal &rArr; _mutex_release
</UL>
<BR>[Calls]<UL><LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::logic_error::~logic_error()
</UL>
<BR>[Called By]<UL><LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::domain_error::~domain_error__deallocating()
</UL>
<BR>[Address Reference Count : 2]<UL><LI> rwthrowproc_impl.o(i._ZN4__rw20__rw_throw_exceptionEiPc)
<LI> rwthrowproc_impl.o(.constdata__ZTVSt12domain_error)
</UL>
<P><STRONG><a name="[408]"></a>std::domain_error::~domain_error__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, rwthrowproc_impl.o(i._ZNSt12domain_errorD1Ev), UNUSED)

<P><STRONG><a name="[2b0]"></a>std::length_error::length_error(const char*)</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, rwthrowproc_impl.o(i._ZNSt12length_errorC1EPKc))
<BR><BR>[Stack]<UL><LI>Max Depth = 240 + Unknown Stack Size
<LI>Call Chain = std::length_error::length_error(const char*) &rArr; std::logic_error::logic_error(const char*) &rArr; std::__rw_exception::__rw_exception(const char*) &rArr; std::__rw_exception::_C_assign(const char*, unsigned) &rArr; __cxa_begin_catch &rArr; __ARM::get_foreign_intermediary(__cxa_exception*, _Unwind_Control_Block*) &rArr; __cxa_allocate_exception &rArr; __ARM::call_terminate_handler(_Unwind_Control_Block*) &rArr; std::terminate() &rArr; __cxa_get_globals &rArr; __ARM_exceptions_buffer_init &rArr; malloc &rArr; _malloc_internal &rArr; __Heap_Full &rArr; __Heap_ProvideMemory &rArr; _free_internal &rArr; _mutex_release
</UL>
<BR>[Calls]<UL><LI><a href="#[2a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::logic_error::logic_error(const char*)
</UL>
<BR>[Called By]<UL><LI><a href="#[d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rw_throw_exception(int, char*)
</UL>

<P><STRONG><a name="[409]"></a>std::length_error::length_error__sub_object(const char*)</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, rwthrowproc_impl.o(i._ZNSt12length_errorC1EPKc), UNUSED)

<P><STRONG><a name="[2b1]"></a>std::length_error::length_error(const std::length_error&)</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, rwthrowproc_impl.o(i._ZNSt12length_errorC1ERKS_))
<BR><BR>[Stack]<UL><LI>Max Depth = 240 + Unknown Stack Size
<LI>Call Chain = std::length_error::length_error(const std::length_error&) &rArr; std::logic_error::logic_error(const std::logic_error&) &rArr; std::__rw_exception::__rw_exception(const std::__rw_exception&) &rArr; std::__rw_exception::_C_assign(const char*, unsigned) &rArr; __cxa_begin_catch &rArr; __ARM::get_foreign_intermediary(__cxa_exception*, _Unwind_Control_Block*) &rArr; __cxa_allocate_exception &rArr; __ARM::call_terminate_handler(_Unwind_Control_Block*) &rArr; std::terminate() &rArr; __cxa_get_globals &rArr; __ARM_exceptions_buffer_init &rArr; malloc &rArr; _malloc_internal &rArr; __Heap_Full &rArr; __Heap_ProvideMemory &rArr; _free_internal &rArr; _mutex_release
</UL>
<BR>[Calls]<UL><LI><a href="#[2ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::logic_error::logic_error(const std::logic_error&)
</UL>
<BR>[Called By]<UL><LI><a href="#[d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rw_throw_exception(int, char*)
</UL>

<P><STRONG><a name="[40a]"></a>std::length_error::length_error__sub_object(const std::length_error&)</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, rwthrowproc_impl.o(i._ZNSt12length_errorC1ERKS_), UNUSED)

<P><STRONG><a name="[76]"></a>std::length_error::~length_error__deallocating()</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, rwthrowproc_impl.o(i._ZNSt12length_errorD0Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = std::length_error::~length_error__deallocating() &rArr; std::length_error::~length_error() &rArr; std::logic_error::~logic_error() &rArr; std::__rw_exception::~__rw_exception() &rArr; operator delete[] (void*) &rArr; operator delete (void*) &rArr; free &rArr; _free_internal &rArr; _mutex_release
</UL>
<BR>[Calls]<UL><LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::length_error::~length_error()
<LI><a href="#[282]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;operator delete (void*)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> rwthrowproc_impl.o(.constdata__ZTVSt12length_error)
</UL>
<P><STRONG><a name="[41]"></a>std::length_error::~length_error()</STRONG> (Thumb, 8 bytes, Stack size 8 bytes, rwthrowproc_impl.o(i._ZNSt12length_errorD1Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = std::length_error::~length_error() &rArr; std::logic_error::~logic_error() &rArr; std::__rw_exception::~__rw_exception() &rArr; operator delete[] (void*) &rArr; operator delete (void*) &rArr; free &rArr; _free_internal &rArr; _mutex_release
</UL>
<BR>[Calls]<UL><LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::logic_error::~logic_error()
</UL>
<BR>[Called By]<UL><LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::length_error::~length_error__deallocating()
</UL>
<BR>[Address Reference Count : 2]<UL><LI> rwthrowproc_impl.o(i._ZN4__rw20__rw_throw_exceptionEiPc)
<LI> rwthrowproc_impl.o(.constdata__ZTVSt12length_error)
</UL>
<P><STRONG><a name="[40b]"></a>std::length_error::~length_error__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, rwthrowproc_impl.o(i._ZNSt12length_errorD1Ev), UNUSED)

<P><STRONG><a name="[2b2]"></a>std::out_of_range::out_of_range(const char*)</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, rwthrowproc_impl.o(i._ZNSt12out_of_rangeC1EPKc))
<BR><BR>[Stack]<UL><LI>Max Depth = 240 + Unknown Stack Size
<LI>Call Chain = std::out_of_range::out_of_range(const char*) &rArr; std::logic_error::logic_error(const char*) &rArr; std::__rw_exception::__rw_exception(const char*) &rArr; std::__rw_exception::_C_assign(const char*, unsigned) &rArr; __cxa_begin_catch &rArr; __ARM::get_foreign_intermediary(__cxa_exception*, _Unwind_Control_Block*) &rArr; __cxa_allocate_exception &rArr; __ARM::call_terminate_handler(_Unwind_Control_Block*) &rArr; std::terminate() &rArr; __cxa_get_globals &rArr; __ARM_exceptions_buffer_init &rArr; malloc &rArr; _malloc_internal &rArr; __Heap_Full &rArr; __Heap_ProvideMemory &rArr; _free_internal &rArr; _mutex_release
</UL>
<BR>[Calls]<UL><LI><a href="#[2a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::logic_error::logic_error(const char*)
</UL>
<BR>[Called By]<UL><LI><a href="#[d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rw_throw_exception(int, char*)
</UL>

<P><STRONG><a name="[40c]"></a>std::out_of_range::out_of_range__sub_object(const char*)</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, rwthrowproc_impl.o(i._ZNSt12out_of_rangeC1EPKc), UNUSED)

<P><STRONG><a name="[2b3]"></a>std::out_of_range::out_of_range(const std::out_of_range&)</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, rwthrowproc_impl.o(i._ZNSt12out_of_rangeC1ERKS_))
<BR><BR>[Stack]<UL><LI>Max Depth = 240 + Unknown Stack Size
<LI>Call Chain = std::out_of_range::out_of_range(const std::out_of_range&) &rArr; std::logic_error::logic_error(const std::logic_error&) &rArr; std::__rw_exception::__rw_exception(const std::__rw_exception&) &rArr; std::__rw_exception::_C_assign(const char*, unsigned) &rArr; __cxa_begin_catch &rArr; __ARM::get_foreign_intermediary(__cxa_exception*, _Unwind_Control_Block*) &rArr; __cxa_allocate_exception &rArr; __ARM::call_terminate_handler(_Unwind_Control_Block*) &rArr; std::terminate() &rArr; __cxa_get_globals &rArr; __ARM_exceptions_buffer_init &rArr; malloc &rArr; _malloc_internal &rArr; __Heap_Full &rArr; __Heap_ProvideMemory &rArr; _free_internal &rArr; _mutex_release
</UL>
<BR>[Calls]<UL><LI><a href="#[2ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::logic_error::logic_error(const std::logic_error&)
</UL>
<BR>[Called By]<UL><LI><a href="#[d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rw_throw_exception(int, char*)
</UL>

<P><STRONG><a name="[40d]"></a>std::out_of_range::out_of_range__sub_object(const std::out_of_range&)</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, rwthrowproc_impl.o(i._ZNSt12out_of_rangeC1ERKS_), UNUSED)

<P><STRONG><a name="[77]"></a>std::out_of_range::~out_of_range__deallocating()</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, rwthrowproc_impl.o(i._ZNSt12out_of_rangeD0Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = std::out_of_range::~out_of_range__deallocating() &rArr; std::out_of_range::~out_of_range() &rArr; std::logic_error::~logic_error() &rArr; std::__rw_exception::~__rw_exception() &rArr; operator delete[] (void*) &rArr; operator delete (void*) &rArr; free &rArr; _free_internal &rArr; _mutex_release
</UL>
<BR>[Calls]<UL><LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::out_of_range::~out_of_range()
<LI><a href="#[282]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;operator delete (void*)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> rwthrowproc_impl.o(.constdata__ZTVSt12out_of_range)
</UL>
<P><STRONG><a name="[42]"></a>std::out_of_range::~out_of_range()</STRONG> (Thumb, 8 bytes, Stack size 8 bytes, rwthrowproc_impl.o(i._ZNSt12out_of_rangeD1Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = std::out_of_range::~out_of_range() &rArr; std::logic_error::~logic_error() &rArr; std::__rw_exception::~__rw_exception() &rArr; operator delete[] (void*) &rArr; operator delete (void*) &rArr; free &rArr; _free_internal &rArr; _mutex_release
</UL>
<BR>[Calls]<UL><LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::logic_error::~logic_error()
</UL>
<BR>[Called By]<UL><LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::out_of_range::~out_of_range__deallocating()
</UL>
<BR>[Address Reference Count : 2]<UL><LI> rwthrowproc_impl.o(i._ZN4__rw20__rw_throw_exceptionEiPc)
<LI> rwthrowproc_impl.o(.constdata__ZTVSt12out_of_range)
</UL>
<P><STRONG><a name="[40e]"></a>std::out_of_range::~out_of_range__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, rwthrowproc_impl.o(i._ZNSt12out_of_rangeD1Ev), UNUSED)

<P><STRONG><a name="[22d]"></a>std::bad_exception::bad_exception(const std::bad_exception&)</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, bad_exception_cctor.o(i._ZNSt13bad_exceptionC1ERKS_))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = std::bad_exception::bad_exception(const std::bad_exception&)
</UL>
<BR>[Calls]<UL><LI><a href="#[2a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::exception::exception(const std::exception&)
</UL>
<BR>[Called By]<UL><LI><a href="#[32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxa_call_unexpected
<LI><a href="#[d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rw_throw_exception(int, char*)
</UL>

<P><STRONG><a name="[40f]"></a>std::bad_exception::bad_exception__sub_object(const std::bad_exception&)</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, bad_exception_cctor.o(i._ZNSt13bad_exceptionC1ERKS_), UNUSED)

<P><STRONG><a name="[22c]"></a>std::bad_exception::bad_exception()</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, bad_exception_ctor.o(i._ZNSt13bad_exceptionC1Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = std::bad_exception::bad_exception()
</UL>
<BR>[Calls]<UL><LI><a href="#[2a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::exception::exception()
</UL>
<BR>[Called By]<UL><LI><a href="#[32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxa_call_unexpected
<LI><a href="#[d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rw_throw_exception(int, char*)
</UL>

<P><STRONG><a name="[410]"></a>std::bad_exception::bad_exception__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, bad_exception_ctor.o(i._ZNSt13bad_exceptionC1Ev), UNUSED)

<P><STRONG><a name="[78]"></a>std::bad_exception::~bad_exception__deallocating()</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, bad_exception_dtor.o(i._ZNSt13bad_exceptionD0Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = std::bad_exception::~bad_exception__deallocating() &rArr; operator delete (void*) &rArr; free &rArr; _free_internal &rArr; _mutex_release
</UL>
<BR>[Calls]<UL><LI><a href="#[34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::bad_exception::~bad_exception()
<LI><a href="#[282]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;operator delete (void*)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> bad_exception_dtor.o(.constdata__ZTVSt13bad_exception)
</UL>
<P><STRONG><a name="[34]"></a>std::bad_exception::~bad_exception()</STRONG> (Thumb, 8 bytes, Stack size 8 bytes, bad_exception_dtor.o(i._ZNSt13bad_exceptionD1Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = std::bad_exception::~bad_exception()
</UL>
<BR>[Called By]<UL><LI><a href="#[32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxa_call_unexpected
<LI><a href="#[d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rw_throw_exception(int, char*)
<LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::bad_exception::~bad_exception__deallocating()
</UL>
<BR>[Address Reference Count : 3]<UL><LI> arm_exceptions_callunex.o(.text)
<LI> bad_exception_dtor.o(.constdata__ZTVSt13bad_exception)
<LI> rwthrowproc_impl.o(i._ZN4__rw20__rw_throw_exceptionEiPc)
</UL>
<P><STRONG><a name="[411]"></a>std::bad_exception::~bad_exception__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, bad_exception_dtor.o(i._ZNSt13bad_exceptionD1Ev), UNUSED)

<P><STRONG><a name="[93]"></a>std::basic_istream&lang;wchar_t, std::char_traits&lang;wchar_t&rang;&rang;::~basic_istream__deallocating()</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, ios.o(i._ZNSt13basic_istreamIwSt11char_traitsIwEED0Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 904 + Unknown Stack Size
<LI>Call Chain = std::basic_istream&lang;wchar_t, std::char_traits&lang;wchar_t&rang;&rang;::~basic_istream__deallocating() &rArr; std::basic_istream&lang;wchar_t, std::char_traits&lang;wchar_t&rang;&rang;::~basic_istream() &rArr; std::basic_ios&lang;wchar_t, std::char_traits&lang;wchar_t&rang;&rang;::~basic_ios() &rArr; std::ios_base::~ios_base() &rArr; std::ios_base::_C_fire_event(std::ios_base::event, bool) &rArr; std::ios_base::_C_unsafe_clear(int, int) &rArr; __rw::__rw_throw(int, ...) &rArr; std::__rw_exception::_C_vformat(int, std::__va_list) &rArr; __rw::__rw_vfmatstr(char*, unsigned, int, std::__va_list) &rArr; std::locale::locale() &rArr; std::locale::_C_init() &rArr; __rw::__rw_locale_imp::__rw_locale_imp(const char*, unsigned, unsigned) &rArr; __aeabi_vec_new_cookie &rArr; __cxa_vec_new &rArr; __ARM_array_new_general &rArr; __cxa_rethrow &rArr; _Unwind_RaiseException &rArr; __ARM_Unwind_RaiseException &rArr; malloc &rArr; _malloc_internal &rArr; __Heap_Full &rArr; __Heap_ProvideMemory &rArr; _free_internal &rArr; _mutex_release
</UL>
<BR>[Calls]<UL><LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::basic_istream&lang;wchar_t, std::char_traits&lang;wchar_t&rang;&rang;::~basic_istream()
<LI><a href="#[282]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;operator delete (void*)
</UL>
<BR>[Called By]<UL><LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;thunk{v:0,-12} to std::basic_istream&lang;wchar_t, std::char_traits&lang;wchar_t&rang;&rang;::~basic_istream__deallocating()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> ios.o(.constdata__ZTVSt13basic_istreamIwSt11char_traitsIwEE)
</UL>
<P><STRONG><a name="[92]"></a>std::basic_istream&lang;wchar_t, std::char_traits&lang;wchar_t&rang;&rang;::~basic_istream()</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, ios.o(i._ZNSt13basic_istreamIwSt11char_traitsIwEED1Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 896 + Unknown Stack Size
<LI>Call Chain = std::basic_istream&lang;wchar_t, std::char_traits&lang;wchar_t&rang;&rang;::~basic_istream() &rArr; std::basic_ios&lang;wchar_t, std::char_traits&lang;wchar_t&rang;&rang;::~basic_ios() &rArr; std::ios_base::~ios_base() &rArr; std::ios_base::_C_fire_event(std::ios_base::event, bool) &rArr; std::ios_base::_C_unsafe_clear(int, int) &rArr; __rw::__rw_throw(int, ...) &rArr; std::__rw_exception::_C_vformat(int, std::__va_list) &rArr; __rw::__rw_vfmatstr(char*, unsigned, int, std::__va_list) &rArr; std::locale::locale() &rArr; std::locale::_C_init() &rArr; __rw::__rw_locale_imp::__rw_locale_imp(const char*, unsigned, unsigned) &rArr; __aeabi_vec_new_cookie &rArr; __cxa_vec_new &rArr; __ARM_array_new_general &rArr; __cxa_rethrow &rArr; _Unwind_RaiseException &rArr; __ARM_Unwind_RaiseException &rArr; malloc &rArr; _malloc_internal &rArr; __Heap_Full &rArr; __Heap_ProvideMemory &rArr; _free_internal &rArr; _mutex_release
</UL>
<BR>[Calls]<UL><LI><a href="#[d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::basic_ios&lang;wchar_t, std::char_traits&lang;wchar_t&rang;&rang;::~basic_ios()
</UL>
<BR>[Called By]<UL><LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;thunk{v:0,-12} to std::basic_istream&lang;wchar_t, std::char_traits&lang;wchar_t&rang;&rang;::~basic_istream()
<LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::basic_istream&lang;wchar_t, std::char_traits&lang;wchar_t&rang;&rang;::~basic_istream__deallocating()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> ios.o(.constdata__ZTVSt13basic_istreamIwSt11char_traitsIwEE)
</UL>
<P><STRONG><a name="[97]"></a>std::basic_ostream&lang;wchar_t, std::char_traits&lang;wchar_t&rang;&rang;::~basic_ostream__deallocating()</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, ios.o(i._ZNSt13basic_ostreamIwSt11char_traitsIwEED0Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 904 + Unknown Stack Size
<LI>Call Chain = std::basic_ostream&lang;wchar_t, std::char_traits&lang;wchar_t&rang;&rang;::~basic_ostream__deallocating() &rArr; std::basic_ostream&lang;wchar_t, std::char_traits&lang;wchar_t&rang;&rang;::~basic_ostream() &rArr; std::basic_ios&lang;wchar_t, std::char_traits&lang;wchar_t&rang;&rang;::~basic_ios() &rArr; std::ios_base::~ios_base() &rArr; std::ios_base::_C_fire_event(std::ios_base::event, bool) &rArr; std::ios_base::_C_unsafe_clear(int, int) &rArr; __rw::__rw_throw(int, ...) &rArr; std::__rw_exception::_C_vformat(int, std::__va_list) &rArr; __rw::__rw_vfmatstr(char*, unsigned, int, std::__va_list) &rArr; std::locale::locale() &rArr; std::locale::_C_init() &rArr; __rw::__rw_locale_imp::__rw_locale_imp(const char*, unsigned, unsigned) &rArr; __aeabi_vec_new_cookie &rArr; __cxa_vec_new &rArr; __ARM_array_new_general &rArr; __cxa_rethrow &rArr; _Unwind_RaiseException &rArr; __ARM_Unwind_RaiseException &rArr; malloc &rArr; _malloc_internal &rArr; __Heap_Full &rArr; __Heap_ProvideMemory &rArr; _free_internal &rArr; _mutex_release
</UL>
<BR>[Calls]<UL><LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::basic_ostream&lang;wchar_t, std::char_traits&lang;wchar_t&rang;&rang;::~basic_ostream()
<LI><a href="#[282]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;operator delete (void*)
</UL>
<BR>[Called By]<UL><LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;thunk{v:0,-12} to std::basic_ostream&lang;wchar_t, std::char_traits&lang;wchar_t&rang;&rang;::~basic_ostream__deallocating()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> ios.o(.constdata__ZTVSt13basic_ostreamIwSt11char_traitsIwEE)
</UL>
<P><STRONG><a name="[96]"></a>std::basic_ostream&lang;wchar_t, std::char_traits&lang;wchar_t&rang;&rang;::~basic_ostream()</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, ios.o(i._ZNSt13basic_ostreamIwSt11char_traitsIwEED1Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 896 + Unknown Stack Size
<LI>Call Chain = std::basic_ostream&lang;wchar_t, std::char_traits&lang;wchar_t&rang;&rang;::~basic_ostream() &rArr; std::basic_ios&lang;wchar_t, std::char_traits&lang;wchar_t&rang;&rang;::~basic_ios() &rArr; std::ios_base::~ios_base() &rArr; std::ios_base::_C_fire_event(std::ios_base::event, bool) &rArr; std::ios_base::_C_unsafe_clear(int, int) &rArr; __rw::__rw_throw(int, ...) &rArr; std::__rw_exception::_C_vformat(int, std::__va_list) &rArr; __rw::__rw_vfmatstr(char*, unsigned, int, std::__va_list) &rArr; std::locale::locale() &rArr; std::locale::_C_init() &rArr; __rw::__rw_locale_imp::__rw_locale_imp(const char*, unsigned, unsigned) &rArr; __aeabi_vec_new_cookie &rArr; __cxa_vec_new &rArr; __ARM_array_new_general &rArr; __cxa_rethrow &rArr; _Unwind_RaiseException &rArr; __ARM_Unwind_RaiseException &rArr; malloc &rArr; _malloc_internal &rArr; __Heap_Full &rArr; __Heap_ProvideMemory &rArr; _free_internal &rArr; _mutex_release
</UL>
<BR>[Calls]<UL><LI><a href="#[d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::basic_ios&lang;wchar_t, std::char_traits&lang;wchar_t&rang;&rang;::~basic_ios()
</UL>
<BR>[Called By]<UL><LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;thunk{v:0,-12} to std::basic_ostream&lang;wchar_t, std::char_traits&lang;wchar_t&rang;&rang;::~basic_ostream()
<LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::basic_ostream&lang;wchar_t, std::char_traits&lang;wchar_t&rang;&rang;::~basic_ostream__deallocating()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> ios.o(.constdata__ZTVSt13basic_ostreamIwSt11char_traitsIwEE)
</UL>
<P><STRONG><a name="[2b4]"></a>std::runtime_error::runtime_error(const char*)</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, rwthrowproc_impl.o(i._ZNSt13runtime_errorC1EPKc))
<BR><BR>[Stack]<UL><LI>Max Depth = 232 + Unknown Stack Size
<LI>Call Chain = std::runtime_error::runtime_error(const char*) &rArr; std::__rw_exception::__rw_exception(const char*) &rArr; std::__rw_exception::_C_assign(const char*, unsigned) &rArr; __cxa_begin_catch &rArr; __ARM::get_foreign_intermediary(__cxa_exception*, _Unwind_Control_Block*) &rArr; __cxa_allocate_exception &rArr; __ARM::call_terminate_handler(_Unwind_Control_Block*) &rArr; std::terminate() &rArr; __cxa_get_globals &rArr; __ARM_exceptions_buffer_init &rArr; malloc &rArr; _malloc_internal &rArr; __Heap_Full &rArr; __Heap_ProvideMemory &rArr; _free_internal &rArr; _mutex_release
</UL>
<BR>[Calls]<UL><LI><a href="#[2e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__rw_exception::__rw_exception(const char*)
</UL>
<BR>[Called By]<UL><LI><a href="#[d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rw_throw_exception(int, char*)
<LI><a href="#[2ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::underflow_error::underflow_error(const char*)
<LI><a href="#[2b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::overflow_error::overflow_error(const char*)
<LI><a href="#[2b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::range_error::range_error(const char*)
</UL>

<P><STRONG><a name="[412]"></a>std::runtime_error::runtime_error__sub_object(const char*)</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, rwthrowproc_impl.o(i._ZNSt13runtime_errorC1EPKc), UNUSED)

<P><STRONG><a name="[2b5]"></a>std::runtime_error::runtime_error(const std::runtime_error&)</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, rwthrowproc_impl.o(i._ZNSt13runtime_errorC1ERKS_))
<BR><BR>[Stack]<UL><LI>Max Depth = 232 + Unknown Stack Size
<LI>Call Chain = std::runtime_error::runtime_error(const std::runtime_error&) &rArr; std::__rw_exception::__rw_exception(const std::__rw_exception&) &rArr; std::__rw_exception::_C_assign(const char*, unsigned) &rArr; __cxa_begin_catch &rArr; __ARM::get_foreign_intermediary(__cxa_exception*, _Unwind_Control_Block*) &rArr; __cxa_allocate_exception &rArr; __ARM::call_terminate_handler(_Unwind_Control_Block*) &rArr; std::terminate() &rArr; __cxa_get_globals &rArr; __ARM_exceptions_buffer_init &rArr; malloc &rArr; _malloc_internal &rArr; __Heap_Full &rArr; __Heap_ProvideMemory &rArr; _free_internal &rArr; _mutex_release
</UL>
<BR>[Calls]<UL><LI><a href="#[2e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__rw_exception::__rw_exception(const std::__rw_exception&)
</UL>
<BR>[Called By]<UL><LI><a href="#[d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rw_throw_exception(int, char*)
<LI><a href="#[2bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::underflow_error::underflow_error(const std::underflow_error&)
<LI><a href="#[2b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::overflow_error::overflow_error(const std::overflow_error&)
<LI><a href="#[2b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::range_error::range_error(const std::range_error&)
</UL>

<P><STRONG><a name="[413]"></a>std::runtime_error::runtime_error__sub_object(const std::runtime_error&)</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, rwthrowproc_impl.o(i._ZNSt13runtime_errorC1ERKS_), UNUSED)

<P><STRONG><a name="[9a]"></a>std::runtime_error::~runtime_error__deallocating()</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, rwthrowproc_impl.o(i._ZNSt13runtime_errorD0Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = std::runtime_error::~runtime_error__deallocating() &rArr; std::runtime_error::~runtime_error() &rArr; std::__rw_exception::~__rw_exception() &rArr; operator delete[] (void*) &rArr; operator delete (void*) &rArr; free &rArr; _free_internal &rArr; _mutex_release
</UL>
<BR>[Calls]<UL><LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::runtime_error::~runtime_error()
<LI><a href="#[282]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;operator delete (void*)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> rwthrowproc_impl.o(.constdata__ZTVSt13runtime_error)
</UL>
<P><STRONG><a name="[43]"></a>std::runtime_error::~runtime_error()</STRONG> (Thumb, 8 bytes, Stack size 8 bytes, rwthrowproc_impl.o(i._ZNSt13runtime_errorD1Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = std::runtime_error::~runtime_error() &rArr; std::__rw_exception::~__rw_exception() &rArr; operator delete[] (void*) &rArr; operator delete (void*) &rArr; free &rArr; _free_internal &rArr; _mutex_release
</UL>
<BR>[Calls]<UL><LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__rw_exception::~__rw_exception()
</UL>
<BR>[Called By]<UL><LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::underflow_error::~underflow_error()
<LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::overflow_error::~overflow_error()
<LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::runtime_error::~runtime_error__deallocating()
<LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::range_error::~range_error()
</UL>
<BR>[Address Reference Count : 2]<UL><LI> rwthrowproc_impl.o(i._ZN4__rw20__rw_throw_exceptionEiPc)
<LI> rwthrowproc_impl.o(.constdata__ZTVSt13runtime_error)
</UL>
<P><STRONG><a name="[414]"></a>std::runtime_error::~runtime_error__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, rwthrowproc_impl.o(i._ZNSt13runtime_errorD1Ev), UNUSED)

<P><STRONG><a name="[2e8]"></a>std::__rw_exception::_C_vformat(const char*, std::__va_list)</STRONG> (Thumb, 94 bytes, Stack size 32 bytes, rwstdexcept.o(i._ZNSt14__rw_exception10_C_vformatEPKcSt9__va_list), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[290]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;operator new[] (unsigned)
<LI><a href="#[2e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcat
<LI><a href="#[2c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcpy
<LI><a href="#[21b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[147]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxa_end_catch
<LI><a href="#[145]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxa_begin_catch
<LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;operator delete[] (void*)
<LI><a href="#[28f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rw_vfmatstr(char*, unsigned, const char*, std::__va_list)
</UL>

<P><STRONG><a name="[287]"></a>std::__rw_exception::_C_vformat(int, std::__va_list)</STRONG> (Thumb, 128 bytes, Stack size 32 bytes, rwstdexcept.o(i._ZNSt14__rw_exception10_C_vformatEiSt9__va_list))
<BR><BR>[Stack]<UL><LI>Max Depth = 744 + Unknown Stack Size
<LI>Call Chain = std::__rw_exception::_C_vformat(int, std::__va_list) &rArr; __rw::__rw_vfmatstr(char*, unsigned, int, std::__va_list) &rArr; std::locale::locale() &rArr; std::locale::_C_init() &rArr; __rw::__rw_locale_imp::__rw_locale_imp(const char*, unsigned, unsigned) &rArr; __aeabi_vec_new_cookie &rArr; __cxa_vec_new &rArr; __ARM_array_new_general &rArr; __cxa_rethrow &rArr; _Unwind_RaiseException &rArr; __ARM_Unwind_RaiseException &rArr; malloc &rArr; _malloc_internal &rArr; __Heap_Full &rArr; __Heap_ProvideMemory &rArr; _free_internal &rArr; _mutex_release
</UL>
<BR>[Calls]<UL><LI><a href="#[290]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;operator new[] (unsigned)
<LI><a href="#[2e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcat
<LI><a href="#[2c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcpy
<LI><a href="#[21b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[147]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxa_end_catch
<LI><a href="#[145]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxa_begin_catch
<LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;operator delete[] (void*)
<LI><a href="#[291]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rw_vfmatstr(char*, unsigned, int, std::__va_list)
<LI><a href="#[28f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rw_vfmatstr(char*, unsigned, const char*, std::__va_list)
</UL>
<BR>[Called By]<UL><LI><a href="#[284]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rw_throw(int, ...)
</UL>

<P><STRONG><a name="[2aa]"></a>std::__rw_exception::_C_assign(const char*, unsigned)</STRONG> (Thumb, 74 bytes, Stack size 32 bytes, rwstdexcept.o(i._ZNSt14__rw_exception9_C_assignEPKcj))
<BR><BR>[Stack]<UL><LI>Max Depth = 208 + Unknown Stack Size
<LI>Call Chain = std::__rw_exception::_C_assign(const char*, unsigned) &rArr; __cxa_begin_catch &rArr; __ARM::get_foreign_intermediary(__cxa_exception*, _Unwind_Control_Block*) &rArr; __cxa_allocate_exception &rArr; __ARM::call_terminate_handler(_Unwind_Control_Block*) &rArr; std::terminate() &rArr; __cxa_get_globals &rArr; __ARM_exceptions_buffer_init &rArr; malloc &rArr; _malloc_internal &rArr; __Heap_Full &rArr; __Heap_ProvideMemory &rArr; _free_internal &rArr; _mutex_release
</UL>
<BR>[Calls]<UL><LI><a href="#[290]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;operator new[] (unsigned)
<LI><a href="#[2c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcpy
<LI><a href="#[21b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[147]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxa_end_catch
<LI><a href="#[145]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxa_begin_catch
<LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;operator delete[] (void*)
</UL>
<BR>[Called By]<UL><LI><a href="#[d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rw_throw_exception(int, char*)
<LI><a href="#[2e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__rw_exception::__rw_exception(const std::__rw_exception&)
<LI><a href="#[2e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__rw_exception::__rw_exception(const char*)
<LI><a href="#[2ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__rw_exception::__rw_exception(const std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;&)
</UL>

<P><STRONG><a name="[2e3]"></a>std::__rw_exception::__rw_exception(const char*)</STRONG> (Thumb, 32 bytes, Stack size 16 bytes, rwthrowproc_impl.o(i._ZNSt14__rw_exceptionC1EPKc))
<BR><BR>[Stack]<UL><LI>Max Depth = 224 + Unknown Stack Size
<LI>Call Chain = std::__rw_exception::__rw_exception(const char*) &rArr; std::__rw_exception::_C_assign(const char*, unsigned) &rArr; __cxa_begin_catch &rArr; __ARM::get_foreign_intermediary(__cxa_exception*, _Unwind_Control_Block*) &rArr; __cxa_allocate_exception &rArr; __ARM::call_terminate_handler(_Unwind_Control_Block*) &rArr; std::terminate() &rArr; __cxa_get_globals &rArr; __ARM_exceptions_buffer_init &rArr; malloc &rArr; _malloc_internal &rArr; __Heap_Full &rArr; __Heap_ProvideMemory &rArr; _free_internal &rArr; _mutex_release
</UL>
<BR>[Calls]<UL><LI><a href="#[2a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::exception::exception()
<LI><a href="#[2aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__rw_exception::_C_assign(const char*, unsigned)
</UL>
<BR>[Called By]<UL><LI><a href="#[2bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::ios_base::failure::failure(const char*)
<LI><a href="#[2b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::runtime_error::runtime_error(const char*)
<LI><a href="#[2a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::logic_error::logic_error(const char*)
</UL>

<P><STRONG><a name="[415]"></a>std::__rw_exception::__rw_exception__sub_object(const char*)</STRONG> (Thumb, 0 bytes, Stack size 16 bytes, rwthrowproc_impl.o(i._ZNSt14__rw_exceptionC1EPKc), UNUSED)

<P><STRONG><a name="[2e4]"></a>std::__rw_exception::__rw_exception(const std::__rw_exception&)</STRONG> (Thumb, 42 bytes, Stack size 16 bytes, rwthrowproc_impl.o(i._ZNSt14__rw_exceptionC1ERKS_))
<BR><BR>[Stack]<UL><LI>Max Depth = 224 + Unknown Stack Size
<LI>Call Chain = std::__rw_exception::__rw_exception(const std::__rw_exception&) &rArr; std::__rw_exception::_C_assign(const char*, unsigned) &rArr; __cxa_begin_catch &rArr; __ARM::get_foreign_intermediary(__cxa_exception*, _Unwind_Control_Block*) &rArr; __cxa_allocate_exception &rArr; __ARM::call_terminate_handler(_Unwind_Control_Block*) &rArr; std::terminate() &rArr; __cxa_get_globals &rArr; __ARM_exceptions_buffer_init &rArr; malloc &rArr; _malloc_internal &rArr; __Heap_Full &rArr; __Heap_ProvideMemory &rArr; _free_internal &rArr; _mutex_release
</UL>
<BR>[Calls]<UL><LI><a href="#[2a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::exception::exception(const std::exception&)
<LI><a href="#[2aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__rw_exception::_C_assign(const char*, unsigned)
</UL>
<BR>[Called By]<UL><LI><a href="#[2c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::ios_base::failure::failure(const std::ios_base::failure&)
<LI><a href="#[2b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::runtime_error::runtime_error(const std::runtime_error&)
<LI><a href="#[2ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::logic_error::logic_error(const std::logic_error&)
</UL>

<P><STRONG><a name="[416]"></a>std::__rw_exception::__rw_exception__sub_object(const std::__rw_exception&)</STRONG> (Thumb, 0 bytes, Stack size 16 bytes, rwthrowproc_impl.o(i._ZNSt14__rw_exceptionC1ERKS_), UNUSED)

<P><STRONG><a name="[2ea]"></a>std::__rw_exception::__rw_exception(const std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;&)</STRONG> (Thumb, 34 bytes, Stack size 16 bytes, rwstdexcept.o(i._ZNSt14__rw_exceptionC1ERKSs), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[2a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::exception::exception()
<LI><a href="#[2aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__rw_exception::_C_assign(const char*, unsigned)
</UL>

<P><STRONG><a name="[417]"></a>std::__rw_exception::__rw_exception__sub_object(const std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;&)</STRONG> (Thumb, 0 bytes, Stack size 16 bytes, rwstdexcept.o(i._ZNSt14__rw_exceptionC1ERKSs), UNUSED)

<P><STRONG><a name="[286]"></a>std::__rw_exception::__rw_exception()</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, rwstdexcept.o(i._ZNSt14__rw_exceptionC1Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = std::__rw_exception::__rw_exception()
</UL>
<BR>[Calls]<UL><LI><a href="#[2a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::exception::exception()
</UL>
<BR>[Called By]<UL><LI><a href="#[284]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rw_throw(int, ...)
</UL>

<P><STRONG><a name="[418]"></a>std::__rw_exception::__rw_exception__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, rwstdexcept.o(i._ZNSt14__rw_exceptionC1Ev), UNUSED)

<P><STRONG><a name="[9c]"></a>std::__rw_exception::~__rw_exception__deallocating()</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, rwstdexcept.o(i._ZNSt14__rw_exceptionD0Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = std::__rw_exception::~__rw_exception__deallocating() &rArr; std::__rw_exception::~__rw_exception() &rArr; operator delete[] (void*) &rArr; operator delete (void*) &rArr; free &rArr; _free_internal &rArr; _mutex_release
</UL>
<BR>[Calls]<UL><LI><a href="#[282]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;operator delete (void*)
<LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__rw_exception::~__rw_exception()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> rwstdexcept.o(.constdata__ZTVSt14__rw_exception)
</UL>
<P><STRONG><a name="[9b]"></a>std::__rw_exception::~__rw_exception()</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, rwstdexcept.o(i._ZNSt14__rw_exceptionD1Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = std::__rw_exception::~__rw_exception() &rArr; operator delete[] (void*) &rArr; operator delete (void*) &rArr; free &rArr; _free_internal &rArr; _mutex_release
</UL>
<BR>[Calls]<UL><LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;operator delete[] (void*)
</UL>
<BR>[Called By]<UL><LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::ios_base::failure::~failure()
<LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::runtime_error::~runtime_error()
<LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::logic_error::~logic_error()
<LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__rw_exception::~__rw_exception__deallocating()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> rwstdexcept.o(.constdata__ZTVSt14__rw_exception)
</UL>
<P><STRONG><a name="[419]"></a>std::__rw_exception::~__rw_exception__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, rwstdexcept.o(i._ZNSt14__rw_exceptionD1Ev), UNUSED)

<P><STRONG><a name="[9e]"></a>std::collate_byname&lang;char&rang;::~collate_byname__deallocating()</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, char.o(i._ZNSt14collate_bynameIcED0Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = std::collate_byname&lang;char&rang;::~collate_byname__deallocating() &rArr; std::collate_byname&lang;char&rang;::~collate_byname() &rArr; std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;::~basic_string() &rArr; std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;::_C_unlink() &rArr; __rw::__rw_deallocate(void*, unsigned, int) &rArr; operator delete (void*) &rArr; free &rArr; _free_internal &rArr; _mutex_release
</UL>
<BR>[Calls]<UL><LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::collate_byname&lang;char&rang;::~collate_byname()
<LI><a href="#[282]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;operator delete (void*)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> char.o(.constdata__ZTVSt14collate_bynameIcE)
</UL>
<P><STRONG><a name="[9d]"></a>std::collate_byname&lang;char&rang;::~collate_byname()</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, char.o(i._ZNSt14collate_bynameIcED1Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = std::collate_byname&lang;char&rang;::~collate_byname() &rArr; std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;::~basic_string() &rArr; std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;::_C_unlink() &rArr; __rw::__rw_deallocate(void*, unsigned, int) &rArr; operator delete (void*) &rArr; free &rArr; _free_internal &rArr; _mutex_release
</UL>
<BR>[Calls]<UL><LI><a href="#[28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;::~basic_string()
</UL>
<BR>[Called By]<UL><LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::collate_byname&lang;char&rang;::~collate_byname__deallocating()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> char.o(.constdata__ZTVSt14collate_bynameIcE)
</UL>
<P><STRONG><a name="[41a]"></a>std::collate_byname&lang;char&rang;::~collate_byname__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, char.o(i._ZNSt14collate_bynameIcED1Ev), UNUSED)

<P><STRONG><a name="[2b8]"></a>std::overflow_error::overflow_error(const char*)</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, rwthrowproc_impl.o(i._ZNSt14overflow_errorC1EPKc))
<BR><BR>[Stack]<UL><LI>Max Depth = 240 + Unknown Stack Size
<LI>Call Chain = std::overflow_error::overflow_error(const char*) &rArr; std::runtime_error::runtime_error(const char*) &rArr; std::__rw_exception::__rw_exception(const char*) &rArr; std::__rw_exception::_C_assign(const char*, unsigned) &rArr; __cxa_begin_catch &rArr; __ARM::get_foreign_intermediary(__cxa_exception*, _Unwind_Control_Block*) &rArr; __cxa_allocate_exception &rArr; __ARM::call_terminate_handler(_Unwind_Control_Block*) &rArr; std::terminate() &rArr; __cxa_get_globals &rArr; __ARM_exceptions_buffer_init &rArr; malloc &rArr; _malloc_internal &rArr; __Heap_Full &rArr; __Heap_ProvideMemory &rArr; _free_internal &rArr; _mutex_release
</UL>
<BR>[Calls]<UL><LI><a href="#[2b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::runtime_error::runtime_error(const char*)
</UL>
<BR>[Called By]<UL><LI><a href="#[d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rw_throw_exception(int, char*)
</UL>

<P><STRONG><a name="[41b]"></a>std::overflow_error::overflow_error__sub_object(const char*)</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, rwthrowproc_impl.o(i._ZNSt14overflow_errorC1EPKc), UNUSED)

<P><STRONG><a name="[2b9]"></a>std::overflow_error::overflow_error(const std::overflow_error&)</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, rwthrowproc_impl.o(i._ZNSt14overflow_errorC1ERKS_))
<BR><BR>[Stack]<UL><LI>Max Depth = 240 + Unknown Stack Size
<LI>Call Chain = std::overflow_error::overflow_error(const std::overflow_error&) &rArr; std::runtime_error::runtime_error(const std::runtime_error&) &rArr; std::__rw_exception::__rw_exception(const std::__rw_exception&) &rArr; std::__rw_exception::_C_assign(const char*, unsigned) &rArr; __cxa_begin_catch &rArr; __ARM::get_foreign_intermediary(__cxa_exception*, _Unwind_Control_Block*) &rArr; __cxa_allocate_exception &rArr; __ARM::call_terminate_handler(_Unwind_Control_Block*) &rArr; std::terminate() &rArr; __cxa_get_globals &rArr; __ARM_exceptions_buffer_init &rArr; malloc &rArr; _malloc_internal &rArr; __Heap_Full &rArr; __Heap_ProvideMemory &rArr; _free_internal &rArr; _mutex_release
</UL>
<BR>[Calls]<UL><LI><a href="#[2b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::runtime_error::runtime_error(const std::runtime_error&)
</UL>
<BR>[Called By]<UL><LI><a href="#[d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rw_throw_exception(int, char*)
</UL>

<P><STRONG><a name="[41c]"></a>std::overflow_error::overflow_error__sub_object(const std::overflow_error&)</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, rwthrowproc_impl.o(i._ZNSt14overflow_errorC1ERKS_), UNUSED)

<P><STRONG><a name="[a1]"></a>std::overflow_error::~overflow_error__deallocating()</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, rwthrowproc_impl.o(i._ZNSt14overflow_errorD0Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = std::overflow_error::~overflow_error__deallocating() &rArr; std::overflow_error::~overflow_error() &rArr; std::runtime_error::~runtime_error() &rArr; std::__rw_exception::~__rw_exception() &rArr; operator delete[] (void*) &rArr; operator delete (void*) &rArr; free &rArr; _free_internal &rArr; _mutex_release
</UL>
<BR>[Calls]<UL><LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::overflow_error::~overflow_error()
<LI><a href="#[282]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;operator delete (void*)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> rwthrowproc_impl.o(.constdata__ZTVSt14overflow_error)
</UL>
<P><STRONG><a name="[45]"></a>std::overflow_error::~overflow_error()</STRONG> (Thumb, 8 bytes, Stack size 8 bytes, rwthrowproc_impl.o(i._ZNSt14overflow_errorD1Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = std::overflow_error::~overflow_error() &rArr; std::runtime_error::~runtime_error() &rArr; std::__rw_exception::~__rw_exception() &rArr; operator delete[] (void*) &rArr; operator delete (void*) &rArr; free &rArr; _free_internal &rArr; _mutex_release
</UL>
<BR>[Calls]<UL><LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::runtime_error::~runtime_error()
</UL>
<BR>[Called By]<UL><LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::overflow_error::~overflow_error__deallocating()
</UL>
<BR>[Address Reference Count : 2]<UL><LI> rwthrowproc_impl.o(i._ZN4__rw20__rw_throw_exceptionEiPc)
<LI> rwthrowproc_impl.o(.constdata__ZTVSt14overflow_error)
</UL>
<P><STRONG><a name="[41d]"></a>std::overflow_error::~overflow_error__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, rwthrowproc_impl.o(i._ZNSt14overflow_errorD1Ev), UNUSED)

<P><STRONG><a name="[2ba]"></a>std::underflow_error::underflow_error(const char*)</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, rwthrowproc_impl.o(i._ZNSt15underflow_errorC1EPKc))
<BR><BR>[Stack]<UL><LI>Max Depth = 240 + Unknown Stack Size
<LI>Call Chain = std::underflow_error::underflow_error(const char*) &rArr; std::runtime_error::runtime_error(const char*) &rArr; std::__rw_exception::__rw_exception(const char*) &rArr; std::__rw_exception::_C_assign(const char*, unsigned) &rArr; __cxa_begin_catch &rArr; __ARM::get_foreign_intermediary(__cxa_exception*, _Unwind_Control_Block*) &rArr; __cxa_allocate_exception &rArr; __ARM::call_terminate_handler(_Unwind_Control_Block*) &rArr; std::terminate() &rArr; __cxa_get_globals &rArr; __ARM_exceptions_buffer_init &rArr; malloc &rArr; _malloc_internal &rArr; __Heap_Full &rArr; __Heap_ProvideMemory &rArr; _free_internal &rArr; _mutex_release
</UL>
<BR>[Calls]<UL><LI><a href="#[2b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::runtime_error::runtime_error(const char*)
</UL>
<BR>[Called By]<UL><LI><a href="#[d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rw_throw_exception(int, char*)
</UL>

<P><STRONG><a name="[41e]"></a>std::underflow_error::underflow_error__sub_object(const char*)</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, rwthrowproc_impl.o(i._ZNSt15underflow_errorC1EPKc), UNUSED)

<P><STRONG><a name="[2bb]"></a>std::underflow_error::underflow_error(const std::underflow_error&)</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, rwthrowproc_impl.o(i._ZNSt15underflow_errorC1ERKS_))
<BR><BR>[Stack]<UL><LI>Max Depth = 240 + Unknown Stack Size
<LI>Call Chain = std::underflow_error::underflow_error(const std::underflow_error&) &rArr; std::runtime_error::runtime_error(const std::runtime_error&) &rArr; std::__rw_exception::__rw_exception(const std::__rw_exception&) &rArr; std::__rw_exception::_C_assign(const char*, unsigned) &rArr; __cxa_begin_catch &rArr; __ARM::get_foreign_intermediary(__cxa_exception*, _Unwind_Control_Block*) &rArr; __cxa_allocate_exception &rArr; __ARM::call_terminate_handler(_Unwind_Control_Block*) &rArr; std::terminate() &rArr; __cxa_get_globals &rArr; __ARM_exceptions_buffer_init &rArr; malloc &rArr; _malloc_internal &rArr; __Heap_Full &rArr; __Heap_ProvideMemory &rArr; _free_internal &rArr; _mutex_release
</UL>
<BR>[Calls]<UL><LI><a href="#[2b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::runtime_error::runtime_error(const std::runtime_error&)
</UL>
<BR>[Called By]<UL><LI><a href="#[d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rw_throw_exception(int, char*)
</UL>

<P><STRONG><a name="[41f]"></a>std::underflow_error::underflow_error__sub_object(const std::underflow_error&)</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, rwthrowproc_impl.o(i._ZNSt15underflow_errorC1ERKS_), UNUSED)

<P><STRONG><a name="[b5]"></a>std::underflow_error::~underflow_error__deallocating()</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, rwthrowproc_impl.o(i._ZNSt15underflow_errorD0Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = std::underflow_error::~underflow_error__deallocating() &rArr; std::underflow_error::~underflow_error() &rArr; std::runtime_error::~runtime_error() &rArr; std::__rw_exception::~__rw_exception() &rArr; operator delete[] (void*) &rArr; operator delete (void*) &rArr; free &rArr; _free_internal &rArr; _mutex_release
</UL>
<BR>[Calls]<UL><LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::underflow_error::~underflow_error()
<LI><a href="#[282]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;operator delete (void*)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> rwthrowproc_impl.o(.constdata__ZTVSt15underflow_error)
</UL>
<P><STRONG><a name="[46]"></a>std::underflow_error::~underflow_error()</STRONG> (Thumb, 8 bytes, Stack size 8 bytes, rwthrowproc_impl.o(i._ZNSt15underflow_errorD1Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = std::underflow_error::~underflow_error() &rArr; std::runtime_error::~runtime_error() &rArr; std::__rw_exception::~__rw_exception() &rArr; operator delete[] (void*) &rArr; operator delete (void*) &rArr; free &rArr; _free_internal &rArr; _mutex_release
</UL>
<BR>[Calls]<UL><LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::runtime_error::~runtime_error()
</UL>
<BR>[Called By]<UL><LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::underflow_error::~underflow_error__deallocating()
</UL>
<BR>[Address Reference Count : 2]<UL><LI> rwthrowproc_impl.o(i._ZN4__rw20__rw_throw_exceptionEiPc)
<LI> rwthrowproc_impl.o(.constdata__ZTVSt15underflow_error)
</UL>
<P><STRONG><a name="[420]"></a>std::underflow_error::~underflow_error__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, rwthrowproc_impl.o(i._ZNSt15underflow_errorD1Ev), UNUSED)

<P><STRONG><a name="[2ae]"></a>std::invalid_argument::invalid_argument(const char*)</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, rwthrowproc_impl.o(i._ZNSt16invalid_argumentC1EPKc))
<BR><BR>[Stack]<UL><LI>Max Depth = 240 + Unknown Stack Size
<LI>Call Chain = std::invalid_argument::invalid_argument(const char*) &rArr; std::logic_error::logic_error(const char*) &rArr; std::__rw_exception::__rw_exception(const char*) &rArr; std::__rw_exception::_C_assign(const char*, unsigned) &rArr; __cxa_begin_catch &rArr; __ARM::get_foreign_intermediary(__cxa_exception*, _Unwind_Control_Block*) &rArr; __cxa_allocate_exception &rArr; __ARM::call_terminate_handler(_Unwind_Control_Block*) &rArr; std::terminate() &rArr; __cxa_get_globals &rArr; __ARM_exceptions_buffer_init &rArr; malloc &rArr; _malloc_internal &rArr; __Heap_Full &rArr; __Heap_ProvideMemory &rArr; _free_internal &rArr; _mutex_release
</UL>
<BR>[Calls]<UL><LI><a href="#[2a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::logic_error::logic_error(const char*)
</UL>
<BR>[Called By]<UL><LI><a href="#[d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rw_throw_exception(int, char*)
</UL>

<P><STRONG><a name="[421]"></a>std::invalid_argument::invalid_argument__sub_object(const char*)</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, rwthrowproc_impl.o(i._ZNSt16invalid_argumentC1EPKc), UNUSED)

<P><STRONG><a name="[2af]"></a>std::invalid_argument::invalid_argument(const std::invalid_argument&)</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, rwthrowproc_impl.o(i._ZNSt16invalid_argumentC1ERKS_))
<BR><BR>[Stack]<UL><LI>Max Depth = 240 + Unknown Stack Size
<LI>Call Chain = std::invalid_argument::invalid_argument(const std::invalid_argument&) &rArr; std::logic_error::logic_error(const std::logic_error&) &rArr; std::__rw_exception::__rw_exception(const std::__rw_exception&) &rArr; std::__rw_exception::_C_assign(const char*, unsigned) &rArr; __cxa_begin_catch &rArr; __ARM::get_foreign_intermediary(__cxa_exception*, _Unwind_Control_Block*) &rArr; __cxa_allocate_exception &rArr; __ARM::call_terminate_handler(_Unwind_Control_Block*) &rArr; std::terminate() &rArr; __cxa_get_globals &rArr; __ARM_exceptions_buffer_init &rArr; malloc &rArr; _malloc_internal &rArr; __Heap_Full &rArr; __Heap_ProvideMemory &rArr; _free_internal &rArr; _mutex_release
</UL>
<BR>[Calls]<UL><LI><a href="#[2ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::logic_error::logic_error(const std::logic_error&)
</UL>
<BR>[Called By]<UL><LI><a href="#[d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rw_throw_exception(int, char*)
</UL>

<P><STRONG><a name="[422]"></a>std::invalid_argument::invalid_argument__sub_object(const std::invalid_argument&)</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, rwthrowproc_impl.o(i._ZNSt16invalid_argumentC1ERKS_), UNUSED)

<P><STRONG><a name="[b6]"></a>std::invalid_argument::~invalid_argument__deallocating()</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, rwthrowproc_impl.o(i._ZNSt16invalid_argumentD0Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = std::invalid_argument::~invalid_argument__deallocating() &rArr; std::invalid_argument::~invalid_argument() &rArr; std::logic_error::~logic_error() &rArr; std::__rw_exception::~__rw_exception() &rArr; operator delete[] (void*) &rArr; operator delete (void*) &rArr; free &rArr; _free_internal &rArr; _mutex_release
</UL>
<BR>[Calls]<UL><LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::invalid_argument::~invalid_argument()
<LI><a href="#[282]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;operator delete (void*)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> rwthrowproc_impl.o(.constdata__ZTVSt16invalid_argument)
</UL>
<P><STRONG><a name="[40]"></a>std::invalid_argument::~invalid_argument()</STRONG> (Thumb, 8 bytes, Stack size 8 bytes, rwthrowproc_impl.o(i._ZNSt16invalid_argumentD1Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = std::invalid_argument::~invalid_argument() &rArr; std::logic_error::~logic_error() &rArr; std::__rw_exception::~__rw_exception() &rArr; operator delete[] (void*) &rArr; operator delete (void*) &rArr; free &rArr; _free_internal &rArr; _mutex_release
</UL>
<BR>[Calls]<UL><LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::logic_error::~logic_error()
</UL>
<BR>[Called By]<UL><LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::invalid_argument::~invalid_argument__deallocating()
</UL>
<BR>[Address Reference Count : 2]<UL><LI> rwthrowproc_impl.o(i._ZN4__rw20__rw_throw_exceptionEiPc)
<LI> rwthrowproc_impl.o(.constdata__ZTVSt16invalid_argument)
</UL>
<P><STRONG><a name="[423]"></a>std::invalid_argument::~invalid_argument__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, rwthrowproc_impl.o(i._ZNSt16invalid_argumentD1Ev), UNUSED)

<P><STRONG><a name="[53]"></a>std::__rw_open_cat_data::__rw_open_cat_data()</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, messages.o(i._ZNSt18__rw_open_cat_dataC1Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 632 + Unknown Stack Size
<LI>Call Chain = std::__rw_open_cat_data::__rw_open_cat_data() &rArr; std::locale::classic() &rArr; std::locale::locale(__rw::__rw_locale_imp*) &rArr; std::locale::_C_init() &rArr; __rw::__rw_locale_imp::__rw_locale_imp(const char*, unsigned, unsigned) &rArr; __aeabi_vec_new_cookie &rArr; __cxa_vec_new &rArr; __ARM_array_new_general &rArr; __cxa_rethrow &rArr; _Unwind_RaiseException &rArr; __ARM_Unwind_RaiseException &rArr; malloc &rArr; _malloc_internal &rArr; __Heap_Full &rArr; __Heap_ProvideMemory &rArr; _free_internal &rArr; _mutex_release
</UL>
<BR>[Calls]<UL><LI><a href="#[2eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::locale::locale(const std::locale&)
<LI><a href="#[2d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::locale::classic()
</UL>
<BR>[Called By]<UL><LI><a href="#[2cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rw_locale_vector&lang;std::__rw_open_cat_data&rang;::resize(unsigned)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> messages.o(t._ZN4__rw18__rw_locale_vectorISt18__rw_open_cat_dataE6resizeEj)
</UL>
<P><STRONG><a name="[424]"></a>std::__rw_open_cat_data::__rw_open_cat_data__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, messages.o(i._ZNSt18__rw_open_cat_dataC1Ev), UNUSED)

<P><STRONG><a name="[52]"></a>std::__rw_open_cat_data::~__rw_open_cat_data()</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, messages.o(i._ZNSt18__rw_open_cat_dataD1Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 576 + Unknown Stack Size
<LI>Call Chain = std::__rw_open_cat_data::~__rw_open_cat_data() &rArr; std::locale::~locale() &rArr; __rw::__rw_locale_vector&lang;std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;&rang;::~__rw_locale_vector() &rArr; __aeabi_vec_delete &rArr; __aeabi_vec_dtor_cookie &rArr; __aeabi_vec_dtor &rArr; __ARM_vec_cleanup_rethrow &rArr; __cxa_rethrow &rArr; _Unwind_RaiseException &rArr; __ARM_Unwind_RaiseException &rArr; malloc &rArr; _malloc_internal &rArr; __Heap_Full &rArr; __Heap_ProvideMemory &rArr; _free_internal &rArr; _mutex_release
</UL>
<BR>[Calls]<UL><LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::locale::~locale()
</UL>
<BR>[Address Reference Count : 2]<UL><LI> messages.o(t._ZN4__rw18__rw_locale_vectorISt18__rw_open_cat_dataE6resizeEj)
<LI> messages.o(t._ZN4__rw18__rw_locale_vectorISt18__rw_open_cat_dataED1Ev)
</UL>
<P><STRONG><a name="[425]"></a>std::__rw_open_cat_data::~__rw_open_cat_data__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, messages.o(i._ZNSt18__rw_open_cat_dataD1Ev), UNUSED)

<P><STRONG><a name="[2ec]"></a>std::__rw_open_cat_data::operator =(const std::__rw_open_cat_data&)</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, messages.o(i._ZNSt18__rw_open_cat_dataaSERKS_))
<BR><BR>[Stack]<UL><LI>Max Depth = 584 + Unknown Stack Size
<LI>Call Chain = std::__rw_open_cat_data::operator =(const std::__rw_open_cat_data&) &rArr; std::locale::operator =(const std::locale&) &rArr; __rw::__rw_locale_imp::~__rw_locale_imp() &rArr; __rw::__rw_locale_vector&lang;std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;&rang;::~__rw_locale_vector() &rArr; __aeabi_vec_delete &rArr; __aeabi_vec_dtor_cookie &rArr; __aeabi_vec_dtor &rArr; __ARM_vec_cleanup_rethrow &rArr; __cxa_rethrow &rArr; _Unwind_RaiseException &rArr; __ARM_Unwind_RaiseException &rArr; malloc &rArr; _malloc_internal &rArr; __Heap_Full &rArr; __Heap_ProvideMemory &rArr; _free_internal &rArr; _mutex_release
</UL>
<BR>[Calls]<UL><LI><a href="#[2d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::locale::operator =(const std::locale&)
</UL>
<BR>[Called By]<UL><LI><a href="#[2cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rw_locale_vector&lang;std::__rw_open_cat_data&rang;::resize(unsigned)
</UL>

<P><STRONG><a name="[27]"></a>std::map&lang;int, int, std::less&lang;int&rang;, std::allocator&lang;std::pair&lang;const int, int&rang;&rang;&rang;::~map()</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, main.o(i._ZNSt3mapIiiSt4lessIiESaISt4pairIKiiEEED1Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 160<LI>Call Chain = std::map&lang;int, int, std::less&lang;int&rang;, std::allocator&lang;std::pair&lang;const int, int&rang;&rang;&rang;::~map() &rArr; __rw::__rb_tree&lang;int, std::pair&lang;const int, int&rang;, __rw::__select1st&lang;std::pair&lang;const int, int&rang;, int&rang;, std::less&lang;int&rang;, std::allocator&lang;std::pair&lang;const int, int&rang;&rang;&rang;::~__rb_tree() &rArr; __rw::__rb_tree&lang;int, std::pair&lang;const int, int&rang;, __rw::__select1st&lang;std::pair&lang;const int, int&rang;, int&rang;, std::less&lang;int&rang;, std::allocator&lang;std::pair&lang;const int, int&rang;&rang;&rang;::erase(__rw::__rw_tree_iter&lang;std::pair&lang;const int, int&rang;, int, std::pair&lang;const int, int&rang;*, std::pair&lang;const int, int&rang;&, __rw::__rw_rb_tree_node&lang;std::allocator&lang;std::pair&lang;const int, int&rang;&rang;, std::pair&lang;const int, int&rang;, int, __rw::__select1st&lang;std::pair&lang;const int, int&rang;, int&rang;&rang;&rang;, __rw::__rw_tree_iter&lang;std::pair&lang;const int, int&rang;, int, std::pair&lang;const int, int&rang;*, std::pair&lang;const int, int&rang;&, __rw::__rw_rb_tree_node&lang;std::allocator&lang;std::pair&lang;const int, int&rang;&rang;, std::pair&lang;const int, int&rang;, int, __rw::__select1st&lang;std::pair&lang;const int, int&rang;, int&rang;&rang;&rang;) &rArr; __rw::__rb_tree&lang;int, std::pair&lang;const int, int&rang;, __rw::__select1st&lang;std::pair&lang;const int, int&rang;, int&rang;, std::less&lang;int&rang;, std::allocator&lang;std::pair&lang;const int, int&rang;&rang;&rang;::erase(__rw::__rw_tree_iter&lang;std::pair&lang;const int, int&rang;, int, std::pair&lang;const int, int&rang;*, std::pair&lang;const int, int&rang;&, __rw::__rw_rb_tree_node&lang;std::allocator&lang;std::pair&lang;const int, int&rang;&rang;, std::pair&lang;const int, int&rang;, int, __rw::__select1st&lang;std::pair&lang;const int, int&rang;, int&rang;&rang;&rang;) &rArr; __rw::__rb_tree&lang;int, std::pair&lang;const int, int&rang;, __rw::__select1st&lang;std::pair&lang;const int, int&rang;, int&rang;, std::less&lang;int&rang;, std::allocator&lang;std::pair&lang;const int, int&rang;&rang;&rang;::__rotate_right(__rw::__rw_rb_tree_node&lang;std::allocator&lang;std::pair&lang;const int, int&rang;&rang;, std::pair&lang;const int, int&rang;, int, __rw::__select1st&lang;std::pair&lang;const int, int&rang;, int&rang;&rang;*) &rArr; __rw::__rb_tree&lang;int, std::pair&lang;const int, int&rang;, __rw::__select1st&lang;std::pair&lang;const int, int&rang;, int&rang;, std::less&lang;int&rang;, std::allocator&lang;std::pair&lang;const int, int&rang;&rang;&rang;::_C_root() const
</UL>
<BR>[Calls]<UL><LI><a href="#[2ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rb_tree&lang;int, std::pair&lang;const int, int&rang;, __rw::__select1st&lang;std::pair&lang;const int, int&rang;, int&rang;, std::less&lang;int&rang;, std::allocator&lang;std::pair&lang;const int, int&rang;&rang;&rang;::~__rb_tree()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> main.o(.text)
</UL>
<P><STRONG><a name="[426]"></a>std::map&lang;int, int, std::less&lang;int&rang;, std::allocator&lang;std::pair&lang;const int, int&rang;&rang;&rang;::~map__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, main.o(i._ZNSt3mapIiiSt4lessIiESaISt4pairIKiiEEED1Ev), UNUSED)

<P><STRONG><a name="[6f]"></a>std::ctype&lang;char&rang;::_C_initfacet(const std::locale&)</STRONG> (Thumb, 250 bytes, Stack size 40 bytes, char.o(i._ZNSt5ctypeIcE12_C_initfacetERKSt6locale))
<BR><BR>[Stack]<UL><LI>Max Depth = 360 + Unknown Stack Size
<LI>Call Chain = std::ctype&lang;char&rang;::_C_initfacet(const std::locale&) &rArr; std::locale::name() const &rArr; std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;::basic_string(const char*, const std::allocator&lang;char&rang;&) &rArr; std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;::_C_allocate(unsigned, unsigned, unsigned) &rArr; std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;::_C_getRep(unsigned, unsigned) &rArr;  __rw::__rw_throw(int, ...) (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::locale::name() const
<LI><a href="#[2c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rw_use_c_lib_locale::__rw_use_c_lib_locale(const char*, int)
<LI><a href="#[2d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::ctype&lang;char&rang;::is(std::ctype_base::mask, char) const
<LI><a href="#[2c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rw_use_c_lib_locale::~__rw_use_c_lib_locale()
<LI><a href="#[28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;::~basic_string()
</UL>
<BR>[Address Reference Count : 2]<UL><LI> char.o(.constdata__ZTVSt5ctypeIcE)
<LI> char.o(.constdata__ZTVSt12ctype_bynameIcE)
</UL>
<P><STRONG><a name="[2e7]"></a>std::ctype&lang;char&rang;::ctype(const std::ctype_base::mask*, bool, unsigned)</STRONG> (Thumb, 270 bytes, Stack size 24 bytes, char.o(i._ZNSt5ctypeIcEC1EPKNSt10ctype_base4maskEbj))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = std::ctype&lang;char&rang;::ctype(const std::ctype_base::mask*, bool, unsigned) &rArr; operator new[] (unsigned) &rArr; operator new(unsigned) &rArr; malloc &rArr; _malloc_internal &rArr; __Heap_Full &rArr; __Heap_ProvideMemory &rArr; _free_internal &rArr; _mutex_release
</UL>
<BR>[Calls]<UL><LI><a href="#[2d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::ctype&lang;char&rang;::is(std::ctype_base::mask, char) const
<LI><a href="#[290]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;operator new[] (unsigned)
</UL>
<BR>[Called By]<UL><LI><a href="#[2e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::ctype_byname&lang;char&rang;::ctype_byname(const char*, unsigned)
<LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rw_facet_maker&lang;std::ctype&lang;char&rang;&rang;::_C_maker_func(int, const char*, unsigned)
</UL>

<P><STRONG><a name="[427]"></a>std::ctype&lang;char&rang;::ctype__sub_object(const std::ctype_base::mask*, bool, unsigned)</STRONG> (Thumb, 0 bytes, Stack size 24 bytes, char.o(i._ZNSt5ctypeIcEC1EPKNSt10ctype_base4maskEbj), UNUSED)

<P><STRONG><a name="[b8]"></a>std::ctype&lang;char&rang;::~ctype__deallocating()</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, char.o(i._ZNSt5ctypeIcED0Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = std::ctype&lang;char&rang;::~ctype__deallocating() &rArr; std::ctype&lang;char&rang;::~ctype() &rArr; operator delete[] (void*) &rArr; operator delete (void*) &rArr; free &rArr; _free_internal &rArr; _mutex_release
</UL>
<BR>[Calls]<UL><LI><a href="#[b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::ctype&lang;char&rang;::~ctype()
<LI><a href="#[282]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;operator delete (void*)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> char.o(.constdata__ZTVSt5ctypeIcE)
</UL>
<P><STRONG><a name="[b7]"></a>std::ctype&lang;char&rang;::~ctype()</STRONG> (Thumb, 34 bytes, Stack size 8 bytes, char.o(i._ZNSt5ctypeIcED1Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = std::ctype&lang;char&rang;::~ctype() &rArr; operator delete[] (void*) &rArr; operator delete (void*) &rArr; free &rArr; _free_internal &rArr; _mutex_release
</UL>
<BR>[Calls]<UL><LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;operator delete[] (void*)
</UL>
<BR>[Called By]<UL><LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::ctype&lang;char&rang;::~ctype__deallocating()
<LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::ctype_byname&lang;char&rang;::~ctype_byname()
<LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::ctype_byname&lang;char&rang;::~ctype_byname__deallocating()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> char.o(.constdata__ZTVSt5ctypeIcE)
</UL>
<P><STRONG><a name="[428]"></a>std::ctype&lang;char&rang;::~ctype__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, char.o(i._ZNSt5ctypeIcED1Ev), UNUSED)

<P><STRONG><a name="[2ee]"></a>std::ctype&lang;wchar_t&rang;::ctype(unsigned)</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, ios.o(i._ZNSt5ctypeIwEC1Ej))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = std::ctype&lang;wchar_t&rang;::ctype(unsigned)
</UL>
<BR>[Calls]<UL><LI><a href="#[2ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::locale::facet::facet(unsigned, int)
</UL>
<BR>[Called By]<UL><LI><a href="#[329]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rw_create_named_facet&lang;std::ctype&lang;wchar_t&rang;&rang;(T1*, const char*, unsigned)
<LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rw_facet_maker&lang;std::ctype&lang;wchar_t&rang;&rang;::_C_maker_func(int, const char*, unsigned)
</UL>

<P><STRONG><a name="[429]"></a>std::ctype&lang;wchar_t&rang;::ctype__sub_object(unsigned)</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, ios.o(i._ZNSt5ctypeIwEC1Ej), UNUSED)

<P><STRONG><a name="[b9]"></a>std::ctype&lang;wchar_t&rang;::~ctype__deallocating()</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, ios.o(i._ZNSt5ctypeIwED0Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = std::ctype&lang;wchar_t&rang;::~ctype__deallocating() &rArr; operator delete (void*) &rArr; free &rArr; _free_internal &rArr; _mutex_release
</UL>
<BR>[Calls]<UL><LI><a href="#[282]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;operator delete (void*)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> ios.o(.constdata__ZTVSt5ctypeIwE)
</UL>
<P><STRONG><a name="[2f0]"></a>std::locale::_C_remove_facets(int)</STRONG> (Thumb, 78 bytes, Stack size 24 bytes, locale.o(i._ZNSt6locale16_C_remove_facetsEi), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[2f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rw_locale_imp::_C_map_category(int)
</UL>
<BR>[Called By]<UL><LI><a href="#[2f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::locale::locale(const std::locale&, const std::locale&, int)
<LI><a href="#[2f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::locale::locale(const std::locale&, const char*, int)
</UL>

<P><STRONG><a name="[2ef]"></a>std::locale::facet::facet(unsigned, int)</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, ios.o(i._ZNSt6locale5facetC1Eji))
<BR><BR>[Called By]<UL><LI><a href="#[2f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::codecvt&lang;wchar_t, char, std::__mbstate_t&rang;::codecvt(unsigned)
<LI><a href="#[2f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::codecvt&lang;char, char, std::__mbstate_t&rang;::codecvt(unsigned)
<LI><a href="#[2ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::ctype&lang;wchar_t&rang;::ctype(unsigned)
</UL>

<P><STRONG><a name="[42a]"></a>std::locale::facet::facet__sub_object(unsigned, int)</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, ios.o(i._ZNSt6locale5facetC1Eji), UNUSED)

<P><STRONG><a name="[5b]"></a>std::locale::facet::~facet__deallocating()</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, ios.o(i._ZNSt6locale5facetD0Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = std::locale::facet::~facet__deallocating() &rArr; operator delete (void*) &rArr; free &rArr; _free_internal &rArr; _mutex_release
</UL>
<BR>[Calls]<UL><LI><a href="#[282]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;operator delete (void*)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> ios.o(.constdata__ZTVNSt6locale5facetE)
</UL>
<P><STRONG><a name="[5a]"></a>std::locale::facet::~facet()</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, main.o(i._ZNSt6locale5facetD1Ev))
<BR><BR>[Called By]<UL><LI><a href="#[30c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::numpunct&lang;char&rang;::~numpunct()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> ios.o(.constdata__ZTVNSt6locale5facetE)
</UL>
<P><STRONG><a name="[42b]"></a>std::locale::facet::~facet__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, main.o(i._ZNSt6locale5facetD1Ev), UNUSED)

<P><STRONG><a name="[2f2]"></a>std::locale::global(const std::locale&)</STRONG> (Thumb, 102 bytes, Stack size 24 bytes, locale.o(i._ZNSt6locale6globalERKS_), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[2db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::locale::name() const
<LI><a href="#[213]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setlocale
<LI><a href="#[284]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rw_throw(int, ...)
<LI><a href="#[28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;::~basic_string()
<LI><a href="#[2d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::locale::locale(__rw::__rw_locale_imp*)
</UL>

<P><STRONG><a name="[2f3]"></a>std::locale::_C_init()</STRONG> (Thumb, 120 bytes, Stack size 16 bytes, locale.o(i._ZNSt6locale7_C_initEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 608 + Unknown Stack Size
<LI>Call Chain = std::locale::_C_init() &rArr; __rw::__rw_locale_imp::__rw_locale_imp(const char*, unsigned, unsigned) &rArr; __aeabi_vec_new_cookie &rArr; __cxa_vec_new &rArr; __ARM_array_new_general &rArr; __cxa_rethrow &rArr; _Unwind_RaiseException &rArr; __ARM_Unwind_RaiseException &rArr; malloc &rArr; _malloc_internal &rArr; __Heap_Full &rArr; __Heap_ProvideMemory &rArr; _free_internal &rArr; _mutex_release
</UL>
<BR>[Calls]<UL><LI><a href="#[146]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;::operator =(const char*)
<LI><a href="#[147]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxa_end_catch
<LI><a href="#[145]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxa_begin_catch
<LI><a href="#[281]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;operator new(unsigned)
<LI><a href="#[282]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;operator delete (void*)
<LI><a href="#[2a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rw_locale_imp::~__rw_locale_imp()
<LI><a href="#[29b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rw_locale_imp::__rw_locale_imp(const char*, unsigned, unsigned)
</UL>
<BR>[Called By]<UL><LI><a href="#[295]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::locale::locale()
<LI><a href="#[2d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::locale::locale(__rw::__rw_locale_imp*)
<LI><a href="#[2f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::locale::locale(const char*)
<LI><a href="#[2d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::locale::classic()
</UL>

<P><STRONG><a name="[2d2]"></a>std::locale::classic()</STRONG> (Thumb, 56 bytes, Stack size 8 bytes, locale.o(i._ZNSt6locale7classicEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 624 + Unknown Stack Size
<LI>Call Chain = std::locale::classic() &rArr; std::locale::locale(__rw::__rw_locale_imp*) &rArr; std::locale::_C_init() &rArr; __rw::__rw_locale_imp::__rw_locale_imp(const char*, unsigned, unsigned) &rArr; __aeabi_vec_new_cookie &rArr; __cxa_vec_new &rArr; __ARM_array_new_general &rArr; __cxa_rethrow &rArr; _Unwind_RaiseException &rArr; __ARM_Unwind_RaiseException &rArr; malloc &rArr; _malloc_internal &rArr; __Heap_Full &rArr; __Heap_ProvideMemory &rArr; _free_internal &rArr; _mutex_release
</UL>
<BR>[Calls]<UL><LI><a href="#[2c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxa_guard_acquire
<LI><a href="#[155]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_atexit
<LI><a href="#[2d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::locale::locale(__rw::__rw_locale_imp*)
<LI><a href="#[2f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::locale::_C_init()
</UL>
<BR>[Called By]<UL><LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__rw_open_cat_data::__rw_open_cat_data()
<LI><a href="#[2d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__rw_messages_base::_C_get_locale(int) const
<LI><a href="#[2d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__rw_messages_base::_C_cat_close(int) const
</UL>

<P><STRONG><a name="[2f4]"></a>std::locale::locale(const char*)</STRONG> (Thumb, 144 bytes, Stack size 16 bytes, locale.o(i._ZNSt6localeC1EPKc), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[131]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcmp
<LI><a href="#[284]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rw_throw(int, ...)
<LI><a href="#[281]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;operator new(unsigned)
<LI><a href="#[282]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;operator delete (void*)
<LI><a href="#[298]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rw_locale_imp::_C_parse_name(__rw::__rw_locale_vector&lang;std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;&rang;&, const char*)
<LI><a href="#[2a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rw_locale_imp::~__rw_locale_imp()
<LI><a href="#[29b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rw_locale_imp::__rw_locale_imp(const char*, unsigned, unsigned)
<LI><a href="#[2f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::locale::_C_init()
</UL>

<P><STRONG><a name="[42c]"></a>std::locale::locale__sub_object(const char*)</STRONG> (Thumb, 0 bytes, Stack size 16 bytes, locale.o(i._ZNSt6localeC1EPKc), UNUSED)

<P><STRONG><a name="[2d9]"></a>std::locale::locale(__rw::__rw_locale_imp*)</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, locale.o(i._ZNSt6localeC1EPN4__rw15__rw_locale_impE))
<BR><BR>[Stack]<UL><LI>Max Depth = 616 + Unknown Stack Size
<LI>Call Chain = std::locale::locale(__rw::__rw_locale_imp*) &rArr; std::locale::_C_init() &rArr; __rw::__rw_locale_imp::__rw_locale_imp(const char*, unsigned, unsigned) &rArr; __aeabi_vec_new_cookie &rArr; __cxa_vec_new &rArr; __ARM_array_new_general &rArr; __cxa_rethrow &rArr; _Unwind_RaiseException &rArr; __ARM_Unwind_RaiseException &rArr; malloc &rArr; _malloc_internal &rArr; __Heap_Full &rArr; __Heap_ProvideMemory &rArr; _free_internal &rArr; _mutex_release
</UL>
<BR>[Calls]<UL><LI><a href="#[2f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::locale::_C_init()
</UL>
<BR>[Called By]<UL><LI><a href="#[2d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::locale::_C_make_facet(const std::locale::id&, bool, int, __rw::__rw_facet_base*(*)(int, const char*, unsigned)) const
<LI><a href="#[2d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::locale::classic()
<LI><a href="#[2f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::locale::global(const std::locale&)
</UL>

<P><STRONG><a name="[42d]"></a>std::locale::locale__sub_object(__rw::__rw_locale_imp*)</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, locale.o(i._ZNSt6localeC1EPN4__rw15__rw_locale_impE), UNUSED)

<P><STRONG><a name="[2eb]"></a>std::locale::locale(const std::locale&)</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, main.o(i._ZNSt6localeC1ERKS_))
<BR><BR>[Called By]<UL><LI><a href="#[304]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::basic_ios&lang;wchar_t, std::char_traits&lang;wchar_t&rang;&rang;::init(std::basic_streambuf&lang;wchar_t, std::char_traits&lang;wchar_t&rang;&rang;*)
<LI><a href="#[300]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::basic_ios&lang;char, std::char_traits&lang;char&rang;&rang;::init(std::basic_streambuf&lang;char, std::char_traits&lang;char&rang;&rang;*)
<LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__rw_open_cat_data::__rw_open_cat_data()
<LI><a href="#[359]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::basic_ios&lang;char, std::char_traits&lang;char&rang;&rang;::widen(char) const
</UL>

<P><STRONG><a name="[42e]"></a>std::locale::locale__sub_object(const std::locale&)</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, main.o(i._ZNSt6localeC1ERKS_), UNUSED)

<P><STRONG><a name="[2f5]"></a>std::locale::locale(const std::locale&, const char*, int)</STRONG> (Thumb, 172 bytes, Stack size 32 bytes, locale.o(i._ZNSt6localeC1ERKS_PKci), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[29c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_vec_new_cookie
<LI><a href="#[284]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rw_throw(int, ...)
<LI><a href="#[146]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;::operator =(const char*)
<LI><a href="#[296]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rw_locale_vector&lang;std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;&rang;::~__rw_locale_vector()
<LI><a href="#[281]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;operator new(unsigned)
<LI><a href="#[2f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rw_locale_imp::_C_map_category(int)
<LI><a href="#[298]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rw_locale_imp::_C_parse_name(__rw::__rw_locale_vector&lang;std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;&rang;&, const char*)
<LI><a href="#[2f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::locale::_C_remove_facets(int)
<LI><a href="#[29f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rw_locale_imp::__rw_locale_imp(const __rw::__rw_locale_imp&, const char*, unsigned)
</UL>

<P><STRONG><a name="[42f]"></a>std::locale::locale__sub_object(const std::locale&, const char*, int)</STRONG> (Thumb, 0 bytes, Stack size 32 bytes, locale.o(i._ZNSt6localeC1ERKS_PKci), UNUSED)

<P><STRONG><a name="[2f6]"></a>std::locale::locale(const std::locale&, const std::locale&, int)</STRONG> (Thumb, 206 bytes, Stack size 24 bytes, locale.o(i._ZNSt6localeC1ERKS_S1_i), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[29d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;::operator =(const std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;&)
<LI><a href="#[281]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;operator new(unsigned)
<LI><a href="#[2f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rw_locale_imp::_C_map_category(int)
<LI><a href="#[2f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::locale::_C_remove_facets(int)
<LI><a href="#[29f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rw_locale_imp::__rw_locale_imp(const __rw::__rw_locale_imp&, const char*, unsigned)
</UL>

<P><STRONG><a name="[430]"></a>std::locale::locale__sub_object(const std::locale&, const std::locale&, int)</STRONG> (Thumb, 0 bytes, Stack size 24 bytes, locale.o(i._ZNSt6localeC1ERKS_S1_i), UNUSED)

<P><STRONG><a name="[295]"></a>std::locale::locale()</STRONG> (Thumb, 28 bytes, Stack size 16 bytes, ios.o(i._ZNSt6localeC1Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 624 + Unknown Stack Size
<LI>Call Chain = std::locale::locale() &rArr; std::locale::_C_init() &rArr; __rw::__rw_locale_imp::__rw_locale_imp(const char*, unsigned, unsigned) &rArr; __aeabi_vec_new_cookie &rArr; __cxa_vec_new &rArr; __ARM_array_new_general &rArr; __cxa_rethrow &rArr; _Unwind_RaiseException &rArr; __ARM_Unwind_RaiseException &rArr; malloc &rArr; _malloc_internal &rArr; __Heap_Full &rArr; __Heap_ProvideMemory &rArr; _free_internal &rArr; _mutex_release
</UL>
<BR>[Calls]<UL><LI><a href="#[2f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::locale::_C_init()
</UL>
<BR>[Called By]<UL><LI><a href="#[302]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::basic_filebuf&lang;wchar_t, std::char_traits&lang;wchar_t&rang;&rang;::basic_filebuf(int, wchar_t*, long)
<LI><a href="#[2fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::basic_filebuf&lang;char, std::char_traits&lang;char&rang;&rang;::basic_filebuf(int, char*, long)
<LI><a href="#[30a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::ios_base::ios_base()
<LI><a href="#[291]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rw_vfmatstr(char*, unsigned, int, std::__va_list)
</UL>

<P><STRONG><a name="[431]"></a>std::locale::locale__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 16 bytes, ios.o(i._ZNSt6localeC1Ev), UNUSED)

<P><STRONG><a name="[4b]"></a>std::locale::~locale()</STRONG> (Thumb, 66 bytes, Stack size 16 bytes, main.o(i._ZNSt6localeD1Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 568 + Unknown Stack Size
<LI>Call Chain = std::locale::~locale() &rArr; __rw::__rw_locale_vector&lang;std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;&rang;::~__rw_locale_vector() &rArr; __aeabi_vec_delete &rArr; __aeabi_vec_dtor_cookie &rArr; __aeabi_vec_dtor &rArr; __ARM_vec_cleanup_rethrow &rArr; __cxa_rethrow &rArr; _Unwind_RaiseException &rArr; __ARM_Unwind_RaiseException &rArr; malloc &rArr; _malloc_internal &rArr; __Heap_Full &rArr; __Heap_ProvideMemory &rArr; _free_internal &rArr; _mutex_release
</UL>
<BR>[Calls]<UL><LI><a href="#[296]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rw_locale_vector&lang;std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;&rang;::~__rw_locale_vector()
<LI><a href="#[2a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rw_locale_vector&lang;__rw::__rw_facet_base*&rang;::~__rw_locale_vector()
<LI><a href="#[282]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;operator delete (void*)
<LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;operator delete[] (void*)
</UL>
<BR>[Called By]<UL><LI><a href="#[304]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::basic_ios&lang;wchar_t, std::char_traits&lang;wchar_t&rang;&rang;::init(std::basic_streambuf&lang;wchar_t, std::char_traits&lang;wchar_t&rang;&rang;*)
<LI><a href="#[300]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::basic_ios&lang;char, std::char_traits&lang;char&rang;&rang;::init(std::basic_streambuf&lang;char, std::char_traits&lang;char&rang;&rang;*)
<LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::basic_streambuf&lang;wchar_t, std::char_traits&lang;wchar_t&rang;&rang;::~basic_streambuf()
<LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::basic_streambuf&lang;char, std::char_traits&lang;char&rang;&rang;::~basic_streambuf()
<LI><a href="#[ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::ios_base::~ios_base()
<LI><a href="#[2cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rw_locale_vector&lang;std::__rw_open_cat_data&rang;::resize(unsigned)
<LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__rw_open_cat_data::~__rw_open_cat_data()
<LI><a href="#[2d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::locale::_C_make_facet(const std::locale::id&, bool, int, __rw::__rw_facet_base*(*)(int, const char*, unsigned)) const
<LI><a href="#[359]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::basic_ios&lang;char, std::char_traits&lang;char&rang;&rang;::widen(char) const
</UL>
<BR>[Address Reference Count : 1]<UL><LI> locale.o(i._ZNSt6locale7classicEv)
</UL>
<P><STRONG><a name="[432]"></a>std::locale::~locale__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 16 bytes, main.o(i._ZNSt6localeD1Ev), UNUSED)

<P><STRONG><a name="[2d0]"></a>std::locale::operator =(const std::locale&)</STRONG> (Thumb, 50 bytes, Stack size 16 bytes, locale.o(i._ZNSt6localeaSERKS_))
<BR><BR>[Stack]<UL><LI>Max Depth = 576 + Unknown Stack Size
<LI>Call Chain = std::locale::operator =(const std::locale&) &rArr; __rw::__rw_locale_imp::~__rw_locale_imp() &rArr; __rw::__rw_locale_vector&lang;std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;&rang;::~__rw_locale_vector() &rArr; __aeabi_vec_delete &rArr; __aeabi_vec_dtor_cookie &rArr; __aeabi_vec_dtor &rArr; __ARM_vec_cleanup_rethrow &rArr; __cxa_rethrow &rArr; _Unwind_RaiseException &rArr; __ARM_Unwind_RaiseException &rArr; malloc &rArr; _malloc_internal &rArr; __Heap_Full &rArr; __Heap_ProvideMemory &rArr; _free_internal &rArr; _mutex_release
</UL>
<BR>[Calls]<UL><LI><a href="#[282]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;operator delete (void*)
<LI><a href="#[2a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rw_locale_imp::~__rw_locale_imp()
</UL>
<BR>[Called By]<UL><LI><a href="#[2ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__rw_open_cat_data::operator =(const std::__rw_open_cat_data&)
<LI><a href="#[2d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__rw_messages_base::_C_cat_close(int) const
<LI><a href="#[2cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__rw_messages_base::_C_cat_open(const std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;&, const std::locale&) const
</UL>

<P><STRONG><a name="[2f7]"></a>std::codecvt&lang;char, char, std::__mbstate_t&rang;::codecvt(unsigned)</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, ios.o(i._ZNSt7codecvtIccSt11__mbstate_tEC1Ej))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = std::codecvt&lang;char, char, std::__mbstate_t&rang;::codecvt(unsigned)
</UL>
<BR>[Calls]<UL><LI><a href="#[2ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::locale::facet::facet(unsigned, int)
</UL>
<BR>[Called By]<UL><LI><a href="#[32a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rw_create_named_facet&lang;std::codecvt&lang;char, char, std::__mbstate_t&rang;&rang;(T1*, const char*, unsigned)
<LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rw_facet_maker&lang;std::codecvt&lang;char, char, std::__mbstate_t&rang;&rang;::_C_maker_func(int, const char*, unsigned)
</UL>

<P><STRONG><a name="[433]"></a>std::codecvt&lang;char, char, std::__mbstate_t&rang;::codecvt__sub_object(unsigned)</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, ios.o(i._ZNSt7codecvtIccSt11__mbstate_tEC1Ej), UNUSED)

<P><STRONG><a name="[bb]"></a>std::codecvt&lang;char, char, std::__mbstate_t&rang;::~codecvt__deallocating()</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, ios.o(i._ZNSt7codecvtIccSt11__mbstate_tED0Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = std::codecvt&lang;char, char, std::__mbstate_t&rang;::~codecvt__deallocating() &rArr; operator delete (void*) &rArr; free &rArr; _free_internal &rArr; _mutex_release
</UL>
<BR>[Calls]<UL><LI><a href="#[282]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;operator delete (void*)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> ios.o(.constdata__ZTVSt7codecvtIccSt11__mbstate_tE)
</UL>
<P><STRONG><a name="[2f8]"></a>std::codecvt&lang;wchar_t, char, std::__mbstate_t&rang;::codecvt(unsigned)</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, ios.o(i._ZNSt7codecvtIwcSt11__mbstate_tEC1Ej))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = std::codecvt&lang;wchar_t, char, std::__mbstate_t&rang;::codecvt(unsigned)
</UL>
<BR>[Calls]<UL><LI><a href="#[2ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::locale::facet::facet(unsigned, int)
</UL>
<BR>[Called By]<UL><LI><a href="#[32b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rw_create_named_facet&lang;std::codecvt&lang;wchar_t, char, std::__mbstate_t&rang;&rang;(T1*, const char*, unsigned)
<LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rw_facet_maker&lang;std::codecvt&lang;wchar_t, char, std::__mbstate_t&rang;&rang;::_C_maker_func(int, const char*, unsigned)
</UL>

<P><STRONG><a name="[434]"></a>std::codecvt&lang;wchar_t, char, std::__mbstate_t&rang;::codecvt__sub_object(unsigned)</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, ios.o(i._ZNSt7codecvtIwcSt11__mbstate_tEC1Ej), UNUSED)

<P><STRONG><a name="[c2]"></a>std::codecvt&lang;wchar_t, char, std::__mbstate_t&rang;::~codecvt__deallocating()</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, ios.o(i._ZNSt7codecvtIwcSt11__mbstate_tED0Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = std::codecvt&lang;wchar_t, char, std::__mbstate_t&rang;::~codecvt__deallocating() &rArr; operator delete (void*) &rArr; free &rArr; _free_internal &rArr; _mutex_release
</UL>
<BR>[Calls]<UL><LI><a href="#[282]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;operator delete (void*)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> ios.o(.constdata__ZTVSt7codecvtIwcSt11__mbstate_tE)
</UL>
<P><STRONG><a name="[2a8]"></a>std::bad_cast::bad_cast(const std::bad_cast&)</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, bad_cast.o(i._ZNSt8bad_castC1ERKS_))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = std::bad_cast::bad_cast(const std::bad_cast&)
</UL>
<BR>[Calls]<UL><LI><a href="#[2a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::exception::exception(const std::exception&)
</UL>
<BR>[Called By]<UL><LI><a href="#[d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rw_throw_exception(int, char*)
</UL>

<P><STRONG><a name="[435]"></a>std::bad_cast::bad_cast__sub_object(const std::bad_cast&)</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, bad_cast.o(i._ZNSt8bad_castC1ERKS_), UNUSED)

<P><STRONG><a name="[2a7]"></a>std::bad_cast::bad_cast()</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, bad_cast.o(i._ZNSt8bad_castC1Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = std::bad_cast::bad_cast()
</UL>
<BR>[Calls]<UL><LI><a href="#[2a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::exception::exception()
</UL>
<BR>[Called By]<UL><LI><a href="#[d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rw_throw_exception(int, char*)
</UL>

<P><STRONG><a name="[436]"></a>std::bad_cast::bad_cast__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, bad_cast.o(i._ZNSt8bad_castC1Ev), UNUSED)

<P><STRONG><a name="[c9]"></a>std::bad_cast::~bad_cast__deallocating()</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, bad_cast.o(i._ZNSt8bad_castD0Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = std::bad_cast::~bad_cast__deallocating() &rArr; operator delete (void*) &rArr; free &rArr; _free_internal &rArr; _mutex_release
</UL>
<BR>[Calls]<UL><LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::bad_cast::~bad_cast()
<LI><a href="#[282]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;operator delete (void*)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> bad_cast.o(.constdata__ZTVSt8bad_cast)
</UL>
<P><STRONG><a name="[3d]"></a>std::bad_cast::~bad_cast()</STRONG> (Thumb, 8 bytes, Stack size 8 bytes, bad_cast.o(i._ZNSt8bad_castD1Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = std::bad_cast::~bad_cast()
</UL>
<BR>[Called By]<UL><LI><a href="#[d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rw_throw_exception(int, char*)
<LI><a href="#[c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::bad_cast::~bad_cast__deallocating()
</UL>
<BR>[Address Reference Count : 2]<UL><LI> rwthrowproc_impl.o(i._ZN4__rw20__rw_throw_exceptionEiPc)
<LI> bad_cast.o(.constdata__ZTVSt8bad_cast)
</UL>
<P><STRONG><a name="[437]"></a>std::bad_cast::~bad_cast__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, bad_cast.o(i._ZNSt8bad_castD1Ev), UNUSED)

<P><STRONG><a name="[2f9]"></a>std::ios_base::_C_copyfmt(const std::ios_base&)</STRONG> (Thumb, 234 bytes, Stack size 56 bytes, ios.o(i._ZNSt8ios_base10_C_copyfmtERKS_), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[2fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::ios_base::_C_fire_event(std::ios_base::event, bool)
<LI><a href="#[290]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;operator new[] (unsigned)
<LI><a href="#[1d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
<LI><a href="#[1e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxa_rethrow
<LI><a href="#[145]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxa_begin_catch
<LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;operator delete[] (void*)
</UL>

<P><STRONG><a name="[2be]"></a>std::ios_base::badbit_set::badbit_set(const std::ios_base::badbit_set&)</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, rwthrowproc_impl.o(i._ZNSt8ios_base10badbit_setC1ERKS0_))
<BR><BR>[Stack]<UL><LI>Max Depth = 240 + Unknown Stack Size
<LI>Call Chain = std::ios_base::badbit_set::badbit_set(const std::ios_base::badbit_set&) &rArr; std::ios_base::failure::failure(const std::ios_base::failure&) &rArr; std::__rw_exception::__rw_exception(const std::__rw_exception&) &rArr; std::__rw_exception::_C_assign(const char*, unsigned) &rArr; __cxa_begin_catch &rArr; __ARM::get_foreign_intermediary(__cxa_exception*, _Unwind_Control_Block*) &rArr; __cxa_allocate_exception &rArr; __ARM::call_terminate_handler(_Unwind_Control_Block*) &rArr; std::terminate() &rArr; __cxa_get_globals &rArr; __ARM_exceptions_buffer_init &rArr; malloc &rArr; _malloc_internal &rArr; __Heap_Full &rArr; __Heap_ProvideMemory &rArr; _free_internal &rArr; _mutex_release
</UL>
<BR>[Calls]<UL><LI><a href="#[2c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::ios_base::failure::failure(const std::ios_base::failure&)
</UL>
<BR>[Called By]<UL><LI><a href="#[d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rw_throw_exception(int, char*)
</UL>

<P><STRONG><a name="[438]"></a>std::ios_base::badbit_set::badbit_set__sub_object(const std::ios_base::badbit_set&)</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, rwthrowproc_impl.o(i._ZNSt8ios_base10badbit_setC1ERKS0_), UNUSED)

<P><STRONG><a name="[5d]"></a>std::ios_base::badbit_set::~badbit_set__deallocating()</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, rwthrowproc_impl.o(i._ZNSt8ios_base10badbit_setD0Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = std::ios_base::badbit_set::~badbit_set__deallocating() &rArr; std::ios_base::badbit_set::~badbit_set() &rArr; std::ios_base::failure::~failure() &rArr; std::__rw_exception::~__rw_exception() &rArr; operator delete[] (void*) &rArr; operator delete (void*) &rArr; free &rArr; _free_internal &rArr; _mutex_release
</UL>
<BR>[Calls]<UL><LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::ios_base::badbit_set::~badbit_set()
<LI><a href="#[282]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;operator delete (void*)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> rwthrowproc_impl.o(.constdata__ZTVNSt8ios_base10badbit_setE)
</UL>
<P><STRONG><a name="[48]"></a>std::ios_base::badbit_set::~badbit_set()</STRONG> (Thumb, 8 bytes, Stack size 8 bytes, rwthrowproc_impl.o(i._ZNSt8ios_base10badbit_setD1Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = std::ios_base::badbit_set::~badbit_set() &rArr; std::ios_base::failure::~failure() &rArr; std::__rw_exception::~__rw_exception() &rArr; operator delete[] (void*) &rArr; operator delete (void*) &rArr; free &rArr; _free_internal &rArr; _mutex_release
</UL>
<BR>[Calls]<UL><LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::ios_base::failure::~failure()
</UL>
<BR>[Called By]<UL><LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::ios_base::badbit_set::~badbit_set__deallocating()
</UL>
<BR>[Address Reference Count : 2]<UL><LI> rwthrowproc_impl.o(i._ZN4__rw20__rw_throw_exceptionEiPc)
<LI> rwthrowproc_impl.o(.constdata__ZTVNSt8ios_base10badbit_setE)
</UL>
<P><STRONG><a name="[439]"></a>std::ios_base::badbit_set::~badbit_set__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, rwthrowproc_impl.o(i._ZNSt8ios_base10badbit_setD1Ev), UNUSED)

<P><STRONG><a name="[2bf]"></a>std::ios_base::eofbit_set::eofbit_set(const std::ios_base::eofbit_set&)</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, rwthrowproc_impl.o(i._ZNSt8ios_base10eofbit_setC1ERKS0_))
<BR><BR>[Stack]<UL><LI>Max Depth = 240 + Unknown Stack Size
<LI>Call Chain = std::ios_base::eofbit_set::eofbit_set(const std::ios_base::eofbit_set&) &rArr; std::ios_base::failure::failure(const std::ios_base::failure&) &rArr; std::__rw_exception::__rw_exception(const std::__rw_exception&) &rArr; std::__rw_exception::_C_assign(const char*, unsigned) &rArr; __cxa_begin_catch &rArr; __ARM::get_foreign_intermediary(__cxa_exception*, _Unwind_Control_Block*) &rArr; __cxa_allocate_exception &rArr; __ARM::call_terminate_handler(_Unwind_Control_Block*) &rArr; std::terminate() &rArr; __cxa_get_globals &rArr; __ARM_exceptions_buffer_init &rArr; malloc &rArr; _malloc_internal &rArr; __Heap_Full &rArr; __Heap_ProvideMemory &rArr; _free_internal &rArr; _mutex_release
</UL>
<BR>[Calls]<UL><LI><a href="#[2c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::ios_base::failure::failure(const std::ios_base::failure&)
</UL>
<BR>[Called By]<UL><LI><a href="#[d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rw_throw_exception(int, char*)
</UL>

<P><STRONG><a name="[43a]"></a>std::ios_base::eofbit_set::eofbit_set__sub_object(const std::ios_base::eofbit_set&)</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, rwthrowproc_impl.o(i._ZNSt8ios_base10eofbit_setC1ERKS0_), UNUSED)

<P><STRONG><a name="[5f]"></a>std::ios_base::eofbit_set::~eofbit_set__deallocating()</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, rwthrowproc_impl.o(i._ZNSt8ios_base10eofbit_setD0Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = std::ios_base::eofbit_set::~eofbit_set__deallocating() &rArr; std::ios_base::eofbit_set::~eofbit_set() &rArr; std::ios_base::failure::~failure() &rArr; std::__rw_exception::~__rw_exception() &rArr; operator delete[] (void*) &rArr; operator delete (void*) &rArr; free &rArr; _free_internal &rArr; _mutex_release
</UL>
<BR>[Calls]<UL><LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::ios_base::eofbit_set::~eofbit_set()
<LI><a href="#[282]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;operator delete (void*)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> rwthrowproc_impl.o(.constdata__ZTVNSt8ios_base10eofbit_setE)
</UL>
<P><STRONG><a name="[49]"></a>std::ios_base::eofbit_set::~eofbit_set()</STRONG> (Thumb, 8 bytes, Stack size 8 bytes, rwthrowproc_impl.o(i._ZNSt8ios_base10eofbit_setD1Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = std::ios_base::eofbit_set::~eofbit_set() &rArr; std::ios_base::failure::~failure() &rArr; std::__rw_exception::~__rw_exception() &rArr; operator delete[] (void*) &rArr; operator delete (void*) &rArr; free &rArr; _free_internal &rArr; _mutex_release
</UL>
<BR>[Calls]<UL><LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::ios_base::failure::~failure()
</UL>
<BR>[Called By]<UL><LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::ios_base::eofbit_set::~eofbit_set__deallocating()
</UL>
<BR>[Address Reference Count : 2]<UL><LI> rwthrowproc_impl.o(i._ZN4__rw20__rw_throw_exceptionEiPc)
<LI> rwthrowproc_impl.o(.constdata__ZTVNSt8ios_base10eofbit_setE)
</UL>
<P><STRONG><a name="[43b]"></a>std::ios_base::eofbit_set::~eofbit_set__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, rwthrowproc_impl.o(i._ZNSt8ios_base10eofbit_setD1Ev), UNUSED)

<P><STRONG><a name="[2bd]"></a>std::ios_base::failbit_set::failbit_set(const std::ios_base::failbit_set&)</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, rwthrowproc_impl.o(i._ZNSt8ios_base11failbit_setC1ERKS0_))
<BR><BR>[Stack]<UL><LI>Max Depth = 240 + Unknown Stack Size
<LI>Call Chain = std::ios_base::failbit_set::failbit_set(const std::ios_base::failbit_set&) &rArr; std::ios_base::failure::failure(const std::ios_base::failure&) &rArr; std::__rw_exception::__rw_exception(const std::__rw_exception&) &rArr; std::__rw_exception::_C_assign(const char*, unsigned) &rArr; __cxa_begin_catch &rArr; __ARM::get_foreign_intermediary(__cxa_exception*, _Unwind_Control_Block*) &rArr; __cxa_allocate_exception &rArr; __ARM::call_terminate_handler(_Unwind_Control_Block*) &rArr; std::terminate() &rArr; __cxa_get_globals &rArr; __ARM_exceptions_buffer_init &rArr; malloc &rArr; _malloc_internal &rArr; __Heap_Full &rArr; __Heap_ProvideMemory &rArr; _free_internal &rArr; _mutex_release
</UL>
<BR>[Calls]<UL><LI><a href="#[2c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::ios_base::failure::failure(const std::ios_base::failure&)
</UL>
<BR>[Called By]<UL><LI><a href="#[d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rw_throw_exception(int, char*)
</UL>

<P><STRONG><a name="[43c]"></a>std::ios_base::failbit_set::failbit_set__sub_object(const std::ios_base::failbit_set&)</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, rwthrowproc_impl.o(i._ZNSt8ios_base11failbit_setC1ERKS0_), UNUSED)

<P><STRONG><a name="[60]"></a>std::ios_base::failbit_set::~failbit_set__deallocating()</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, rwthrowproc_impl.o(i._ZNSt8ios_base11failbit_setD0Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = std::ios_base::failbit_set::~failbit_set__deallocating() &rArr; std::ios_base::failbit_set::~failbit_set() &rArr; std::ios_base::failure::~failure() &rArr; std::__rw_exception::~__rw_exception() &rArr; operator delete[] (void*) &rArr; operator delete (void*) &rArr; free &rArr; _free_internal &rArr; _mutex_release
</UL>
<BR>[Calls]<UL><LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::ios_base::failbit_set::~failbit_set()
<LI><a href="#[282]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;operator delete (void*)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> rwthrowproc_impl.o(.constdata__ZTVNSt8ios_base11failbit_setE)
</UL>
<P><STRONG><a name="[47]"></a>std::ios_base::failbit_set::~failbit_set()</STRONG> (Thumb, 8 bytes, Stack size 8 bytes, rwthrowproc_impl.o(i._ZNSt8ios_base11failbit_setD1Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = std::ios_base::failbit_set::~failbit_set() &rArr; std::ios_base::failure::~failure() &rArr; std::__rw_exception::~__rw_exception() &rArr; operator delete[] (void*) &rArr; operator delete (void*) &rArr; free &rArr; _free_internal &rArr; _mutex_release
</UL>
<BR>[Calls]<UL><LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::ios_base::failure::~failure()
</UL>
<BR>[Called By]<UL><LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::ios_base::failbit_set::~failbit_set__deallocating()
</UL>
<BR>[Address Reference Count : 2]<UL><LI> rwthrowproc_impl.o(i._ZN4__rw20__rw_throw_exceptionEiPc)
<LI> rwthrowproc_impl.o(.constdata__ZTVNSt8ios_base11failbit_setE)
</UL>
<P><STRONG><a name="[43d]"></a>std::ios_base::failbit_set::~failbit_set__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, rwthrowproc_impl.o(i._ZNSt8ios_base11failbit_setD1Ev), UNUSED)

<P><STRONG><a name="[2fa]"></a>std::ios_base::_C_fire_event(std::ios_base::event, bool)</STRONG> (Thumb, 130 bytes, Stack size 56 bytes, ios.o(i._ZNSt8ios_base13_C_fire_eventENS_5eventEb))
<BR><BR>[Stack]<UL><LI>Max Depth = 872 + Unknown Stack Size
<LI>Call Chain = std::ios_base::_C_fire_event(std::ios_base::event, bool) &rArr; std::ios_base::_C_unsafe_clear(int, int) &rArr; __rw::__rw_throw(int, ...) &rArr; std::__rw_exception::_C_vformat(int, std::__va_list) &rArr; __rw::__rw_vfmatstr(char*, unsigned, int, std::__va_list) &rArr; std::locale::locale() &rArr; std::locale::_C_init() &rArr; __rw::__rw_locale_imp::__rw_locale_imp(const char*, unsigned, unsigned) &rArr; __aeabi_vec_new_cookie &rArr; __cxa_vec_new &rArr; __ARM_array_new_general &rArr; __cxa_rethrow &rArr; _Unwind_RaiseException &rArr; __ARM_Unwind_RaiseException &rArr; malloc &rArr; _malloc_internal &rArr; __Heap_Full &rArr; __Heap_ProvideMemory &rArr; _free_internal &rArr; _mutex_release
</UL>
<BR>[Calls]<UL><LI><a href="#[2fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::return_temporary_buffer&lang;std::ios_base::_C_event_cb&rang;(T1*)
<LI><a href="#[2c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rw_reallocate_temp_buffer(void*, unsigned)
<LI><a href="#[1d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
<LI><a href="#[2fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::ios_base::_C_unsafe_clear(int, int)
<LI><a href="#[1e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxa_rethrow
<LI><a href="#[145]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxa_begin_catch
</UL>
<BR>[Called By]<UL><LI><a href="#[ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::ios_base::~ios_base()
<LI><a href="#[2f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::ios_base::_C_copyfmt(const std::ios_base&)
</UL>

<P><STRONG><a name="[2fb]"></a>std::ios_base::_C_unsafe_clear(int, int)</STRONG> (Thumb, 116 bytes, Stack size 24 bytes, ios.o(i._ZNSt8ios_base15_C_unsafe_clearEii))
<BR><BR>[Stack]<UL><LI>Max Depth = 816 + Unknown Stack Size
<LI>Call Chain = std::ios_base::_C_unsafe_clear(int, int) &rArr; __rw::__rw_throw(int, ...) &rArr; std::__rw_exception::_C_vformat(int, std::__va_list) &rArr; __rw::__rw_vfmatstr(char*, unsigned, int, std::__va_list) &rArr; std::locale::locale() &rArr; std::locale::_C_init() &rArr; __rw::__rw_locale_imp::__rw_locale_imp(const char*, unsigned, unsigned) &rArr; __aeabi_vec_new_cookie &rArr; __cxa_vec_new &rArr; __ARM_array_new_general &rArr; __cxa_rethrow &rArr; _Unwind_RaiseException &rArr; __ARM_Unwind_RaiseException &rArr; malloc &rArr; _malloc_internal &rArr; __Heap_Full &rArr; __Heap_ProvideMemory &rArr; _free_internal &rArr; _mutex_release
</UL>
<BR>[Calls]<UL><LI><a href="#[284]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rw_throw(int, ...)
</UL>
<BR>[Called By]<UL><LI><a href="#[309]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::ios_base::pword(int)
<LI><a href="#[308]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::ios_base::iword(int)
<LI><a href="#[2fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::ios_base::register_callback(void(*)(std::ios_base::event, std::ios_base&, int), int)
<LI><a href="#[2fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::ios_base::_C_fire_event(std::ios_base::event, bool)
<LI><a href="#[38e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::basic_ios&lang;char, std::char_traits&lang;char&rang;&rang;::clear(int, int)
</UL>

<P><STRONG><a name="[2fd]"></a>std::ios_base::register_callback(void(*)(std::ios_base::event, std::ios_base&, int), int)</STRONG> (Thumb, 126 bytes, Stack size 48 bytes, ios.o(i._ZNSt8ios_base17register_callbackEPFvNS_5eventERS_iEi), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[290]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;operator new[] (unsigned)
<LI><a href="#[20a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[1d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
<LI><a href="#[2fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::ios_base::_C_unsafe_clear(int, int)
<LI><a href="#[147]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxa_end_catch
<LI><a href="#[145]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxa_begin_catch
<LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;operator delete[] (void*)
</UL>

<P><STRONG><a name="[154]"></a>std::ios_base::Init::Init()</STRONG> (Thumb, 732 bytes, Stack size 40 bytes, ios.o(i._ZNSt8ios_base4InitC1Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 944 + Unknown Stack Size
<LI>Call Chain = std::ios_base::Init::Init() &rArr; std::basic_ostream&lang;wchar_t, std::char_traits&lang;wchar_t&rang;&rang;::basic_ostream(std::basic_streambuf&lang;wchar_t, std::char_traits&lang;wchar_t&rang;&rang;*) &rArr; std::basic_ios&lang;wchar_t, std::char_traits&lang;wchar_t&rang;&rang;::init(std::basic_streambuf&lang;wchar_t, std::char_traits&lang;wchar_t&rang;&rang;*) &rArr; std::locale::_C_use_facet(const std::locale::id&, bool, int, __rw::__rw_facet_base*(*)(int, const char*, unsigned)) const &rArr; std::locale::_C_make_facet(const std::locale::id&, bool, int, __rw::__rw_facet_base*(*)(int, const char*, unsigned)) const &rArr; __rw::__rw_throw(int, ...) &rArr; std::__rw_exception::_C_vformat(int, std::__va_list) &rArr; __rw::__rw_vfmatstr(char*, unsigned, int, std::__va_list) &rArr; std::locale::locale() &rArr; std::locale::_C_init() &rArr; __rw::__rw_locale_imp::__rw_locale_imp(const char*, unsigned, unsigned) &rArr; __aeabi_vec_new_cookie &rArr; __cxa_vec_new &rArr; __ARM_array_new_general &rArr; __cxa_rethrow &rArr; _Unwind_RaiseException &rArr; __ARM_Unwind_RaiseException &rArr; malloc &rArr; _malloc_internal &rArr; __Heap_Full &rArr; __Heap_ProvideMemory &rArr; _free_internal &rArr; _mutex_release
</UL>
<BR>[Calls]<UL><LI><a href="#[303]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::basic_ios&lang;wchar_t, std::char_traits&lang;wchar_t&rang;&rang;::basic_ios()
<LI><a href="#[304]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::basic_ios&lang;wchar_t, std::char_traits&lang;wchar_t&rang;&rang;::init(std::basic_streambuf&lang;wchar_t, std::char_traits&lang;wchar_t&rang;&rang;*)
<LI><a href="#[2ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::basic_ios&lang;char, std::char_traits&lang;char&rang;&rang;::basic_ios()
<LI><a href="#[300]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::basic_ios&lang;char, std::char_traits&lang;char&rang;&rang;::init(std::basic_streambuf&lang;char, std::char_traits&lang;char&rang;&rang;*)
<LI><a href="#[305]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::basic_ostream&lang;wchar_t, std::char_traits&lang;wchar_t&rang;&rang;::basic_ostream(std::basic_streambuf&lang;wchar_t, std::char_traits&lang;wchar_t&rang;&rang;*)
<LI><a href="#[302]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::basic_filebuf&lang;wchar_t, std::char_traits&lang;wchar_t&rang;&rang;::basic_filebuf(int, wchar_t*, long)
<LI><a href="#[2fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::basic_filebuf&lang;char, std::char_traits&lang;char&rang;&rang;::basic_filebuf(int, char*, long)
<LI><a href="#[301]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::basic_ostream&lang;char, std::char_traits&lang;char&rang;&rang;::basic_ostream(std::basic_streambuf&lang;char, std::char_traits&lang;char&rang;&rang;*)
<LI><a href="#[285]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;operator new(unsigned, void*)
</UL>
<BR>[Called By]<UL><LI><a href="#[d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__sti___8_main_cpp
</UL>

<P><STRONG><a name="[43e]"></a>std::ios_base::Init::Init__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 40 bytes, ios.o(i._ZNSt8ios_base4InitC1Ev), UNUSED)

<P><STRONG><a name="[25]"></a>std::ios_base::Init::~Init()</STRONG> (Thumb, 138 bytes, Stack size 16 bytes, ios.o(i._ZNSt8ios_base4InitD1Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = std::ios_base::Init::~Init()
</UL>
<BR>[Calls]<UL><LI><a href="#[307]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::basic_streambuf&lang;wchar_t, std::char_traits&lang;wchar_t&rang;&rang;::pubsetbuf(wchar_t*, long)
<LI><a href="#[306]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::basic_streambuf&lang;char, std::char_traits&lang;char&rang;&rang;::pubsetbuf(char*, long)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> main.o(.text)
</UL>
<P><STRONG><a name="[43f]"></a>std::ios_base::Init::~Init__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 16 bytes, ios.o(i._ZNSt8ios_base4InitD1Ev), UNUSED)

<P><STRONG><a name="[308]"></a>std::ios_base::iword(int)</STRONG> (Thumb, 116 bytes, Stack size 32 bytes, ios.o(i._ZNSt8ios_base5iwordEi), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[290]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;operator new[] (unsigned)
<LI><a href="#[20a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[1d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
<LI><a href="#[2fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::ios_base::_C_unsafe_clear(int, int)
<LI><a href="#[147]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxa_end_catch
<LI><a href="#[145]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxa_begin_catch
<LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;operator delete[] (void*)
</UL>

<P><STRONG><a name="[309]"></a>std::ios_base::pword(int)</STRONG> (Thumb, 116 bytes, Stack size 32 bytes, ios.o(i._ZNSt8ios_base5pwordEi), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[290]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;operator new[] (unsigned)
<LI><a href="#[20a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[1d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
<LI><a href="#[2fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::ios_base::_C_unsafe_clear(int, int)
<LI><a href="#[147]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxa_end_catch
<LI><a href="#[145]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxa_begin_catch
<LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;operator delete[] (void*)
</UL>

<P><STRONG><a name="[14e]"></a>std::ios_base::width(long)</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, main.o(i._ZNSt8ios_base5widthEl))
<BR><BR>[Called By]<UL><LI><a href="#[141]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::operator &lang;&lang;&lang;std::char_traits&lang;char&rang;&rang;(std::basic_ostream&lang;char, T1&rang;&, const char*)
<LI><a href="#[135]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;stl_test()
</UL>

<P><STRONG><a name="[2bc]"></a>std::ios_base::failure::failure(const char*)</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, rwthrowproc_impl.o(i._ZNSt8ios_base7failureC1EPKc))
<BR><BR>[Stack]<UL><LI>Max Depth = 232 + Unknown Stack Size
<LI>Call Chain = std::ios_base::failure::failure(const char*) &rArr; std::__rw_exception::__rw_exception(const char*) &rArr; std::__rw_exception::_C_assign(const char*, unsigned) &rArr; __cxa_begin_catch &rArr; __ARM::get_foreign_intermediary(__cxa_exception*, _Unwind_Control_Block*) &rArr; __cxa_allocate_exception &rArr; __ARM::call_terminate_handler(_Unwind_Control_Block*) &rArr; std::terminate() &rArr; __cxa_get_globals &rArr; __ARM_exceptions_buffer_init &rArr; malloc &rArr; _malloc_internal &rArr; __Heap_Full &rArr; __Heap_ProvideMemory &rArr; _free_internal &rArr; _mutex_release
</UL>
<BR>[Calls]<UL><LI><a href="#[2e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__rw_exception::__rw_exception(const char*)
</UL>
<BR>[Called By]<UL><LI><a href="#[d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rw_throw_exception(int, char*)
</UL>

<P><STRONG><a name="[440]"></a>std::ios_base::failure::failure__sub_object(const char*)</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, rwthrowproc_impl.o(i._ZNSt8ios_base7failureC1EPKc), UNUSED)

<P><STRONG><a name="[2c0]"></a>std::ios_base::failure::failure(const std::ios_base::failure&)</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, rwthrowproc_impl.o(i._ZNSt8ios_base7failureC1ERKS0_))
<BR><BR>[Stack]<UL><LI>Max Depth = 232 + Unknown Stack Size
<LI>Call Chain = std::ios_base::failure::failure(const std::ios_base::failure&) &rArr; std::__rw_exception::__rw_exception(const std::__rw_exception&) &rArr; std::__rw_exception::_C_assign(const char*, unsigned) &rArr; __cxa_begin_catch &rArr; __ARM::get_foreign_intermediary(__cxa_exception*, _Unwind_Control_Block*) &rArr; __cxa_allocate_exception &rArr; __ARM::call_terminate_handler(_Unwind_Control_Block*) &rArr; std::terminate() &rArr; __cxa_get_globals &rArr; __ARM_exceptions_buffer_init &rArr; malloc &rArr; _malloc_internal &rArr; __Heap_Full &rArr; __Heap_ProvideMemory &rArr; _free_internal &rArr; _mutex_release
</UL>
<BR>[Calls]<UL><LI><a href="#[2e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__rw_exception::__rw_exception(const std::__rw_exception&)
</UL>
<BR>[Called By]<UL><LI><a href="#[d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rw_throw_exception(int, char*)
<LI><a href="#[2bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::ios_base::failbit_set::failbit_set(const std::ios_base::failbit_set&)
<LI><a href="#[2bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::ios_base::eofbit_set::eofbit_set(const std::ios_base::eofbit_set&)
<LI><a href="#[2be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::ios_base::badbit_set::badbit_set(const std::ios_base::badbit_set&)
</UL>

<P><STRONG><a name="[441]"></a>std::ios_base::failure::failure__sub_object(const std::ios_base::failure&)</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, rwthrowproc_impl.o(i._ZNSt8ios_base7failureC1ERKS0_), UNUSED)

<P><STRONG><a name="[61]"></a>std::ios_base::failure::~failure__deallocating()</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, rwthrowproc_impl.o(i._ZNSt8ios_base7failureD0Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = std::ios_base::failure::~failure__deallocating() &rArr; std::ios_base::failure::~failure() &rArr; std::__rw_exception::~__rw_exception() &rArr; operator delete[] (void*) &rArr; operator delete (void*) &rArr; free &rArr; _free_internal &rArr; _mutex_release
</UL>
<BR>[Calls]<UL><LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::ios_base::failure::~failure()
<LI><a href="#[282]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;operator delete (void*)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> rwthrowproc_impl.o(.constdata__ZTVNSt8ios_base7failureE)
</UL>
<P><STRONG><a name="[4a]"></a>std::ios_base::failure::~failure()</STRONG> (Thumb, 8 bytes, Stack size 8 bytes, rwthrowproc_impl.o(i._ZNSt8ios_base7failureD1Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = std::ios_base::failure::~failure() &rArr; std::__rw_exception::~__rw_exception() &rArr; operator delete[] (void*) &rArr; operator delete (void*) &rArr; free &rArr; _free_internal &rArr; _mutex_release
</UL>
<BR>[Calls]<UL><LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__rw_exception::~__rw_exception()
</UL>
<BR>[Called By]<UL><LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::ios_base::failure::~failure__deallocating()
<LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::ios_base::failbit_set::~failbit_set()
<LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::ios_base::eofbit_set::~eofbit_set()
<LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::ios_base::badbit_set::~badbit_set()
</UL>
<BR>[Address Reference Count : 2]<UL><LI> rwthrowproc_impl.o(i._ZN4__rw20__rw_throw_exceptionEiPc)
<LI> rwthrowproc_impl.o(.constdata__ZTVNSt8ios_base7failureE)
</UL>
<P><STRONG><a name="[442]"></a>std::ios_base::failure::~failure__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, rwthrowproc_impl.o(i._ZNSt8ios_base7failureD1Ev), UNUSED)

<P><STRONG><a name="[30a]"></a>std::ios_base::ios_base()</STRONG> (Thumb, 30 bytes, Stack size 8 bytes, ios.o(i._ZNSt8ios_baseC1Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 632 + Unknown Stack Size
<LI>Call Chain = std::ios_base::ios_base() &rArr; std::locale::locale() &rArr; std::locale::_C_init() &rArr; __rw::__rw_locale_imp::__rw_locale_imp(const char*, unsigned, unsigned) &rArr; __aeabi_vec_new_cookie &rArr; __cxa_vec_new &rArr; __ARM_array_new_general &rArr; __cxa_rethrow &rArr; _Unwind_RaiseException &rArr; __ARM_Unwind_RaiseException &rArr; malloc &rArr; _malloc_internal &rArr; __Heap_Full &rArr; __Heap_ProvideMemory &rArr; _free_internal &rArr; _mutex_release
</UL>
<BR>[Calls]<UL><LI><a href="#[295]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::locale::locale()
</UL>
<BR>[Called By]<UL><LI><a href="#[303]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::basic_ios&lang;wchar_t, std::char_traits&lang;wchar_t&rang;&rang;::basic_ios()
<LI><a href="#[2ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::basic_ios&lang;char, std::char_traits&lang;char&rang;&rang;::basic_ios()
</UL>

<P><STRONG><a name="[443]"></a>std::ios_base::ios_base__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, ios.o(i._ZNSt8ios_baseC1Ev), UNUSED)

<P><STRONG><a name="[cb]"></a>std::ios_base::~ios_base__deallocating()</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, ios.o(i._ZNSt8ios_baseD0Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 896 + Unknown Stack Size
<LI>Call Chain = std::ios_base::~ios_base__deallocating() &rArr; std::ios_base::~ios_base() &rArr; std::ios_base::_C_fire_event(std::ios_base::event, bool) &rArr; std::ios_base::_C_unsafe_clear(int, int) &rArr; __rw::__rw_throw(int, ...) &rArr; std::__rw_exception::_C_vformat(int, std::__va_list) &rArr; __rw::__rw_vfmatstr(char*, unsigned, int, std::__va_list) &rArr; std::locale::locale() &rArr; std::locale::_C_init() &rArr; __rw::__rw_locale_imp::__rw_locale_imp(const char*, unsigned, unsigned) &rArr; __aeabi_vec_new_cookie &rArr; __cxa_vec_new &rArr; __ARM_array_new_general &rArr; __cxa_rethrow &rArr; _Unwind_RaiseException &rArr; __ARM_Unwind_RaiseException &rArr; malloc &rArr; _malloc_internal &rArr; __Heap_Full &rArr; __Heap_ProvideMemory &rArr; _free_internal &rArr; _mutex_release
</UL>
<BR>[Calls]<UL><LI><a href="#[ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::ios_base::~ios_base()
<LI><a href="#[282]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;operator delete (void*)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> ios.o(.constdata__ZTVSt8ios_base)
</UL>
<P><STRONG><a name="[ca]"></a>std::ios_base::~ios_base()</STRONG> (Thumb, 50 bytes, Stack size 16 bytes, ios.o(i._ZNSt8ios_baseD1Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 888 + Unknown Stack Size
<LI>Call Chain = std::ios_base::~ios_base() &rArr; std::ios_base::_C_fire_event(std::ios_base::event, bool) &rArr; std::ios_base::_C_unsafe_clear(int, int) &rArr; __rw::__rw_throw(int, ...) &rArr; std::__rw_exception::_C_vformat(int, std::__va_list) &rArr; __rw::__rw_vfmatstr(char*, unsigned, int, std::__va_list) &rArr; std::locale::locale() &rArr; std::locale::_C_init() &rArr; __rw::__rw_locale_imp::__rw_locale_imp(const char*, unsigned, unsigned) &rArr; __aeabi_vec_new_cookie &rArr; __cxa_vec_new &rArr; __ARM_array_new_general &rArr; __cxa_rethrow &rArr; _Unwind_RaiseException &rArr; __ARM_Unwind_RaiseException &rArr; malloc &rArr; _malloc_internal &rArr; __Heap_Full &rArr; __Heap_ProvideMemory &rArr; _free_internal &rArr; _mutex_release
</UL>
<BR>[Calls]<UL><LI><a href="#[2fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::ios_base::_C_fire_event(std::ios_base::event, bool)
<LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::locale::~locale()
<LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;operator delete[] (void*)
</UL>
<BR>[Called By]<UL><LI><a href="#[d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::basic_ios&lang;wchar_t, std::char_traits&lang;wchar_t&rang;&rang;::~basic_ios()
<LI><a href="#[d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::basic_ios&lang;char, std::char_traits&lang;char&rang;&rang;::~basic_ios()
<LI><a href="#[cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::ios_base::~ios_base__deallocating()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> ios.o(.constdata__ZTVSt8ios_base)
</UL>
<P><STRONG><a name="[444]"></a>std::ios_base::~ios_base__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 16 bytes, ios.o(i._ZNSt8ios_baseD1Ev), UNUSED)

<P><STRONG><a name="[cd]"></a>std::messages&lang;char&rang;::~messages__deallocating()</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, rwstdexcept.o(i._ZNSt8messagesIcED0Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = std::messages&lang;char&rang;::~messages__deallocating() &rArr; std::messages&lang;char&rang;::~messages() &rArr; std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;::~basic_string() &rArr; std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;::_C_unlink() &rArr; __rw::__rw_deallocate(void*, unsigned, int) &rArr; operator delete (void*) &rArr; free &rArr; _free_internal &rArr; _mutex_release
</UL>
<BR>[Calls]<UL><LI><a href="#[282]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;operator delete (void*)
<LI><a href="#[cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::messages&lang;char&rang;::~messages()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> rwstdexcept.o(.constdata__ZTVSt8messagesIcE)
</UL>
<P><STRONG><a name="[cc]"></a>std::messages&lang;char&rang;::~messages()</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, rwstdexcept.o(i._ZNSt8messagesIcED1Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = std::messages&lang;char&rang;::~messages() &rArr; std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;::~basic_string() &rArr; std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;::_C_unlink() &rArr; __rw::__rw_deallocate(void*, unsigned, int) &rArr; operator delete (void*) &rArr; free &rArr; _free_internal &rArr; _mutex_release
</UL>
<BR>[Calls]<UL><LI><a href="#[28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;::~basic_string()
</UL>
<BR>[Called By]<UL><LI><a href="#[cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::messages&lang;char&rang;::~messages__deallocating()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> rwstdexcept.o(.constdata__ZTVSt8messagesIcE)
</UL>
<P><STRONG><a name="[445]"></a>std::messages&lang;char&rang;::~messages__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, rwstdexcept.o(i._ZNSt8messagesIcED1Ev), UNUSED)

<P><STRONG><a name="[30b]"></a>std::numpunct&lang;char&rang;::~numpunct__deallocating()</STRONG> (Thumb, 18 bytes, Stack size 16 bytes, main.o(i._ZNSt8numpunctIcED0Ev), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[30c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::numpunct&lang;char&rang;::~numpunct()
<LI><a href="#[282]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;operator delete (void*)
</UL>

<P><STRONG><a name="[30c]"></a>std::numpunct&lang;char&rang;::~numpunct()</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, main.o(i._ZNSt8numpunctIcED1Ev), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::locale::facet::~facet()
<LI><a href="#[2a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rw_numpunct_impl&lang;char&rang;::~__rw_numpunct_impl()
</UL>
<BR>[Called By]<UL><LI><a href="#[30b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::numpunct&lang;char&rang;::~numpunct__deallocating()
</UL>

<P><STRONG><a name="[446]"></a>std::numpunct&lang;char&rang;::~numpunct__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, main.o(i._ZNSt8numpunctIcED1Ev), UNUSED)

<P><STRONG><a name="[27a]"></a>std::bad_alloc::bad_alloc(const std::bad_alloc&)</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, bad_alloc_cctor.o(i._ZNSt9bad_allocC1ERKS_))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = std::bad_alloc::bad_alloc(const std::bad_alloc&)
</UL>
<BR>[Calls]<UL><LI><a href="#[2a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::exception::exception(const std::exception&)
</UL>
<BR>[Called By]<UL><LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__default_new_handler()
<LI><a href="#[d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rw_throw_exception(int, char*)
</UL>

<P><STRONG><a name="[447]"></a>std::bad_alloc::bad_alloc__sub_object(const std::bad_alloc&)</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, bad_alloc_cctor.o(i._ZNSt9bad_allocC1ERKS_), UNUSED)

<P><STRONG><a name="[279]"></a>std::bad_alloc::bad_alloc()</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, bad_alloc_ctor.o(i._ZNSt9bad_allocC1Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = std::bad_alloc::bad_alloc()
</UL>
<BR>[Calls]<UL><LI><a href="#[2a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::exception::exception()
</UL>
<BR>[Called By]<UL><LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__default_new_handler()
<LI><a href="#[d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rw_throw_exception(int, char*)
</UL>

<P><STRONG><a name="[448]"></a>std::bad_alloc::bad_alloc__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, bad_alloc_ctor.o(i._ZNSt9bad_allocC1Ev), UNUSED)

<P><STRONG><a name="[d0]"></a>std::bad_alloc::~bad_alloc__deallocating()</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, bad_alloc_dtor.o(i._ZNSt9bad_allocD0Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = std::bad_alloc::~bad_alloc__deallocating() &rArr; operator delete (void*) &rArr; free &rArr; _free_internal &rArr; _mutex_release
</UL>
<BR>[Calls]<UL><LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::bad_alloc::~bad_alloc()
<LI><a href="#[282]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;operator delete (void*)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> bad_alloc_dtor.o(.constdata__ZTVSt9bad_alloc)
</UL>
<P><STRONG><a name="[3b]"></a>std::bad_alloc::~bad_alloc()</STRONG> (Thumb, 8 bytes, Stack size 8 bytes, bad_alloc_dtor.o(i._ZNSt9bad_allocD1Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = std::bad_alloc::~bad_alloc()
</UL>
<BR>[Called By]<UL><LI><a href="#[d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::bad_alloc::~bad_alloc__deallocating()
<LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__default_new_handler()
<LI><a href="#[d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rw_throw_exception(int, char*)
</UL>
<BR>[Address Reference Count : 3]<UL><LI> bad_alloc_dtor.o(.constdata__ZTVSt9bad_alloc)
<LI> rwthrowproc_impl.o(i._ZN4__rw20__rw_throw_exceptionEiPc)
<LI> newhandler.o(i._Z21__default_new_handlerv)
</UL>
<P><STRONG><a name="[449]"></a>std::bad_alloc::~bad_alloc__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, bad_alloc_dtor.o(i._ZNSt9bad_allocD1Ev), UNUSED)

<P><STRONG><a name="[d2]"></a>std::basic_ios&lang;char, std::char_traits&lang;char&rang;&rang;::~basic_ios__deallocating()</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, ios.o(i._ZNSt9basic_iosIcSt11char_traitsIcEED0Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 896 + Unknown Stack Size
<LI>Call Chain = std::basic_ios&lang;char, std::char_traits&lang;char&rang;&rang;::~basic_ios__deallocating() &rArr; std::basic_ios&lang;char, std::char_traits&lang;char&rang;&rang;::~basic_ios() &rArr; std::ios_base::~ios_base() &rArr; std::ios_base::_C_fire_event(std::ios_base::event, bool) &rArr; std::ios_base::_C_unsafe_clear(int, int) &rArr; __rw::__rw_throw(int, ...) &rArr; std::__rw_exception::_C_vformat(int, std::__va_list) &rArr; __rw::__rw_vfmatstr(char*, unsigned, int, std::__va_list) &rArr; std::locale::locale() &rArr; std::locale::_C_init() &rArr; __rw::__rw_locale_imp::__rw_locale_imp(const char*, unsigned, unsigned) &rArr; __aeabi_vec_new_cookie &rArr; __cxa_vec_new &rArr; __ARM_array_new_general &rArr; __cxa_rethrow &rArr; _Unwind_RaiseException &rArr; __ARM_Unwind_RaiseException &rArr; malloc &rArr; _malloc_internal &rArr; __Heap_Full &rArr; __Heap_ProvideMemory &rArr; _free_internal &rArr; _mutex_release
</UL>
<BR>[Calls]<UL><LI><a href="#[d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::basic_ios&lang;char, std::char_traits&lang;char&rang;&rang;::~basic_ios()
<LI><a href="#[282]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;operator delete (void*)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> ios.o(.constdata__ZTVSt9basic_iosIcSt11char_traitsIcEE)
</UL>
<P><STRONG><a name="[d1]"></a>std::basic_ios&lang;char, std::char_traits&lang;char&rang;&rang;::~basic_ios()</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, ios.o(i._ZNSt9basic_iosIcSt11char_traitsIcEED1Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 888 + Unknown Stack Size
<LI>Call Chain = std::basic_ios&lang;char, std::char_traits&lang;char&rang;&rang;::~basic_ios() &rArr; std::ios_base::~ios_base() &rArr; std::ios_base::_C_fire_event(std::ios_base::event, bool) &rArr; std::ios_base::_C_unsafe_clear(int, int) &rArr; __rw::__rw_throw(int, ...) &rArr; std::__rw_exception::_C_vformat(int, std::__va_list) &rArr; __rw::__rw_vfmatstr(char*, unsigned, int, std::__va_list) &rArr; std::locale::locale() &rArr; std::locale::_C_init() &rArr; __rw::__rw_locale_imp::__rw_locale_imp(const char*, unsigned, unsigned) &rArr; __aeabi_vec_new_cookie &rArr; __cxa_vec_new &rArr; __ARM_array_new_general &rArr; __cxa_rethrow &rArr; _Unwind_RaiseException &rArr; __ARM_Unwind_RaiseException &rArr; malloc &rArr; _malloc_internal &rArr; __Heap_Full &rArr; __Heap_ProvideMemory &rArr; _free_internal &rArr; _mutex_release
</UL>
<BR>[Calls]<UL><LI><a href="#[ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::ios_base::~ios_base()
</UL>
<BR>[Called By]<UL><LI><a href="#[d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::basic_ios&lang;char, std::char_traits&lang;char&rang;&rang;::~basic_ios__deallocating()
<LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::basic_ostream&lang;char, std::char_traits&lang;char&rang;&rang;::~basic_ostream()
<LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::basic_istream&lang;char, std::char_traits&lang;char&rang;&rang;::~basic_istream()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> ios.o(.constdata__ZTVSt9basic_iosIcSt11char_traitsIcEE)
</UL>
<P><STRONG><a name="[44a]"></a>std::basic_ios&lang;char, std::char_traits&lang;char&rang;&rang;::~basic_ios__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, ios.o(i._ZNSt9basic_iosIcSt11char_traitsIcEED1Ev), UNUSED)

<P><STRONG><a name="[d4]"></a>std::basic_ios&lang;wchar_t, std::char_traits&lang;wchar_t&rang;&rang;::~basic_ios__deallocating()</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, ios.o(i._ZNSt9basic_iosIwSt11char_traitsIwEED0Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 896 + Unknown Stack Size
<LI>Call Chain = std::basic_ios&lang;wchar_t, std::char_traits&lang;wchar_t&rang;&rang;::~basic_ios__deallocating() &rArr; std::basic_ios&lang;wchar_t, std::char_traits&lang;wchar_t&rang;&rang;::~basic_ios() &rArr; std::ios_base::~ios_base() &rArr; std::ios_base::_C_fire_event(std::ios_base::event, bool) &rArr; std::ios_base::_C_unsafe_clear(int, int) &rArr; __rw::__rw_throw(int, ...) &rArr; std::__rw_exception::_C_vformat(int, std::__va_list) &rArr; __rw::__rw_vfmatstr(char*, unsigned, int, std::__va_list) &rArr; std::locale::locale() &rArr; std::locale::_C_init() &rArr; __rw::__rw_locale_imp::__rw_locale_imp(const char*, unsigned, unsigned) &rArr; __aeabi_vec_new_cookie &rArr; __cxa_vec_new &rArr; __ARM_array_new_general &rArr; __cxa_rethrow &rArr; _Unwind_RaiseException &rArr; __ARM_Unwind_RaiseException &rArr; malloc &rArr; _malloc_internal &rArr; __Heap_Full &rArr; __Heap_ProvideMemory &rArr; _free_internal &rArr; _mutex_release
</UL>
<BR>[Calls]<UL><LI><a href="#[d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::basic_ios&lang;wchar_t, std::char_traits&lang;wchar_t&rang;&rang;::~basic_ios()
<LI><a href="#[282]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;operator delete (void*)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> ios.o(.constdata__ZTVSt9basic_iosIwSt11char_traitsIwEE)
</UL>
<P><STRONG><a name="[d3]"></a>std::basic_ios&lang;wchar_t, std::char_traits&lang;wchar_t&rang;&rang;::~basic_ios()</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, ios.o(i._ZNSt9basic_iosIwSt11char_traitsIwEED1Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 888 + Unknown Stack Size
<LI>Call Chain = std::basic_ios&lang;wchar_t, std::char_traits&lang;wchar_t&rang;&rang;::~basic_ios() &rArr; std::ios_base::~ios_base() &rArr; std::ios_base::_C_fire_event(std::ios_base::event, bool) &rArr; std::ios_base::_C_unsafe_clear(int, int) &rArr; __rw::__rw_throw(int, ...) &rArr; std::__rw_exception::_C_vformat(int, std::__va_list) &rArr; __rw::__rw_vfmatstr(char*, unsigned, int, std::__va_list) &rArr; std::locale::locale() &rArr; std::locale::_C_init() &rArr; __rw::__rw_locale_imp::__rw_locale_imp(const char*, unsigned, unsigned) &rArr; __aeabi_vec_new_cookie &rArr; __cxa_vec_new &rArr; __ARM_array_new_general &rArr; __cxa_rethrow &rArr; _Unwind_RaiseException &rArr; __ARM_Unwind_RaiseException &rArr; malloc &rArr; _malloc_internal &rArr; __Heap_Full &rArr; __Heap_ProvideMemory &rArr; _free_internal &rArr; _mutex_release
</UL>
<BR>[Calls]<UL><LI><a href="#[ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::ios_base::~ios_base()
</UL>
<BR>[Called By]<UL><LI><a href="#[d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::basic_ios&lang;wchar_t, std::char_traits&lang;wchar_t&rang;&rang;::~basic_ios__deallocating()
<LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::basic_ostream&lang;wchar_t, std::char_traits&lang;wchar_t&rang;&rang;::~basic_ostream()
<LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::basic_istream&lang;wchar_t, std::char_traits&lang;wchar_t&rang;&rang;::~basic_istream()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> ios.o(.constdata__ZTVSt9basic_iosIwSt11char_traitsIwEE)
</UL>
<P><STRONG><a name="[44b]"></a>std::basic_ios&lang;wchar_t, std::char_traits&lang;wchar_t&rang;&rang;::~basic_ios__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, ios.o(i._ZNSt9basic_iosIwSt11char_traitsIwEED1Ev), UNUSED)

<P><STRONG><a name="[2a6]"></a>std::exception::exception(const std::exception&)</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, exception_cctor.o(i._ZNSt9exceptionC1ERKS_))
<BR><BR>[Called By]<UL><LI><a href="#[d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rw_throw_exception(int, char*)
<LI><a href="#[2a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::bad_cast::bad_cast(const std::bad_cast&)
<LI><a href="#[22a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::bad_typeid::bad_typeid(const std::bad_typeid&)
<LI><a href="#[22d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::bad_exception::bad_exception(const std::bad_exception&)
<LI><a href="#[27a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::bad_alloc::bad_alloc(const std::bad_alloc&)
<LI><a href="#[2e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__rw_exception::__rw_exception(const std::__rw_exception&)
</UL>

<P><STRONG><a name="[44c]"></a>std::exception::exception__sub_object(const std::exception&)</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, exception_cctor.o(i._ZNSt9exceptionC1ERKS_), UNUSED)

<P><STRONG><a name="[2a5]"></a>std::exception::exception()</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, exception_ctor.o(i._ZNSt9exceptionC1Ev))
<BR><BR>[Called By]<UL><LI><a href="#[d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rw_throw_exception(int, char*)
<LI><a href="#[2a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::bad_cast::bad_cast()
<LI><a href="#[229]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::bad_typeid::bad_typeid()
<LI><a href="#[22c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::bad_exception::bad_exception()
<LI><a href="#[279]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::bad_alloc::bad_alloc()
<LI><a href="#[2e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__rw_exception::__rw_exception(const char*)
<LI><a href="#[286]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__rw_exception::__rw_exception()
<LI><a href="#[2ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__rw_exception::__rw_exception(const std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;&)
</UL>

<P><STRONG><a name="[44d]"></a>std::exception::exception__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, exception_ctor.o(i._ZNSt9exceptionC1Ev), UNUSED)

<P><STRONG><a name="[a]"></a>std::exception::~exception()</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, exception_dtor.o(i._ZNSt9exceptionD1Ev))
<BR>[Address Reference Count : 2]<UL><LI> exception_dtor.o(.constdata__ZTVSt9exception)
<LI> rwthrowproc_impl.o(i._ZN4__rw20__rw_throw_exceptionEiPc)
</UL>
<P><STRONG><a name="[44e]"></a>std::exception::~exception__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, exception_dtor.o(i._ZNSt9exceptionD1Ev), UNUSED)

<P><STRONG><a name="[2ce]"></a>std::__rw_get_cats()</STRONG> (Thumb, 44 bytes, Stack size 8 bytes, messages.o(i._ZSt13__rw_get_catsv))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = std::__rw_get_cats() &rArr; __aeabi_atexit &rArr; malloc &rArr; _malloc_internal &rArr; __Heap_Full &rArr; __Heap_ProvideMemory &rArr; _free_internal &rArr; _mutex_release
</UL>
<BR>[Calls]<UL><LI><a href="#[2c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxa_guard_acquire
<LI><a href="#[155]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_atexit
</UL>
<BR>[Called By]<UL><LI><a href="#[2d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__rw_messages_base::_C_get_message(int, int, int) const
<LI><a href="#[2d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__rw_messages_base::_C_get_locale(int) const
<LI><a href="#[2d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__rw_messages_base::_C_cat_close(int) const
<LI><a href="#[2cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__rw_messages_base::_C_cat_open(const std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;&, const std::locale&) const
</UL>

<P><STRONG><a name="[65]"></a>thunk{v:0,-12} to std::basic_istream&lang;char, std::char_traits&lang;char&rang;&rang;::~basic_istream__deallocating()</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, ios.o(i._ZTv0_n12_NSiD0Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 904 + Unknown Stack Size
<LI>Call Chain = thunk{v:0,-12} to std::basic_istream&lang;char, std::char_traits&lang;char&rang;&rang;::~basic_istream__deallocating() &rArr; std::basic_istream&lang;char, std::char_traits&lang;char&rang;&rang;::~basic_istream__deallocating() &rArr; std::basic_istream&lang;char, std::char_traits&lang;char&rang;&rang;::~basic_istream() &rArr; std::basic_ios&lang;char, std::char_traits&lang;char&rang;&rang;::~basic_ios() &rArr; std::ios_base::~ios_base() &rArr; std::ios_base::_C_fire_event(std::ios_base::event, bool) &rArr; std::ios_base::_C_unsafe_clear(int, int) &rArr; __rw::__rw_throw(int, ...) &rArr; std::__rw_exception::_C_vformat(int, std::__va_list) &rArr; __rw::__rw_vfmatstr(char*, unsigned, int, std::__va_list) &rArr; std::locale::locale() &rArr; std::locale::_C_init() &rArr; __rw::__rw_locale_imp::__rw_locale_imp(const char*, unsigned, unsigned) &rArr; __aeabi_vec_new_cookie &rArr; __cxa_vec_new &rArr; __ARM_array_new_general &rArr; __cxa_rethrow &rArr; _Unwind_RaiseException &rArr; __ARM_Unwind_RaiseException &rArr; malloc &rArr; _malloc_internal &rArr; __Heap_Full &rArr; __Heap_ProvideMemory &rArr; _free_internal &rArr; _mutex_release
</UL>
<BR>[Calls]<UL><LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::basic_istream&lang;char, std::char_traits&lang;char&rang;&rang;::~basic_istream__deallocating()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> ios.o(.constdata__ZTVSi)
</UL>
<P><STRONG><a name="[64]"></a>thunk{v:0,-12} to std::basic_istream&lang;char, std::char_traits&lang;char&rang;&rang;::~basic_istream()</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, ios.o(i._ZTv0_n12_NSiD1Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 896 + Unknown Stack Size
<LI>Call Chain = thunk{v:0,-12} to std::basic_istream&lang;char, std::char_traits&lang;char&rang;&rang;::~basic_istream() &rArr; std::basic_istream&lang;char, std::char_traits&lang;char&rang;&rang;::~basic_istream() &rArr; std::basic_ios&lang;char, std::char_traits&lang;char&rang;&rang;::~basic_ios() &rArr; std::ios_base::~ios_base() &rArr; std::ios_base::_C_fire_event(std::ios_base::event, bool) &rArr; std::ios_base::_C_unsafe_clear(int, int) &rArr; __rw::__rw_throw(int, ...) &rArr; std::__rw_exception::_C_vformat(int, std::__va_list) &rArr; __rw::__rw_vfmatstr(char*, unsigned, int, std::__va_list) &rArr; std::locale::locale() &rArr; std::locale::_C_init() &rArr; __rw::__rw_locale_imp::__rw_locale_imp(const char*, unsigned, unsigned) &rArr; __aeabi_vec_new_cookie &rArr; __cxa_vec_new &rArr; __ARM_array_new_general &rArr; __cxa_rethrow &rArr; _Unwind_RaiseException &rArr; __ARM_Unwind_RaiseException &rArr; malloc &rArr; _malloc_internal &rArr; __Heap_Full &rArr; __Heap_ProvideMemory &rArr; _free_internal &rArr; _mutex_release
</UL>
<BR>[Calls]<UL><LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::basic_istream&lang;char, std::char_traits&lang;char&rang;&rang;::~basic_istream()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> ios.o(.constdata__ZTVSi)
</UL>
<P><STRONG><a name="[69]"></a>thunk{v:0,-12} to std::basic_ostream&lang;char, std::char_traits&lang;char&rang;&rang;::~basic_ostream__deallocating()</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, ios.o(i._ZTv0_n12_NSoD0Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 904 + Unknown Stack Size
<LI>Call Chain = thunk{v:0,-12} to std::basic_ostream&lang;char, std::char_traits&lang;char&rang;&rang;::~basic_ostream__deallocating() &rArr; std::basic_ostream&lang;char, std::char_traits&lang;char&rang;&rang;::~basic_ostream__deallocating() &rArr; std::basic_ostream&lang;char, std::char_traits&lang;char&rang;&rang;::~basic_ostream() &rArr; std::basic_ios&lang;char, std::char_traits&lang;char&rang;&rang;::~basic_ios() &rArr; std::ios_base::~ios_base() &rArr; std::ios_base::_C_fire_event(std::ios_base::event, bool) &rArr; std::ios_base::_C_unsafe_clear(int, int) &rArr; __rw::__rw_throw(int, ...) &rArr; std::__rw_exception::_C_vformat(int, std::__va_list) &rArr; __rw::__rw_vfmatstr(char*, unsigned, int, std::__va_list) &rArr; std::locale::locale() &rArr; std::locale::_C_init() &rArr; __rw::__rw_locale_imp::__rw_locale_imp(const char*, unsigned, unsigned) &rArr; __aeabi_vec_new_cookie &rArr; __cxa_vec_new &rArr; __ARM_array_new_general &rArr; __cxa_rethrow &rArr; _Unwind_RaiseException &rArr; __ARM_Unwind_RaiseException &rArr; malloc &rArr; _malloc_internal &rArr; __Heap_Full &rArr; __Heap_ProvideMemory &rArr; _free_internal &rArr; _mutex_release
</UL>
<BR>[Calls]<UL><LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::basic_ostream&lang;char, std::char_traits&lang;char&rang;&rang;::~basic_ostream__deallocating()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> ios.o(.constdata__ZTVSo)
</UL>
<P><STRONG><a name="[68]"></a>thunk{v:0,-12} to std::basic_ostream&lang;char, std::char_traits&lang;char&rang;&rang;::~basic_ostream()</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, ios.o(i._ZTv0_n12_NSoD1Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 896 + Unknown Stack Size
<LI>Call Chain = thunk{v:0,-12} to std::basic_ostream&lang;char, std::char_traits&lang;char&rang;&rang;::~basic_ostream() &rArr; std::basic_ostream&lang;char, std::char_traits&lang;char&rang;&rang;::~basic_ostream() &rArr; std::basic_ios&lang;char, std::char_traits&lang;char&rang;&rang;::~basic_ios() &rArr; std::ios_base::~ios_base() &rArr; std::ios_base::_C_fire_event(std::ios_base::event, bool) &rArr; std::ios_base::_C_unsafe_clear(int, int) &rArr; __rw::__rw_throw(int, ...) &rArr; std::__rw_exception::_C_vformat(int, std::__va_list) &rArr; __rw::__rw_vfmatstr(char*, unsigned, int, std::__va_list) &rArr; std::locale::locale() &rArr; std::locale::_C_init() &rArr; __rw::__rw_locale_imp::__rw_locale_imp(const char*, unsigned, unsigned) &rArr; __aeabi_vec_new_cookie &rArr; __cxa_vec_new &rArr; __ARM_array_new_general &rArr; __cxa_rethrow &rArr; _Unwind_RaiseException &rArr; __ARM_Unwind_RaiseException &rArr; malloc &rArr; _malloc_internal &rArr; __Heap_Full &rArr; __Heap_ProvideMemory &rArr; _free_internal &rArr; _mutex_release
</UL>
<BR>[Calls]<UL><LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::basic_ostream&lang;char, std::char_traits&lang;char&rang;&rang;::~basic_ostream()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> ios.o(.constdata__ZTVSo)
</UL>
<P><STRONG><a name="[95]"></a>thunk{v:0,-12} to std::basic_istream&lang;wchar_t, std::char_traits&lang;wchar_t&rang;&rang;::~basic_istream__deallocating()</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, ios.o(i._ZTv0_n12_NSt13basic_istreamIwSt11char_traitsIwEED0Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 904 + Unknown Stack Size
<LI>Call Chain = thunk{v:0,-12} to std::basic_istream&lang;wchar_t, std::char_traits&lang;wchar_t&rang;&rang;::~basic_istream__deallocating() &rArr; std::basic_istream&lang;wchar_t, std::char_traits&lang;wchar_t&rang;&rang;::~basic_istream__deallocating() &rArr; std::basic_istream&lang;wchar_t, std::char_traits&lang;wchar_t&rang;&rang;::~basic_istream() &rArr; std::basic_ios&lang;wchar_t, std::char_traits&lang;wchar_t&rang;&rang;::~basic_ios() &rArr; std::ios_base::~ios_base() &rArr; std::ios_base::_C_fire_event(std::ios_base::event, bool) &rArr; std::ios_base::_C_unsafe_clear(int, int) &rArr; __rw::__rw_throw(int, ...) &rArr; std::__rw_exception::_C_vformat(int, std::__va_list) &rArr; __rw::__rw_vfmatstr(char*, unsigned, int, std::__va_list) &rArr; std::locale::locale() &rArr; std::locale::_C_init() &rArr; __rw::__rw_locale_imp::__rw_locale_imp(const char*, unsigned, unsigned) &rArr; __aeabi_vec_new_cookie &rArr; __cxa_vec_new &rArr; __ARM_array_new_general &rArr; __cxa_rethrow &rArr; _Unwind_RaiseException &rArr; __ARM_Unwind_RaiseException &rArr; malloc &rArr; _malloc_internal &rArr; __Heap_Full &rArr; __Heap_ProvideMemory &rArr; _free_internal &rArr; _mutex_release
</UL>
<BR>[Calls]<UL><LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::basic_istream&lang;wchar_t, std::char_traits&lang;wchar_t&rang;&rang;::~basic_istream__deallocating()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> ios.o(.constdata__ZTVSt13basic_istreamIwSt11char_traitsIwEE)
</UL>
<P><STRONG><a name="[94]"></a>thunk{v:0,-12} to std::basic_istream&lang;wchar_t, std::char_traits&lang;wchar_t&rang;&rang;::~basic_istream()</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, ios.o(i._ZTv0_n12_NSt13basic_istreamIwSt11char_traitsIwEED1Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 896 + Unknown Stack Size
<LI>Call Chain = thunk{v:0,-12} to std::basic_istream&lang;wchar_t, std::char_traits&lang;wchar_t&rang;&rang;::~basic_istream() &rArr; std::basic_istream&lang;wchar_t, std::char_traits&lang;wchar_t&rang;&rang;::~basic_istream() &rArr; std::basic_ios&lang;wchar_t, std::char_traits&lang;wchar_t&rang;&rang;::~basic_ios() &rArr; std::ios_base::~ios_base() &rArr; std::ios_base::_C_fire_event(std::ios_base::event, bool) &rArr; std::ios_base::_C_unsafe_clear(int, int) &rArr; __rw::__rw_throw(int, ...) &rArr; std::__rw_exception::_C_vformat(int, std::__va_list) &rArr; __rw::__rw_vfmatstr(char*, unsigned, int, std::__va_list) &rArr; std::locale::locale() &rArr; std::locale::_C_init() &rArr; __rw::__rw_locale_imp::__rw_locale_imp(const char*, unsigned, unsigned) &rArr; __aeabi_vec_new_cookie &rArr; __cxa_vec_new &rArr; __ARM_array_new_general &rArr; __cxa_rethrow &rArr; _Unwind_RaiseException &rArr; __ARM_Unwind_RaiseException &rArr; malloc &rArr; _malloc_internal &rArr; __Heap_Full &rArr; __Heap_ProvideMemory &rArr; _free_internal &rArr; _mutex_release
</UL>
<BR>[Calls]<UL><LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::basic_istream&lang;wchar_t, std::char_traits&lang;wchar_t&rang;&rang;::~basic_istream()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> ios.o(.constdata__ZTVSt13basic_istreamIwSt11char_traitsIwEE)
</UL>
<P><STRONG><a name="[99]"></a>thunk{v:0,-12} to std::basic_ostream&lang;wchar_t, std::char_traits&lang;wchar_t&rang;&rang;::~basic_ostream__deallocating()</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, ios.o(i._ZTv0_n12_NSt13basic_ostreamIwSt11char_traitsIwEED0Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 904 + Unknown Stack Size
<LI>Call Chain = thunk{v:0,-12} to std::basic_ostream&lang;wchar_t, std::char_traits&lang;wchar_t&rang;&rang;::~basic_ostream__deallocating() &rArr; std::basic_ostream&lang;wchar_t, std::char_traits&lang;wchar_t&rang;&rang;::~basic_ostream__deallocating() &rArr; std::basic_ostream&lang;wchar_t, std::char_traits&lang;wchar_t&rang;&rang;::~basic_ostream() &rArr; std::basic_ios&lang;wchar_t, std::char_traits&lang;wchar_t&rang;&rang;::~basic_ios() &rArr; std::ios_base::~ios_base() &rArr; std::ios_base::_C_fire_event(std::ios_base::event, bool) &rArr; std::ios_base::_C_unsafe_clear(int, int) &rArr; __rw::__rw_throw(int, ...) &rArr; std::__rw_exception::_C_vformat(int, std::__va_list) &rArr; __rw::__rw_vfmatstr(char*, unsigned, int, std::__va_list) &rArr; std::locale::locale() &rArr; std::locale::_C_init() &rArr; __rw::__rw_locale_imp::__rw_locale_imp(const char*, unsigned, unsigned) &rArr; __aeabi_vec_new_cookie &rArr; __cxa_vec_new &rArr; __ARM_array_new_general &rArr; __cxa_rethrow &rArr; _Unwind_RaiseException &rArr; __ARM_Unwind_RaiseException &rArr; malloc &rArr; _malloc_internal &rArr; __Heap_Full &rArr; __Heap_ProvideMemory &rArr; _free_internal &rArr; _mutex_release
</UL>
<BR>[Calls]<UL><LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::basic_ostream&lang;wchar_t, std::char_traits&lang;wchar_t&rang;&rang;::~basic_ostream__deallocating()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> ios.o(.constdata__ZTVSt13basic_ostreamIwSt11char_traitsIwEE)
</UL>
<P><STRONG><a name="[98]"></a>thunk{v:0,-12} to std::basic_ostream&lang;wchar_t, std::char_traits&lang;wchar_t&rang;&rang;::~basic_ostream()</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, ios.o(i._ZTv0_n12_NSt13basic_ostreamIwSt11char_traitsIwEED1Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 896 + Unknown Stack Size
<LI>Call Chain = thunk{v:0,-12} to std::basic_ostream&lang;wchar_t, std::char_traits&lang;wchar_t&rang;&rang;::~basic_ostream() &rArr; std::basic_ostream&lang;wchar_t, std::char_traits&lang;wchar_t&rang;&rang;::~basic_ostream() &rArr; std::basic_ios&lang;wchar_t, std::char_traits&lang;wchar_t&rang;&rang;::~basic_ios() &rArr; std::ios_base::~ios_base() &rArr; std::ios_base::_C_fire_event(std::ios_base::event, bool) &rArr; std::ios_base::_C_unsafe_clear(int, int) &rArr; __rw::__rw_throw(int, ...) &rArr; std::__rw_exception::_C_vformat(int, std::__va_list) &rArr; __rw::__rw_vfmatstr(char*, unsigned, int, std::__va_list) &rArr; std::locale::locale() &rArr; std::locale::_C_init() &rArr; __rw::__rw_locale_imp::__rw_locale_imp(const char*, unsigned, unsigned) &rArr; __aeabi_vec_new_cookie &rArr; __cxa_vec_new &rArr; __ARM_array_new_general &rArr; __cxa_rethrow &rArr; _Unwind_RaiseException &rArr; __ARM_Unwind_RaiseException &rArr; malloc &rArr; _malloc_internal &rArr; __Heap_Full &rArr; __Heap_ProvideMemory &rArr; _free_internal &rArr; _mutex_release
</UL>
<BR>[Calls]<UL><LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::basic_ostream&lang;wchar_t, std::char_traits&lang;wchar_t&rang;&rang;::~basic_ostream()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> ios.o(.constdata__ZTVSt13basic_ostreamIwSt11char_traitsIwEE)
</UL>
<P><STRONG><a name="[4e]"></a>operator delete[] (void*)</STRONG> (Thumb, 8 bytes, Stack size 8 bytes, array_del.o(i._ZdaPv))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = operator delete[] (void*) &rArr; operator delete (void*) &rArr; free &rArr; _free_internal &rArr; _mutex_release
</UL>
<BR>[Calls]<UL><LI><a href="#[282]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;operator delete (void*)
</UL>
<BR>[Called By]<UL><LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::basic_filebuf&lang;wchar_t, std::char_traits&lang;wchar_t&rang;&rang;::~basic_filebuf()
<LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::basic_filebuf&lang;wchar_t, std::char_traits&lang;wchar_t&rang;&rang;::setbuf(wchar_t*, long)
<LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::basic_filebuf&lang;char, std::char_traits&lang;char&rang;&rang;::~basic_filebuf()
<LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::basic_filebuf&lang;char, std::char_traits&lang;char&rang;&rang;::setbuf(char*, long)
<LI><a href="#[ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::ios_base::~ios_base()
<LI><a href="#[309]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::ios_base::pword(int)
<LI><a href="#[308]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::ios_base::iword(int)
<LI><a href="#[2fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::ios_base::register_callback(void(*)(std::ios_base::event, std::ios_base&, int), int)
<LI><a href="#[2f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::ios_base::_C_copyfmt(const std::ios_base&)
<LI><a href="#[b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::ctype&lang;char&rang;::~ctype()
<LI><a href="#[a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::collate_byname&lang;char&rang;::do_transform(const char*, const char*) const
<LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::collate_byname&lang;char&rang;::do_compare(const char*, const char*, const char*, const char*) const
<LI><a href="#[2c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rw_use_c_lib_locale::~__rw_use_c_lib_locale()
<LI><a href="#[d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rw_throw_exception(int, char*)
<LI><a href="#[2a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rw_locale_vector&lang;__rw::__rw_facet_base*&rang;::~__rw_locale_vector()
<LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::locale::~locale()
<LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rw_locale_vector&lang;__rw::__rw_cat*&rang;::~__rw_locale_vector()
<LI><a href="#[29e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_vec_delete
<LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__rw_exception::~__rw_exception()
<LI><a href="#[2aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__rw_exception::_C_assign(const char*, unsigned)
<LI><a href="#[287]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__rw_exception::_C_vformat(int, std::__va_list)
<LI><a href="#[2e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__rw_exception::_C_vformat(const char*, std::__va_list)
<LI><a href="#[291]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rw_vfmatstr(char*, unsigned, int, std::__va_list)
<LI><a href="#[28f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rw_vfmatstr(char*, unsigned, const char*, std::__va_list)
<LI><a href="#[2d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rw_locale_vector&lang;__rw::__rw_facet_base*&rang;::resize(unsigned, __rw::__rw_facet_base*const &)
<LI><a href="#[2a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rw_locale_imp::~__rw_locale_imp()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> cxa_vec_new.o(i.__cxa_vec_new)
</UL>
<P><STRONG><a name="[282]"></a>operator delete (void*)</STRONG> (Thumb, 8 bytes, Stack size 8 bytes, delete.o(i._ZdlPv))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = operator delete (void*) &rArr; free &rArr; _free_internal &rArr; _mutex_release
</UL>
<BR>[Calls]<UL><LI><a href="#[1f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;free
</UL>
<BR>[Called By]<UL><LI><a href="#[ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::basic_streambuf&lang;wchar_t, std::char_traits&lang;wchar_t&rang;&rang;::~basic_streambuf__deallocating()
<LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::basic_streambuf&lang;char, std::char_traits&lang;char&rang;&rang;::~basic_streambuf__deallocating()
<LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::basic_filebuf&lang;wchar_t, std::char_traits&lang;wchar_t&rang;&rang;::~basic_filebuf__deallocating()
<LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::basic_filebuf&lang;char, std::char_traits&lang;char&rang;&rang;::~basic_filebuf__deallocating()
<LI><a href="#[d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::basic_ios&lang;wchar_t, std::char_traits&lang;wchar_t&rang;&rang;::~basic_ios__deallocating()
<LI><a href="#[d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::basic_ios&lang;char, std::char_traits&lang;char&rang;&rang;::~basic_ios__deallocating()
<LI><a href="#[cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::ios_base::~ios_base__deallocating()
<LI><a href="#[c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::codecvt&lang;wchar_t, char, std::__mbstate_t&rang;::~codecvt__deallocating()
<LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::codecvt&lang;char, char, std::__mbstate_t&rang;::~codecvt__deallocating()
<LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::locale::facet::~facet__deallocating()
<LI><a href="#[b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::ctype&lang;wchar_t&rang;::~ctype__deallocating()
<LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::basic_ostream&lang;wchar_t, std::char_traits&lang;wchar_t&rang;&rang;::~basic_ostream__deallocating()
<LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::basic_istream&lang;wchar_t, std::char_traits&lang;wchar_t&rang;&rang;::~basic_istream__deallocating()
<LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::basic_ostream&lang;char, std::char_traits&lang;char&rang;&rang;::~basic_ostream__deallocating()
<LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::basic_istream&lang;char, std::char_traits&lang;char&rang;&rang;::~basic_istream__deallocating()
<LI><a href="#[2c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rw_reallocate_temp_buffer(void*, unsigned)
<LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::ctype&lang;char&rang;::~ctype__deallocating()
<LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::collate_byname&lang;char&rang;::~collate_byname__deallocating()
<LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::ctype_byname&lang;char&rang;::~ctype_byname__deallocating()
<LI><a href="#[d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::bad_alloc::~bad_alloc__deallocating()
<LI><a href="#[283]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;catclose(__rw::__rw_cat*)
<LI><a href="#[280]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;catopen(const char*, int)
<LI><a href="#[297]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rw_deallocate(void*, unsigned, int)
<LI><a href="#[30b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::numpunct&lang;char&rang;::~numpunct__deallocating()
<LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::locale::~locale()
<LI><a href="#[c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::bad_cast::~bad_cast__deallocating()
<LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::bad_typeid::~bad_typeid__deallocating()
<LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::bad_exception::~bad_exception__deallocating()
<LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::ios_base::failure::~failure__deallocating()
<LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::ios_base::failbit_set::~failbit_set__deallocating()
<LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::ios_base::eofbit_set::~eofbit_set__deallocating()
<LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::ios_base::badbit_set::~badbit_set__deallocating()
<LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::invalid_argument::~invalid_argument__deallocating()
<LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::underflow_error::~underflow_error__deallocating()
<LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::overflow_error::~overflow_error__deallocating()
<LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::runtime_error::~runtime_error__deallocating()
<LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::out_of_range::~out_of_range__deallocating()
<LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::length_error::~length_error__deallocating()
<LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::domain_error::~domain_error__deallocating()
<LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::range_error::~range_error__deallocating()
<LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::logic_error::~logic_error__deallocating()
<LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;operator delete[] (void*)
<LI><a href="#[cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::messages&lang;char&rang;::~messages__deallocating()
<LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__rw_exception::~__rw_exception__deallocating()
<LI><a href="#[291]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rw_vfmatstr(char*, unsigned, int, std::__va_list)
<LI><a href="#[2f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::locale::locale(const char*)
<LI><a href="#[2d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::locale::operator =(const std::locale&)
<LI><a href="#[2f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::locale::_C_init()
</UL>

<P><STRONG><a name="[290]"></a>operator new[] (unsigned)</STRONG> (Thumb, 8 bytes, Stack size 8 bytes, array_new.o(i._Znaj))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = operator new[] (unsigned) &rArr; operator new(unsigned) &rArr; malloc &rArr; _malloc_internal &rArr; __Heap_Full &rArr; __Heap_ProvideMemory &rArr; _free_internal &rArr; _mutex_release
</UL>
<BR>[Calls]<UL><LI><a href="#[281]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;operator new(unsigned)
</UL>
<BR>[Called By]<UL><LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::basic_filebuf&lang;wchar_t, std::char_traits&lang;wchar_t&rang;&rang;::setbuf(wchar_t*, long)
<LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::basic_filebuf&lang;char, std::char_traits&lang;char&rang;&rang;::setbuf(char*, long)
<LI><a href="#[309]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::ios_base::pword(int)
<LI><a href="#[308]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::ios_base::iword(int)
<LI><a href="#[2fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::ios_base::register_callback(void(*)(std::ios_base::event, std::ios_base&, int), int)
<LI><a href="#[2f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::ios_base::_C_copyfmt(const std::ios_base&)
<LI><a href="#[2c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rw_use_c_lib_locale::__rw_use_c_lib_locale(const char*, int)
<LI><a href="#[2e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::ctype_byname&lang;char&rang;::_C_get_mask_table(const char*)
<LI><a href="#[a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::collate_byname&lang;char&rang;::do_transform(const char*, const char*) const
<LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::collate_byname&lang;char&rang;::do_compare(const char*, const char*, const char*, const char*) const
<LI><a href="#[2e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::ctype&lang;char&rang;::ctype(const std::ctype_base::mask*, bool, unsigned)
<LI><a href="#[30d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_array_new_general
<LI><a href="#[d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__sti___10_rwcats_cpp
<LI><a href="#[2aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__rw_exception::_C_assign(const char*, unsigned)
<LI><a href="#[287]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__rw_exception::_C_vformat(int, std::__va_list)
<LI><a href="#[2e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__rw_exception::_C_vformat(const char*, std::__va_list)
<LI><a href="#[28f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rw_vfmatstr(char*, unsigned, const char*, std::__va_list)
<LI><a href="#[2d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rw_locale_vector&lang;__rw::__rw_facet_base*&rang;::resize(unsigned, __rw::__rw_facet_base*const &)
<LI><a href="#[2c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rw_numpunct_impl_base::_C_get_named_init_(const char*)
<LI><a href="#[29f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rw_locale_imp::__rw_locale_imp(const __rw::__rw_locale_imp&, const char*, unsigned)
<LI><a href="#[29b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rw_locale_imp::__rw_locale_imp(const char*, unsigned, unsigned)
</UL>

<P><STRONG><a name="[281]"></a>operator new(unsigned)</STRONG> (Thumb, 34 bytes, Stack size 8 bytes, new.o(i._Znwj))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = operator new(unsigned) &rArr; malloc &rArr; _malloc_internal &rArr; __Heap_Full &rArr; __Heap_ProvideMemory &rArr; _free_internal &rArr; _mutex_release
</UL>
<BR>[Calls]<UL><LI><a href="#[1dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;malloc
<LI><a href="#[1f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_new_handler_addr
</UL>
<BR>[Called By]<UL><LI><a href="#[32b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rw_create_named_facet&lang;std::codecvt&lang;wchar_t, char, std::__mbstate_t&rang;&rang;(T1*, const char*, unsigned)
<LI><a href="#[32a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rw_create_named_facet&lang;std::codecvt&lang;char, char, std::__mbstate_t&rang;&rang;(T1*, const char*, unsigned)
<LI><a href="#[329]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rw_create_named_facet&lang;std::ctype&lang;wchar_t&rang;&rang;(T1*, const char*, unsigned)
<LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rw_facet_maker&lang;std::codecvt&lang;wchar_t, char, std::__mbstate_t&rang;&rang;::_C_maker_func(int, const char*, unsigned)
<LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rw_facet_maker&lang;std::codecvt&lang;char, char, std::__mbstate_t&rang;&rang;::_C_maker_func(int, const char*, unsigned)
<LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rw_facet_maker&lang;std::ctype&lang;wchar_t&rang;&rang;::_C_maker_func(int, const char*, unsigned)
<LI><a href="#[2c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rw_reallocate_temp_buffer(void*, unsigned)
<LI><a href="#[290]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;operator new[] (unsigned)
<LI><a href="#[280]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;catopen(const char*, int)
<LI><a href="#[28e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rw_allocate(unsigned, int)
<LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rw_facet_maker&lang;std::ctype&lang;char&rang;&rang;::_C_maker_func(int, const char*, unsigned)
<LI><a href="#[2f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::locale::locale(const std::locale&, const std::locale&, int)
<LI><a href="#[2f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::locale::locale(const std::locale&, const char*, int)
<LI><a href="#[2f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::locale::locale(const char*)
<LI><a href="#[2f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::locale::_C_init()
</UL>

<P><STRONG><a name="[285]"></a>operator new(unsigned, void*)</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, main.o(i._ZnwjPv))
<BR><BR>[Called By]<UL><LI><a href="#[154]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::ios_base::Init::Init()
<LI><a href="#[284]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rw_throw(int, ...)
<LI><a href="#[361]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;::_C_getRep(unsigned, unsigned)
<LI><a href="#[35b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::allocator&lang;int&rang;::construct(int*, const int&)
<LI><a href="#[32e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rb_tree&lang;int, std::pair&lang;const int, int&rang;, __rw::__select1st&lang;std::pair&lang;const int, int&rang;, int&rang;, std::less&lang;int&rang;, std::allocator&lang;std::pair&lang;const int, int&rang;&rang;&rang;::_C_get_node(const std::pair&lang;const int, int&rang;&)
<LI><a href="#[291]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rw_vfmatstr(char*, unsigned, int, std::__va_list)
</UL>

<P><STRONG><a name="[30d]"></a>__ARM_array_new_general</STRONG> (Thumb, 146 bytes, Stack size 56 bytes, array_new_general.o(i.__ARM_array_new_general))
<BR><BR>[Stack]<UL><LI>Max Depth = 504 + Unknown Stack Size
<LI>Call Chain = __ARM_array_new_general &rArr; __cxa_rethrow &rArr; _Unwind_RaiseException &rArr; __ARM_Unwind_RaiseException &rArr; malloc &rArr; _malloc_internal &rArr; __Heap_Full &rArr; __Heap_ProvideMemory &rArr; _free_internal &rArr; _mutex_release
</UL>
<BR>[Calls]<UL><LI><a href="#[1e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::terminate()
<LI><a href="#[290]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;operator new[] (unsigned)
<LI><a href="#[30e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_vec_cleanup
<LI><a href="#[1e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxa_rethrow
<LI><a href="#[147]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxa_end_catch
<LI><a href="#[145]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxa_begin_catch
</UL>
<BR>[Called By]<UL><LI><a href="#[312]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxa_vec_new
</UL>

<P><STRONG><a name="[1ec]"></a>__ARM_common_get_typeid</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, arm_exceptions_throw.o(i.__ARM_common_get_typeid))
<BR><BR>[Stack]<UL><LI>Max Depth = 472 + Unknown Stack Size
<LI>Call Chain = __ARM_common_get_typeid &rArr; __cxa_bad_typeid &rArr; __cxa_throw &rArr; _Unwind_RaiseException &rArr; __ARM_Unwind_RaiseException &rArr; malloc &rArr; _malloc_internal &rArr; __Heap_Full &rArr; __Heap_ProvideMemory &rArr; _free_internal &rArr; _mutex_release
</UL>
<BR>[Calls]<UL><LI><a href="#[228]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxa_bad_typeid
</UL>
<BR>[Called By]<UL><LI><a href="#[1ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__derived_to_base_conversion
<LI><a href="#[27d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;derived_to_base_conversion_r(void*, void**, const std::type_info*, const std::type_info*, unsigned, int*, int, const std::type_info**, a_result_virtuality*, int*)
<LI><a href="#[27c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;find_base_class_at_addr(void*, void*, const std::type_info*, const std::type_info*, int*)
<LI><a href="#[27b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;traverse_base_classes(void*, const std::type_info*, a_base_class_traversal_block*, __cxxabiv1::__base_class_type_info*)
<LI><a href="#[1ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxa_type_match
</UL>

<P><STRONG><a name="[254]"></a>__ARM_fpclassify</STRONG> (Thumb, 40 bytes, Stack size 0 bytes, fpclassify.o(i.__ARM_fpclassify))
<BR><BR>[Called By]<UL><LI><a href="#[256]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_fp_hex_real
<LI><a href="#[253]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_fp_dec_real
</UL>

<P><STRONG><a name="[30e]"></a>__ARM_vec_cleanup</STRONG> (Thumb, 42 bytes, Stack size 40 bytes, ARM_vec_cleanup.o(i.__ARM_vec_cleanup))
<BR><BR>[Stack]<UL><LI>Max Depth = 216 + Unknown Stack Size
<LI>Call Chain = __ARM_vec_cleanup &rArr; __cxa_begin_catch &rArr; __ARM::get_foreign_intermediary(__cxa_exception*, _Unwind_Control_Block*) &rArr; __cxa_allocate_exception &rArr; __ARM::call_terminate_handler(_Unwind_Control_Block*) &rArr; std::terminate() &rArr; __cxa_get_globals &rArr; __ARM_exceptions_buffer_init &rArr; malloc &rArr; _malloc_internal &rArr; __Heap_Full &rArr; __Heap_ProvideMemory &rArr; _free_internal &rArr; _mutex_release
</UL>
<BR>[Calls]<UL><LI><a href="#[1e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::terminate()
<LI><a href="#[147]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxa_end_catch
<LI><a href="#[145]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxa_begin_catch
</UL>
<BR>[Called By]<UL><LI><a href="#[30d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_array_new_general
</UL>

<P><STRONG><a name="[30f]"></a>__ARM_vec_cleanup_rethrow</STRONG> (Thumb, 44 bytes, Stack size 40 bytes, ARM_vec_cleanup_rethrow.o(i.__ARM_vec_cleanup_rethrow))
<BR><BR>[Stack]<UL><LI>Max Depth = 488 + Unknown Stack Size
<LI>Call Chain = __ARM_vec_cleanup_rethrow &rArr; __cxa_rethrow &rArr; _Unwind_RaiseException &rArr; __ARM_Unwind_RaiseException &rArr; malloc &rArr; _malloc_internal &rArr; __Heap_Full &rArr; __Heap_ProvideMemory &rArr; _free_internal &rArr; _mutex_release
</UL>
<BR>[Calls]<UL><LI><a href="#[1e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::terminate()
<LI><a href="#[1e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxa_rethrow
<LI><a href="#[147]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxa_end_catch
<LI><a href="#[145]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxa_begin_catch
</UL>
<BR>[Called By]<UL><LI><a href="#[311]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_vec_dtor
</UL>

<P><STRONG><a name="[155]"></a>__aeabi_atexit</STRONG> (Thumb, 48 bytes, Stack size 24 bytes, aeabi_atexit.o(i.__aeabi_atexit))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = __aeabi_atexit &rArr; malloc &rArr; _malloc_internal &rArr; __Heap_Full &rArr; __Heap_ProvideMemory &rArr; _free_internal &rArr; _mutex_release
</UL>
<BR>[Calls]<UL><LI><a href="#[1dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;malloc
<LI><a href="#[1f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_ddtor_pointer_addr
</UL>
<BR>[Called By]<UL><LI><a href="#[d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__sti___8_main_cpp
<LI><a href="#[2ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__rw_get_cats()
<LI><a href="#[d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__sti___10_rwcats_cpp
<LI><a href="#[2d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::locale::classic()
</UL>

<P><STRONG><a name="[29e]"></a>__aeabi_vec_delete</STRONG> (Thumb, 34 bytes, Stack size 16 bytes, aeabi_vec_delete.o(i.__aeabi_vec_delete))
<BR><BR>[Stack]<UL><LI>Max Depth = 544 + Unknown Stack Size
<LI>Call Chain = __aeabi_vec_delete &rArr; __aeabi_vec_dtor_cookie &rArr; __aeabi_vec_dtor &rArr; __ARM_vec_cleanup_rethrow &rArr; __cxa_rethrow &rArr; _Unwind_RaiseException &rArr; __ARM_Unwind_RaiseException &rArr; malloc &rArr; _malloc_internal &rArr; __Heap_Full &rArr; __Heap_ProvideMemory &rArr; _free_internal &rArr; _mutex_release
</UL>
<BR>[Calls]<UL><LI><a href="#[310]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_vec_dtor_cookie
<LI><a href="#[1e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxa_rethrow
<LI><a href="#[145]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxa_begin_catch
<LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;operator delete[] (void*)
</UL>
<BR>[Called By]<UL><LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rw_locale_vector&lang;std::__rw_open_cat_data&rang;::~__rw_locale_vector()
<LI><a href="#[2cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rw_locale_vector&lang;std::__rw_open_cat_data&rang;::resize(unsigned)
<LI><a href="#[296]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rw_locale_vector&lang;std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;&rang;::~__rw_locale_vector()
<LI><a href="#[29b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rw_locale_imp::__rw_locale_imp(const char*, unsigned, unsigned)
</UL>

<P><STRONG><a name="[311]"></a>__aeabi_vec_dtor</STRONG> (Thumb, 58 bytes, Stack size 40 bytes, aeabi_vec_dtor.o(i.__aeabi_vec_dtor))
<BR><BR>[Stack]<UL><LI>Max Depth = 528 + Unknown Stack Size
<LI>Call Chain = __aeabi_vec_dtor &rArr; __ARM_vec_cleanup_rethrow &rArr; __cxa_rethrow &rArr; _Unwind_RaiseException &rArr; __ARM_Unwind_RaiseException &rArr; malloc &rArr; _malloc_internal &rArr; __Heap_Full &rArr; __Heap_ProvideMemory &rArr; _free_internal &rArr; _mutex_release
</UL>
<BR>[Calls]<UL><LI><a href="#[30f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_vec_cleanup_rethrow
<LI><a href="#[147]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxa_end_catch
<LI><a href="#[145]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxa_begin_catch
</UL>
<BR>[Called By]<UL><LI><a href="#[310]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_vec_dtor_cookie
</UL>

<P><STRONG><a name="[310]"></a>__aeabi_vec_dtor_cookie</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, aeabi_vec_dtor_cookie.o(i.__aeabi_vec_dtor_cookie))
<BR><BR>[Stack]<UL><LI>Max Depth = 528 + Unknown Stack Size
<LI>Call Chain = __aeabi_vec_dtor_cookie &rArr; __aeabi_vec_dtor &rArr; __ARM_vec_cleanup_rethrow &rArr; __cxa_rethrow &rArr; _Unwind_RaiseException &rArr; __ARM_Unwind_RaiseException &rArr; malloc &rArr; _malloc_internal &rArr; __Heap_Full &rArr; __Heap_ProvideMemory &rArr; _free_internal &rArr; _mutex_release
</UL>
<BR>[Calls]<UL><LI><a href="#[311]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_vec_dtor
</UL>
<BR>[Called By]<UL><LI><a href="#[29e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_vec_delete
</UL>

<P><STRONG><a name="[29c]"></a>__aeabi_vec_new_cookie</STRONG> (Thumb, 20 bytes, Stack size 16 bytes, aeabi_vec_new_cookie.o(i.__aeabi_vec_new_cookie))
<BR><BR>[Stack]<UL><LI>Max Depth = 552 + Unknown Stack Size
<LI>Call Chain = __aeabi_vec_new_cookie &rArr; __cxa_vec_new &rArr; __ARM_array_new_general &rArr; __cxa_rethrow &rArr; _Unwind_RaiseException &rArr; __ARM_Unwind_RaiseException &rArr; malloc &rArr; _malloc_internal &rArr; __Heap_Full &rArr; __Heap_ProvideMemory &rArr; _free_internal &rArr; _mutex_release
</UL>
<BR>[Calls]<UL><LI><a href="#[312]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxa_vec_new
</UL>
<BR>[Called By]<UL><LI><a href="#[2cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rw_locale_vector&lang;std::__rw_open_cat_data&rang;::resize(unsigned)
<LI><a href="#[2f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::locale::locale(const std::locale&, const char*, int)
<LI><a href="#[29f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rw_locale_imp::__rw_locale_imp(const __rw::__rw_locale_imp&, const char*, unsigned)
<LI><a href="#[29b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rw_locale_imp::__rw_locale_imp(const char*, unsigned, unsigned)
</UL>

<P><STRONG><a name="[118]"></a>__cxa_finalize</STRONG> (Thumb, 66 bytes, Stack size 24 bytes, cxa_finalize.o(i.__cxa_finalize))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = __cxa_finalize &rArr; free &rArr; _free_internal &rArr; _mutex_release
</UL>
<BR>[Calls]<UL><LI><a href="#[1f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;free
<LI><a href="#[1f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_ddtor_pointer_addr
</UL>
<BR>[Called By]<UL><LI><a href="#[117]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_lib_shutdown_cpp_1
</UL>

<P><STRONG><a name="[2c6]"></a>__cxa_guard_acquire</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, cxa_guard_acquire.o(i.__cxa_guard_acquire))
<BR><BR>[Called By]<UL><LI><a href="#[2c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rw_reallocate_temp_buffer(void*, unsigned)
<LI><a href="#[2ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__rw_get_cats()
<LI><a href="#[2d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::locale::classic()
</UL>

<P><STRONG><a name="[312]"></a>__cxa_vec_new</STRONG> (Thumb, 18 bytes, Stack size 32 bytes, cxa_vec_new.o(i.__cxa_vec_new))
<BR><BR>[Stack]<UL><LI>Max Depth = 536 + Unknown Stack Size
<LI>Call Chain = __cxa_vec_new &rArr; __ARM_array_new_general &rArr; __cxa_rethrow &rArr; _Unwind_RaiseException &rArr; __ARM_Unwind_RaiseException &rArr; malloc &rArr; _malloc_internal &rArr; __Heap_Full &rArr; __Heap_ProvideMemory &rArr; _free_internal &rArr; _mutex_release
</UL>
<BR>[Calls]<UL><LI><a href="#[30d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_array_new_general
</UL>
<BR>[Called By]<UL><LI><a href="#[29c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_vec_new_cookie
</UL>

<P><STRONG><a name="[1ee]"></a>__derived_to_base_conversion</STRONG> (Thumb, 106 bytes, Stack size 72 bytes, rtti.o(i.__derived_to_base_conversion))
<BR><BR>[Stack]<UL><LI>Max Depth = 640 + Unknown Stack Size
<LI>Call Chain = __derived_to_base_conversion &rArr; derived_to_base_conversion_r(void*, void**, const std::type_info*, const std::type_info*, unsigned, int*, int, const std::type_info**, a_result_virtuality*, int*) &rArr;  derived_to_base_conversion_r(void*, void**, const std::type_info*, const std::type_info*, unsigned, int*, int, const std::type_info**, a_result_virtuality*, int*) (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[1eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::type_info::operator ==(const std::type_info&) const
<LI><a href="#[27d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;derived_to_base_conversion_r(void*, void**, const std::type_info*, const std::type_info*, unsigned, int*, int, const std::type_info**, a_result_virtuality*, int*)
<LI><a href="#[1ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_get_typeid
</UL>
<BR>[Called By]<UL><LI><a href="#[313]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__dynamic_cast
<LI><a href="#[1ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxa_type_match
</UL>

<P><STRONG><a name="[313]"></a>__dynamic_cast</STRONG> (Thumb, 166 bytes, Stack size 72 bytes, rtti.o(i.__dynamic_cast), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[1eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::type_info::operator ==(const std::type_info&) const
<LI><a href="#[1ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__derived_to_base_conversion
<LI><a href="#[27c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;find_base_class_at_addr(void*, void*, const std::type_info*, const std::type_info*, int*)
<LI><a href="#[27b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;traverse_base_classes(void*, const std::type_info*, a_base_class_traversal_block*, __cxxabiv1::__base_class_type_info*)
</UL>

<P><STRONG><a name="[314]"></a>__mathlib_dbl_underflow</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, dunder.o(i.__mathlib_dbl_underflow))
<BR><BR>[Calls]<UL><LI><a href="#[315]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_scalbn
</UL>
<BR>[Called By]<UL><LI><a href="#[31b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ldexp
</UL>

<P><STRONG><a name="[261]"></a>__mathlib_narrow</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, narrow.o(i.__mathlib_narrow))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = __mathlib_narrow &rArr; __mathlib_tofloat &rArr; __aeabi_cdcmpeq
</UL>
<BR>[Calls]<UL><LI><a href="#[316]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__mathlib_tofloat
</UL>
<BR>[Called By]<UL><LI><a href="#[25e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_scanf_really_real
<LI><a href="#[26f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_scanf_really_hex_real
</UL>

<P><STRONG><a name="[316]"></a>__mathlib_tofloat</STRONG> (Thumb, 132 bytes, Stack size 16 bytes, narrow.o(i.__mathlib_tofloat))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = __mathlib_tofloat &rArr; __aeabi_cdcmpeq
</UL>
<BR>[Calls]<UL><LI><a href="#[318]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cdcmpeq
<LI><a href="#[317]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;frexp
<LI><a href="#[31a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cdrcmple
<LI><a href="#[319]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2f
<LI><a href="#[26e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__set_errno
</UL>
<BR>[Called By]<UL><LI><a href="#[261]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__mathlib_narrow
</UL>

<P><STRONG><a name="[271]"></a>__support_ldexp</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, ldexp.o(i.__support_ldexp))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = __support_ldexp &rArr; ldexp &rArr; __aeabi_cdcmpeq
</UL>
<BR>[Calls]<UL><LI><a href="#[31b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ldexp
</UL>
<BR>[Called By]<UL><LI><a href="#[26f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_scanf_really_hex_real
</UL>

<P><STRONG><a name="[1cf]"></a>_is_digit</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, __printf_wp.o(i._is_digit))
<BR><BR>[Called By]<UL><LI><a href="#[1ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__printf
<LI><a href="#[25e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_scanf_really_real
</UL>

<P><STRONG><a name="[3a]"></a>_fputc$unlocked</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, fputc.o(i.fputc))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = _fputc$unlocked &rArr; __flsbuf_byte
</UL>
<BR>[Calls]<UL><LI><a href="#[26c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__flsbuf_byte
</UL>
<BR>[Address Reference Count : 1]<UL><LI> _printf_char_file_locked.o(.text)
</UL>
<P><STRONG><a name="[317]"></a>frexp</STRONG> (Thumb, 80 bytes, Stack size 8 bytes, frexp.o(i.frexp))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = frexp
</UL>
<BR>[Calls]<UL><LI><a href="#[315]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_scalbn
</UL>
<BR>[Called By]<UL><LI><a href="#[316]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__mathlib_tofloat
</UL>

<P><STRONG><a name="[31b]"></a>ldexp</STRONG> (Thumb, 126 bytes, Stack size 24 bytes, ldexp.o(i.ldexp))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = ldexp &rArr; __aeabi_cdcmpeq
</UL>
<BR>[Calls]<UL><LI><a href="#[318]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cdcmpeq
<LI><a href="#[314]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__mathlib_dbl_underflow
<LI><a href="#[315]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_scalbn
<LI><a href="#[26e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__set_errno
</UL>
<BR>[Called By]<UL><LI><a href="#[271]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__support_ldexp
</UL>

<P><STRONG><a name="[2b]"></a>_get_lc_ctype</STRONG> (Thumb, 44 bytes, Stack size 8 bytes, lc_ctype_c.o(locale$$code))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = _get_lc_ctype
</UL>
<BR>[Calls]<UL><LI><a href="#[131]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcmp
</UL>
<BR>[Called By]<UL><LI><a href="#[10f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_lib_init_lc_ctype_2
<LI><a href="#[249]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_set_locale_byname
</UL>
<BR>[Address Reference Count : 1]<UL><LI> rt_ctype_table.o(.text)
</UL>
<P><STRONG><a name="[10e]"></a>_get_lc_collate</STRONG> (Thumb, 44 bytes, Stack size 8 bytes, lc_collate_c.o(locale$$code))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = _get_lc_collate
</UL>
<BR>[Calls]<UL><LI><a href="#[131]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcmp
</UL>
<BR>[Called By]<UL><LI><a href="#[10d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_lib_init_lc_collate_2
<LI><a href="#[249]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_set_locale_byname
</UL>

<P><STRONG><a name="[111]"></a>_get_lc_monetary</STRONG> (Thumb, 44 bytes, Stack size 8 bytes, lc_monetary_c.o(locale$$code))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = _get_lc_monetary
</UL>
<BR>[Calls]<UL><LI><a href="#[131]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcmp
</UL>
<BR>[Called By]<UL><LI><a href="#[110]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_lib_init_lc_monetary_2
<LI><a href="#[249]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_set_locale_byname
</UL>

<P><STRONG><a name="[113]"></a>_get_lc_numeric</STRONG> (Thumb, 44 bytes, Stack size 8 bytes, lc_numeric_c.o(locale$$code))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = _get_lc_numeric
</UL>
<BR>[Calls]<UL><LI><a href="#[131]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcmp
</UL>
<BR>[Called By]<UL><LI><a href="#[112]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_lib_init_lc_numeric_2
<LI><a href="#[249]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_set_locale_byname
</UL>

<P><STRONG><a name="[14d]"></a>__rw::__rw_insert&lang;char, std::char_traits&lang;char&rang;, char&rang;(std::basic_ostream&lang;T1, T2&rang;&, const T3*, long, long)</STRONG> (Thumb, 28 bytes, Stack size 24 bytes, main.o(t._ZN4__rw11__rw_insertIcSt11char_traitsIcEcEERSt13basic_ostreamIT_T0_ES7_PKT1_ll))
<BR><BR>[Stack]<UL><LI>Max Depth = 1064 + Unknown Stack Size
<LI>Call Chain = __rw::__rw_insert&lang;char, std::char_traits&lang;char&rang;, char&rang;(std::basic_ostream&lang;T1, T2&rang;&, const T3*, long, long) &rArr; __rw::__rw_insert&lang;char, std::char_traits&lang;char&rang;, char&rang;(std::basic_ostream&lang;T1, T2&rang;&, T3*, long, long) &rArr; std::basic_ostream&lang;char, std::char_traits&lang;char&rang;&rang;::sentry::sentry(std::basic_ostream&lang;char, std::char_traits&lang;char&rang;&rang;&) &rArr; std::basic_ostream&lang;char, std::char_traits&lang;char&rang;&rang;::_C_opfx() &rArr; std::basic_ostream&lang;char, std::char_traits&lang;char&rang;&rang;::flush() &rArr; std::basic_ios&lang;char, std::char_traits&lang;char&rang;&rang;::setstate(int) &rArr; std::basic_ios&lang;char, std::char_traits&lang;char&rang;&rang;::clear(int, int) &rArr; std::ios_base::_C_unsafe_clear(int, int) &rArr; __rw::__rw_throw(int, ...) &rArr; std::__rw_exception::_C_vformat(int, std::__va_list) &rArr; __rw::__rw_vfmatstr(char*, unsigned, int, std::__va_list) &rArr; std::locale::locale() &rArr; std::locale::_C_init() &rArr; __rw::__rw_locale_imp::__rw_locale_imp(const char*, unsigned, unsigned) &rArr; __aeabi_vec_new_cookie &rArr; __cxa_vec_new &rArr; __ARM_array_new_general &rArr; __cxa_rethrow &rArr; _Unwind_RaiseException &rArr; __ARM_Unwind_RaiseException &rArr; malloc &rArr; _malloc_internal &rArr; __Heap_Full &rArr; __Heap_ProvideMemory &rArr; _free_internal &rArr; _mutex_release
</UL>
<BR>[Calls]<UL><LI><a href="#[31c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rw_insert&lang;char, std::char_traits&lang;char&rang;, char&rang;(std::basic_ostream&lang;T1, T2&rang;&, T3*, long, long)
</UL>
<BR>[Called By]<UL><LI><a href="#[141]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::operator &lang;&lang;&lang;std::char_traits&lang;char&rang;&rang;(std::basic_ostream&lang;char, T1&rang;&, const char*)
<LI><a href="#[135]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;stl_test()
</UL>

<P><STRONG><a name="[31c]"></a>__rw::__rw_insert&lang;char, std::char_traits&lang;char&rang;, char&rang;(std::basic_ostream&lang;T1, T2&rang;&, T3*, long, long)</STRONG> (Thumb, 220 bytes, Stack size 88 bytes, main.o(t._ZN4__rw11__rw_insertIcSt11char_traitsIcEcEERSt13basic_ostreamIT_T0_ES7_PT1_ll))
<BR><BR>[Stack]<UL><LI>Max Depth = 1040 + Unknown Stack Size
<LI>Call Chain = __rw::__rw_insert&lang;char, std::char_traits&lang;char&rang;, char&rang;(std::basic_ostream&lang;T1, T2&rang;&, T3*, long, long) &rArr; std::basic_ostream&lang;char, std::char_traits&lang;char&rang;&rang;::sentry::sentry(std::basic_ostream&lang;char, std::char_traits&lang;char&rang;&rang;&) &rArr; std::basic_ostream&lang;char, std::char_traits&lang;char&rang;&rang;::_C_opfx() &rArr; std::basic_ostream&lang;char, std::char_traits&lang;char&rang;&rang;::flush() &rArr; std::basic_ios&lang;char, std::char_traits&lang;char&rang;&rang;::setstate(int) &rArr; std::basic_ios&lang;char, std::char_traits&lang;char&rang;&rang;::clear(int, int) &rArr; std::ios_base::_C_unsafe_clear(int, int) &rArr; __rw::__rw_throw(int, ...) &rArr; std::__rw_exception::_C_vformat(int, std::__va_list) &rArr; __rw::__rw_vfmatstr(char*, unsigned, int, std::__va_list) &rArr; std::locale::locale() &rArr; std::locale::_C_init() &rArr; __rw::__rw_locale_imp::__rw_locale_imp(const char*, unsigned, unsigned) &rArr; __aeabi_vec_new_cookie &rArr; __cxa_vec_new &rArr; __ARM_array_new_general &rArr; __cxa_rethrow &rArr; _Unwind_RaiseException &rArr; __ARM_Unwind_RaiseException &rArr; malloc &rArr; _malloc_internal &rArr; __Heap_Full &rArr; __Heap_ProvideMemory &rArr; _free_internal &rArr; _mutex_release
</UL>
<BR>[Calls]<UL><LI><a href="#[321]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::basic_ios&lang;char, std::char_traits&lang;char&rang;&rang;::setstate(int, int)
<LI><a href="#[322]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::basic_ios&lang;char, std::char_traits&lang;char&rang;&rang;::setstate(int)
<LI><a href="#[320]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::basic_ostream&lang;char, std::char_traits&lang;char&rang;&rang;::sentry::~sentry()
<LI><a href="#[31d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::basic_ostream&lang;char, std::char_traits&lang;char&rang;&rang;::sentry::sentry(std::basic_ostream&lang;char, std::char_traits&lang;char&rang;&rang;&)
<LI><a href="#[31e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::basic_ostream&lang;char, std::char_traits&lang;char&rang;&rang;::_C_pad(long)
<LI><a href="#[31f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::basic_ios&lang;char, std::char_traits&lang;char&rang;&rang;::rdbuf() const
<LI><a href="#[1e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxa_rethrow
<LI><a href="#[147]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxa_end_catch
<LI><a href="#[145]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxa_begin_catch
</UL>
<BR>[Called By]<UL><LI><a href="#[24]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::endl&lang;char, std::char_traits&lang;char&rang;&rang;(std::basic_ostream&lang;T1, T2&rang;&)
<LI><a href="#[14d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rw_insert&lang;char, std::char_traits&lang;char&rang;, char&rang;(std::basic_ostream&lang;T1, T2&rang;&, const T3*, long, long)
</UL>

<P><STRONG><a name="[368]"></a>__rw::__string_ref&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;::_C_inc_ref()</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, main.o(t._ZN4__rw12__string_refIcSt11char_traitsIcESaIcEE10_C_inc_refEv))
<BR><BR>[Called By]<UL><LI><a href="#[29d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;::operator =(const std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;&)
<LI><a href="#[294]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;::basic_string(const std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;&)
</UL>

<P><STRONG><a name="[363]"></a>__rw::__string_ref&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;::data()</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, main.o(t._ZN4__rw12__string_refIcSt11char_traitsIcESaIcEE4dataEv))
<BR><BR>[Called By]<UL><LI><a href="#[294]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;::basic_string(const std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;&)
<LI><a href="#[361]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;::_C_getRep(unsigned, unsigned)
<LI><a href="#[364]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;::replace(unsigned, unsigned, const char*, unsigned, unsigned, unsigned)
<LI><a href="#[15c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;::_C_null()
</UL>

<P><STRONG><a name="[327]"></a>__rw::__rw_tree_iter&lang;std::pair&lang;const int, int&rang;, int, std::pair&lang;const int, int&rang;*, std::pair&lang;const int, int&rang;&, __rw::__rw_rb_tree_node&lang;std::allocator&lang;std::pair&lang;const int, int&rang;&rang;, std::pair&lang;const int, int&rang;, int, __rw::__select1st&lang;std::pair&lang;const int, int&rang;, int&rang;&rang;&rang;::__rw_tree_iter(const __rw::__rw_tree_iter&lang;std::pair&lang;const int, int&rang;, int, std::pair&lang;const int, int&rang;*, std::pair&lang;const int, int&rang;&, __rw::__rw_rb_tree_node&lang;std::allocator&lang;std::pair&lang;const int, int&rang;&rang;, std::pair&lang;const int, int&rang;, int, __rw::__select1st&lang;std::pair&lang;const int, int&rang;, int&rang;&rang;&rang;&)</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, main.o(t._ZN4__rw14__rw_tree_iterISt4pairIKiiEiPS3_RS3_NS_17__rw_rb_tree_nodeISaIS3_ES3_iNS_11__select1stIS3_iEEEEEC1ERKSB_))
<BR><BR>[Called By]<UL><LI><a href="#[344]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::pair&lang;__rw::__rw_tree_iter&lang;std::pair&lang;const int, int&rang;, int, std::pair&lang;const int, int&rang;*, std::pair&lang;const int, int&rang;&, __rw::__rw_rb_tree_node&lang;std::allocator&lang;std::pair&lang;const int, int&rang;&rang;, std::pair&lang;const int, int&rang;, int, __rw::__select1st&lang;std::pair&lang;const int, int&rang;, int&rang;&rang;&rang;, bool&rang;::pair(const __rw::__rw_tree_iter&lang;std::pair&lang;const int, int&rang;, int, std::pair&lang;const int, int&rang;*, std::pair&lang;const int, int&rang;&, __rw::__rw_rb_tree_node&lang;std::allocator&lang;std::pair&lang;const int, int&rang;&rang;, std::pair&lang;const int, int&rang;, int, __rw::__select1st&lang;std::pair&lang;const int, int&rang;, int&rang;&rang;&rang;&, const bool&)
<LI><a href="#[13b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::map&lang;int, int, std::less&lang;int&rang;, std::allocator&lang;std::pair&lang;const int, int&rang;&rang;&rang;::operator [](const int&)
<LI><a href="#[33b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rb_tree&lang;int, std::pair&lang;const int, int&rang;, __rw::__select1st&lang;std::pair&lang;const int, int&rang;, int&rang;, std::less&lang;int&rang;, std::allocator&lang;std::pair&lang;const int, int&rang;&rang;&rang;::erase(__rw::__rw_tree_iter&lang;std::pair&lang;const int, int&rang;, int, std::pair&lang;const int, int&rang;*, std::pair&lang;const int, int&rang;&, __rw::__rw_rb_tree_node&lang;std::allocator&lang;std::pair&lang;const int, int&rang;&rang;, std::pair&lang;const int, int&rang;, int, __rw::__select1st&lang;std::pair&lang;const int, int&rang;, int&rang;&rang;&rang;)
<LI><a href="#[13e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rw_tree_iter&lang;std::pair&lang;const int, int&rang;, int, std::pair&lang;const int, int&rang;*, std::pair&lang;const int, int&rang;&, __rw::__rw_rb_tree_node&lang;std::allocator&lang;std::pair&lang;const int, int&rang;&rang;, std::pair&lang;const int, int&rang;, int, __rw::__select1st&lang;std::pair&lang;const int, int&rang;, int&rang;&rang;&rang;::operator ++(int)
</UL>

<P><STRONG><a name="[44f]"></a>__rw::__rw_tree_iter&lang;std::pair&lang;const int, int&rang;, int, std::pair&lang;const int, int&rang;*, std::pair&lang;const int, int&rang;&, __rw::__rw_rb_tree_node&lang;std::allocator&lang;std::pair&lang;const int, int&rang;&rang;, std::pair&lang;const int, int&rang;, int, __rw::__select1st&lang;std::pair&lang;const int, int&rang;, int&rang;&rang;&rang;::__rw_tree_iter__sub_object(const __rw::__rw_tree_iter&lang;std::pair&lang;const int, int&rang;, int, std::pair&lang;const int, int&rang;*, std::pair&lang;const int, int&rang;&, __rw::__rw_rb_tree_node&lang;std::allocator&lang;std::pair&lang;const int, int&rang;&rang;, std::pair&lang;const int, int&rang;, int, __rw::__select1st&lang;std::pair&lang;const int, int&rang;, int&rang;&rang;&rang;&)</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, main.o(t._ZN4__rw14__rw_tree_iterISt4pairIKiiEiPS3_RS3_NS_17__rw_rb_tree_nodeISaIS3_ES3_iNS_11__select1stIS3_iEEEEEC1ERKSB_), UNUSED)

<P><STRONG><a name="[323]"></a>__rw::__rw_tree_iter&lang;std::pair&lang;const int, int&rang;, int, std::pair&lang;const int, int&rang;*, std::pair&lang;const int, int&rang;&, __rw::__rw_rb_tree_node&lang;std::allocator&lang;std::pair&lang;const int, int&rang;&rang;, std::pair&lang;const int, int&rang;, int, __rw::__select1st&lang;std::pair&lang;const int, int&rang;, int&rang;&rang;&rang;::operator --()</STRONG> (Thumb, 132 bytes, Stack size 16 bytes, main.o(t._ZN4__rw14__rw_tree_iterISt4pairIKiiEiPS3_RS3_NS_17__rw_rb_tree_nodeISaIS3_ES3_iNS_11__select1stIS3_iEEEEEmmEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = __rw::__rw_tree_iter&lang;std::pair&lang;const int, int&rang;, int, std::pair&lang;const int, int&rang;*, std::pair&lang;const int, int&rang;&, __rw::__rw_rb_tree_node&lang;std::allocator&lang;std::pair&lang;const int, int&rang;&rang;, std::pair&lang;const int, int&rang;, int, __rw::__select1st&lang;std::pair&lang;const int, int&rang;, int&rang;&rang;&rang;::operator --()
</UL>
<BR>[Calls]<UL><LI><a href="#[324]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rw_rb_tree_node&lang;std::allocator&lang;std::pair&lang;const int, int&rang;&rang;, std::pair&lang;const int, int&rang;, int, __rw::__select1st&lang;std::pair&lang;const int, int&rang;, int&rang;&rang;::_C_parent()
<LI><a href="#[325]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rw_rb_tree_node&lang;std::allocator&lang;std::pair&lang;const int, int&rang;&rang;, std::pair&lang;const int, int&rang;, int, __rw::__select1st&lang;std::pair&lang;const int, int&rang;, int&rang;&rang;::_C_right()
<LI><a href="#[326]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rw_rb_tree_node&lang;std::allocator&lang;std::pair&lang;const int, int&rang;&rang;, std::pair&lang;const int, int&rang;, int, __rw::__select1st&lang;std::pair&lang;const int, int&rang;, int&rang;&rang;::_C_left()
</UL>
<BR>[Called By]<UL><LI><a href="#[340]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rb_tree&lang;int, std::pair&lang;const int, int&rang;, __rw::__select1st&lang;std::pair&lang;const int, int&rang;, int&rang;, std::less&lang;int&rang;, std::allocator&lang;std::pair&lang;const int, int&rang;&rang;&rang;::insert(const std::pair&lang;const int, int&rang;&)
</UL>

<P><STRONG><a name="[13e]"></a>__rw::__rw_tree_iter&lang;std::pair&lang;const int, int&rang;, int, std::pair&lang;const int, int&rang;*, std::pair&lang;const int, int&rang;&, __rw::__rw_rb_tree_node&lang;std::allocator&lang;std::pair&lang;const int, int&rang;&rang;, std::pair&lang;const int, int&rang;, int, __rw::__select1st&lang;std::pair&lang;const int, int&rang;, int&rang;&rang;&rang;::operator ++(int)</STRONG> (Thumb, 34 bytes, Stack size 24 bytes, main.o(t._ZN4__rw14__rw_tree_iterISt4pairIKiiEiPS3_RS3_NS_17__rw_rb_tree_nodeISaIS3_ES3_iNS_11__select1stIS3_iEEEEEppEi))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = __rw::__rw_tree_iter&lang;std::pair&lang;const int, int&rang;, int, std::pair&lang;const int, int&rang;*, std::pair&lang;const int, int&rang;&, __rw::__rw_rb_tree_node&lang;std::allocator&lang;std::pair&lang;const int, int&rang;&rang;, std::pair&lang;const int, int&rang;, int, __rw::__select1st&lang;std::pair&lang;const int, int&rang;, int&rang;&rang;&rang;::operator ++(int) &rArr; __rw::__rw_tree_iter&lang;std::pair&lang;const int, int&rang;, int, std::pair&lang;const int, int&rang;*, std::pair&lang;const int, int&rang;&, __rw::__rw_rb_tree_node&lang;std::allocator&lang;std::pair&lang;const int, int&rang;&rang;, std::pair&lang;const int, int&rang;, int, __rw::__select1st&lang;std::pair&lang;const int, int&rang;, int&rang;&rang;&rang;::operator ++()
</UL>
<BR>[Calls]<UL><LI><a href="#[328]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rw_tree_iter&lang;std::pair&lang;const int, int&rang;, int, std::pair&lang;const int, int&rang;*, std::pair&lang;const int, int&rang;&, __rw::__rw_rb_tree_node&lang;std::allocator&lang;std::pair&lang;const int, int&rang;&rang;, std::pair&lang;const int, int&rang;, int, __rw::__select1st&lang;std::pair&lang;const int, int&rang;, int&rang;&rang;&rang;::operator ++()
<LI><a href="#[327]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rw_tree_iter&lang;std::pair&lang;const int, int&rang;, int, std::pair&lang;const int, int&rang;*, std::pair&lang;const int, int&rang;&, __rw::__rw_rb_tree_node&lang;std::allocator&lang;std::pair&lang;const int, int&rang;&rang;, std::pair&lang;const int, int&rang;, int, __rw::__select1st&lang;std::pair&lang;const int, int&rang;, int&rang;&rang;&rang;::__rw_tree_iter(const __rw::__rw_tree_iter&lang;std::pair&lang;const int, int&rang;, int, std::pair&lang;const int, int&rang;*, std::pair&lang;const int, int&rang;&, __rw::__rw_rb_tree_node&lang;std::allocator&lang;std::pair&lang;const int, int&rang;&rang;, std::pair&lang;const int, int&rang;, int, __rw::__select1st&lang;std::pair&lang;const int, int&rang;, int&rang;&rang;&rang;&)
</UL>
<BR>[Called By]<UL><LI><a href="#[33e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rb_tree&lang;int, std::pair&lang;const int, int&rang;, __rw::__select1st&lang;std::pair&lang;const int, int&rang;, int&rang;, std::less&lang;int&rang;, std::allocator&lang;std::pair&lang;const int, int&rang;&rang;&rang;::erase(__rw::__rw_tree_iter&lang;std::pair&lang;const int, int&rang;, int, std::pair&lang;const int, int&rang;*, std::pair&lang;const int, int&rang;&, __rw::__rw_rb_tree_node&lang;std::allocator&lang;std::pair&lang;const int, int&rang;&rang;, std::pair&lang;const int, int&rang;, int, __rw::__select1st&lang;std::pair&lang;const int, int&rang;, int&rang;&rang;&rang;, __rw::__rw_tree_iter&lang;std::pair&lang;const int, int&rang;, int, std::pair&lang;const int, int&rang;*, std::pair&lang;const int, int&rang;&, __rw::__rw_rb_tree_node&lang;std::allocator&lang;std::pair&lang;const int, int&rang;&rang;, std::pair&lang;const int, int&rang;, int, __rw::__select1st&lang;std::pair&lang;const int, int&rang;, int&rang;&rang;&rang;)
<LI><a href="#[135]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;stl_test()
</UL>

<P><STRONG><a name="[328]"></a>__rw::__rw_tree_iter&lang;std::pair&lang;const int, int&rang;, int, std::pair&lang;const int, int&rang;*, std::pair&lang;const int, int&rang;&, __rw::__rw_rb_tree_node&lang;std::allocator&lang;std::pair&lang;const int, int&rang;&rang;, std::pair&lang;const int, int&rang;, int, __rw::__select1st&lang;std::pair&lang;const int, int&rang;, int&rang;&rang;&rang;::operator ++()</STRONG> (Thumb, 104 bytes, Stack size 16 bytes, main.o(t._ZN4__rw14__rw_tree_iterISt4pairIKiiEiPS3_RS3_NS_17__rw_rb_tree_nodeISaIS3_ES3_iNS_11__select1stIS3_iEEEEEppEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = __rw::__rw_tree_iter&lang;std::pair&lang;const int, int&rang;, int, std::pair&lang;const int, int&rang;*, std::pair&lang;const int, int&rang;&, __rw::__rw_rb_tree_node&lang;std::allocator&lang;std::pair&lang;const int, int&rang;&rang;, std::pair&lang;const int, int&rang;, int, __rw::__select1st&lang;std::pair&lang;const int, int&rang;, int&rang;&rang;&rang;::operator ++()
</UL>
<BR>[Calls]<UL><LI><a href="#[324]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rw_rb_tree_node&lang;std::allocator&lang;std::pair&lang;const int, int&rang;&rang;, std::pair&lang;const int, int&rang;, int, __rw::__select1st&lang;std::pair&lang;const int, int&rang;, int&rang;&rang;::_C_parent()
<LI><a href="#[325]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rw_rb_tree_node&lang;std::allocator&lang;std::pair&lang;const int, int&rang;&rang;, std::pair&lang;const int, int&rang;, int, __rw::__select1st&lang;std::pair&lang;const int, int&rang;, int&rang;&rang;::_C_right()
<LI><a href="#[326]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rw_rb_tree_node&lang;std::allocator&lang;std::pair&lang;const int, int&rang;&rang;, std::pair&lang;const int, int&rang;, int, __rw::__select1st&lang;std::pair&lang;const int, int&rang;, int&rang;&rang;::_C_left()
</UL>
<BR>[Called By]<UL><LI><a href="#[33b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rb_tree&lang;int, std::pair&lang;const int, int&rang;, __rw::__select1st&lang;std::pair&lang;const int, int&rang;, int&rang;, std::less&lang;int&rang;, std::allocator&lang;std::pair&lang;const int, int&rang;&rang;&rang;::erase(__rw::__rw_tree_iter&lang;std::pair&lang;const int, int&rang;, int, std::pair&lang;const int, int&rang;*, std::pair&lang;const int, int&rang;&, __rw::__rw_rb_tree_node&lang;std::allocator&lang;std::pair&lang;const int, int&rang;&rang;, std::pair&lang;const int, int&rang;, int, __rw::__select1st&lang;std::pair&lang;const int, int&rang;, int&rang;&rang;&rang;)
<LI><a href="#[13e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rw_tree_iter&lang;std::pair&lang;const int, int&rang;, int, std::pair&lang;const int, int&rang;*, std::pair&lang;const int, int&rang;&, __rw::__rw_rb_tree_node&lang;std::allocator&lang;std::pair&lang;const int, int&rang;&rang;, std::pair&lang;const int, int&rang;, int, __rw::__select1st&lang;std::pair&lang;const int, int&rang;, int&rang;&rang;&rang;::operator ++(int)
</UL>

<P><STRONG><a name="[54]"></a>__rw::__rw_facet_maker&lang;std::ctype&lang;char&rang;&rang;::_C_maker_func(int, const char*, unsigned)</STRONG> (Thumb, 150 bytes, Stack size 40 bytes, main.o(t._ZN4__rw16__rw_facet_makerISt5ctypeIcEE13_C_maker_funcEiPKcj))
<BR><BR>[Stack]<UL><LI>Max Depth = 216<LI>Call Chain = __rw::__rw_facet_maker&lang;std::ctype&lang;char&rang;&rang;::_C_maker_func(int, const char*, unsigned) &rArr; std::ctype_byname&lang;char&rang;::ctype_byname(const char*, unsigned) &rArr; std::ctype_byname&lang;char&rang;::_C_get_mask_table(const char*) &rArr; __rw::__rw_use_c_lib_locale::__rw_use_c_lib_locale(const char*, int) &rArr; operator new[] (unsigned) &rArr; operator new(unsigned) &rArr; malloc &rArr; _malloc_internal &rArr; __Heap_Full &rArr; __Heap_ProvideMemory &rArr; _free_internal &rArr; _mutex_release
</UL>
<BR>[Calls]<UL><LI><a href="#[2e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::ctype&lang;char&rang;::ctype(const std::ctype_base::mask*, bool, unsigned)
<LI><a href="#[2e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::ctype_byname&lang;char&rang;::ctype_byname(const char*, unsigned)
<LI><a href="#[281]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;operator new(unsigned)
</UL>
<BR>[Address Reference Count : 3]<UL><LI> ios.o(t._ZNSt9basic_iosIcSt11char_traitsIcEE4initEPSt15basic_streambufIcS1_E)
<LI> rwstdexcept.o(t._ZNKSt8messagesIcE6do_getEiiiRKSs)
<LI> main.o(t._ZNKSt9basic_iosIcSt11char_traitsIcEE5widenEc)
</UL>
<P><STRONG><a name="[55]"></a>__rw::__rw_facet_maker&lang;std::ctype&lang;wchar_t&rang;&rang;::_C_maker_func(int, const char*, unsigned)</STRONG> (Thumb, 46 bytes, Stack size 8 bytes, ios.o(t._ZN4__rw16__rw_facet_makerISt5ctypeIwEE13_C_maker_funcEiPKcj))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = __rw::__rw_facet_maker&lang;std::ctype&lang;wchar_t&rang;&rang;::_C_maker_func(int, const char*, unsigned) &rArr; __rw::__rw_create_named_facet&lang;std::ctype&lang;wchar_t&rang;&rang;(T1*, const char*, unsigned) &rArr; operator new(unsigned) &rArr; malloc &rArr; _malloc_internal &rArr; __Heap_Full &rArr; __Heap_ProvideMemory &rArr; _free_internal &rArr; _mutex_release
</UL>
<BR>[Calls]<UL><LI><a href="#[329]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rw_create_named_facet&lang;std::ctype&lang;wchar_t&rang;&rang;(T1*, const char*, unsigned)
<LI><a href="#[2ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::ctype&lang;wchar_t&rang;::ctype(unsigned)
<LI><a href="#[281]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;operator new(unsigned)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> ios.o(t._ZNSt9basic_iosIwSt11char_traitsIwEE4initEPSt15basic_streambufIwS1_E)
</UL>
<P><STRONG><a name="[56]"></a>__rw::__rw_facet_maker&lang;std::codecvt&lang;char, char, std::__mbstate_t&rang;&rang;::_C_maker_func(int, const char*, unsigned)</STRONG> (Thumb, 46 bytes, Stack size 8 bytes, ios.o(t._ZN4__rw16__rw_facet_makerISt7codecvtIccSt11__mbstate_tEE13_C_maker_funcEiPKcj))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = __rw::__rw_facet_maker&lang;std::codecvt&lang;char, char, std::__mbstate_t&rang;&rang;::_C_maker_func(int, const char*, unsigned) &rArr; __rw::__rw_create_named_facet&lang;std::codecvt&lang;char, char, std::__mbstate_t&rang;&rang;(T1*, const char*, unsigned) &rArr; operator new(unsigned) &rArr; malloc &rArr; _malloc_internal &rArr; __Heap_Full &rArr; __Heap_ProvideMemory &rArr; _free_internal &rArr; _mutex_release
</UL>
<BR>[Calls]<UL><LI><a href="#[32a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rw_create_named_facet&lang;std::codecvt&lang;char, char, std::__mbstate_t&rang;&rang;(T1*, const char*, unsigned)
<LI><a href="#[2f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::codecvt&lang;char, char, std::__mbstate_t&rang;::codecvt(unsigned)
<LI><a href="#[281]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;operator new(unsigned)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> ios.o(t._ZSt9use_facetISt7codecvtIccSt11__mbstate_tEERKT_RKSt6locale)
</UL>
<P><STRONG><a name="[57]"></a>__rw::__rw_facet_maker&lang;std::codecvt&lang;wchar_t, char, std::__mbstate_t&rang;&rang;::_C_maker_func(int, const char*, unsigned)</STRONG> (Thumb, 46 bytes, Stack size 8 bytes, ios.o(t._ZN4__rw16__rw_facet_makerISt7codecvtIwcSt11__mbstate_tEE13_C_maker_funcEiPKcj))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = __rw::__rw_facet_maker&lang;std::codecvt&lang;wchar_t, char, std::__mbstate_t&rang;&rang;::_C_maker_func(int, const char*, unsigned) &rArr; __rw::__rw_create_named_facet&lang;std::codecvt&lang;wchar_t, char, std::__mbstate_t&rang;&rang;(T1*, const char*, unsigned) &rArr; operator new(unsigned) &rArr; malloc &rArr; _malloc_internal &rArr; __Heap_Full &rArr; __Heap_ProvideMemory &rArr; _free_internal &rArr; _mutex_release
</UL>
<BR>[Calls]<UL><LI><a href="#[32b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rw_create_named_facet&lang;std::codecvt&lang;wchar_t, char, std::__mbstate_t&rang;&rang;(T1*, const char*, unsigned)
<LI><a href="#[2f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::codecvt&lang;wchar_t, char, std::__mbstate_t&rang;::codecvt(unsigned)
<LI><a href="#[281]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;operator new(unsigned)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> ios.o(t._ZSt9use_facetISt7codecvtIwcSt11__mbstate_tEERKT_RKSt6locale)
</UL>
<P><STRONG><a name="[335]"></a>__rw::__rw_new_capacity&lang;__rw::__rb_tree&lang;int, std::pair&lang;const int, int&rang;, __rw::__select1st&lang;std::pair&lang;const int, int&rang;, int&rang;, std::less&lang;int&rang;, std::allocator&lang;std::pair&lang;const int, int&rang;&rang;&rang;&rang;(unsigned, const T1*)</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, main.o(t._ZN4__rw17__rw_new_capacityINS_9__rb_treeIiSt4pairIKiiENS_11__select1stIS4_iEESt4lessIiESaIS4_EEEEEjjPKT_))
<BR><BR>[Called By]<UL><LI><a href="#[32d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rb_tree&lang;int, std::pair&lang;const int, int&rang;, __rw::__select1st&lang;std::pair&lang;const int, int&rang;, int&rang;, std::less&lang;int&rang;, std::allocator&lang;std::pair&lang;const int, int&rang;&rang;&rang;::_C_add_new_buffer()
</UL>

<P><STRONG><a name="[341]"></a>__rw::__rw_rb_tree_node&lang;std::allocator&lang;std::pair&lang;const int, int&rang;&rang;, std::pair&lang;const int, int&rang;, int, __rw::__select1st&lang;std::pair&lang;const int, int&rang;, int&rang;&rang;::_C_key()</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, main.o(t._ZN4__rw17__rw_rb_tree_nodeISaISt4pairIKiiEES3_iNS_11__select1stIS3_iEEE6_C_keyEv))
<BR><BR>[Called By]<UL><LI><a href="#[343]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rb_tree&lang;int, std::pair&lang;const int, int&rang;, __rw::__select1st&lang;std::pair&lang;const int, int&rang;, int&rang;, std::less&lang;int&rang;, std::allocator&lang;std::pair&lang;const int, int&rang;&rang;&rang;::_C_insert(__rw::__rw_rb_tree_node&lang;std::allocator&lang;std::pair&lang;const int, int&rang;&rang;, std::pair&lang;const int, int&rang;, int, __rw::__select1st&lang;std::pair&lang;const int, int&rang;, int&rang;&rang;*, __rw::__rw_rb_tree_node&lang;std::allocator&lang;std::pair&lang;const int, int&rang;&rang;, std::pair&lang;const int, int&rang;, int, __rw::__select1st&lang;std::pair&lang;const int, int&rang;, int&rang;&rang;*, const std::pair&lang;const int, int&rang;&)
<LI><a href="#[340]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rb_tree&lang;int, std::pair&lang;const int, int&rang;, __rw::__select1st&lang;std::pair&lang;const int, int&rang;, int&rang;, std::less&lang;int&rang;, std::allocator&lang;std::pair&lang;const int, int&rang;&rang;&rang;::insert(const std::pair&lang;const int, int&rang;&)
</UL>

<P><STRONG><a name="[326]"></a>__rw::__rw_rb_tree_node&lang;std::allocator&lang;std::pair&lang;const int, int&rang;&rang;, std::pair&lang;const int, int&rang;, int, __rw::__select1st&lang;std::pair&lang;const int, int&rang;, int&rang;&rang;::_C_left()</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, main.o(t._ZN4__rw17__rw_rb_tree_nodeISaISt4pairIKiiEES3_iNS_11__select1stIS3_iEEE7_C_leftEv))
<BR><BR>[Called By]<UL><LI><a href="#[331]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rb_tree&lang;int, std::pair&lang;const int, int&rang;, __rw::__select1st&lang;std::pair&lang;const int, int&rang;, int&rang;, std::less&lang;int&rang;, std::allocator&lang;std::pair&lang;const int, int&rang;&rang;&rang;::_C_leftmost() const
<LI><a href="#[343]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rb_tree&lang;int, std::pair&lang;const int, int&rang;, __rw::__select1st&lang;std::pair&lang;const int, int&rang;, int&rang;, std::less&lang;int&rang;, std::allocator&lang;std::pair&lang;const int, int&rang;&rang;&rang;::_C_insert(__rw::__rw_rb_tree_node&lang;std::allocator&lang;std::pair&lang;const int, int&rang;&rang;, std::pair&lang;const int, int&rang;, int, __rw::__select1st&lang;std::pair&lang;const int, int&rang;, int&rang;&rang;*, __rw::__rw_rb_tree_node&lang;std::allocator&lang;std::pair&lang;const int, int&rang;&rang;, std::pair&lang;const int, int&rang;, int, __rw::__select1st&lang;std::pair&lang;const int, int&rang;, int&rang;&rang;*, const std::pair&lang;const int, int&rang;&)
<LI><a href="#[33f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rb_tree&lang;int, std::pair&lang;const int, int&rang;, __rw::__select1st&lang;std::pair&lang;const int, int&rang;, int&rang;, std::less&lang;int&rang;, std::allocator&lang;std::pair&lang;const int, int&rang;&rang;&rang;::_C_erase(__rw::__rw_rb_tree_node&lang;std::allocator&lang;std::pair&lang;const int, int&rang;&rang;, std::pair&lang;const int, int&rang;, int, __rw::__select1st&lang;std::pair&lang;const int, int&rang;, int&rang;&rang;*)
<LI><a href="#[340]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rb_tree&lang;int, std::pair&lang;const int, int&rang;, __rw::__select1st&lang;std::pair&lang;const int, int&rang;, int&rang;, std::less&lang;int&rang;, std::allocator&lang;std::pair&lang;const int, int&rang;&rang;&rang;::insert(const std::pair&lang;const int, int&rang;&)
<LI><a href="#[33b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rb_tree&lang;int, std::pair&lang;const int, int&rang;, __rw::__select1st&lang;std::pair&lang;const int, int&rang;, int&rang;, std::less&lang;int&rang;, std::allocator&lang;std::pair&lang;const int, int&rang;&rang;&rang;::erase(__rw::__rw_tree_iter&lang;std::pair&lang;const int, int&rang;, int, std::pair&lang;const int, int&rang;*, std::pair&lang;const int, int&rang;&, __rw::__rw_rb_tree_node&lang;std::allocator&lang;std::pair&lang;const int, int&rang;&rang;, std::pair&lang;const int, int&rang;, int, __rw::__select1st&lang;std::pair&lang;const int, int&rang;, int&rang;&rang;&rang;)
<LI><a href="#[334]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rb_tree&lang;int, std::pair&lang;const int, int&rang;, __rw::__select1st&lang;std::pair&lang;const int, int&rang;, int&rang;, std::less&lang;int&rang;, std::allocator&lang;std::pair&lang;const int, int&rang;&rang;&rang;::__rotate_right(__rw::__rw_rb_tree_node&lang;std::allocator&lang;std::pair&lang;const int, int&rang;&rang;, std::pair&lang;const int, int&rang;, int, __rw::__select1st&lang;std::pair&lang;const int, int&rang;, int&rang;&rang;*)
<LI><a href="#[333]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rb_tree&lang;int, std::pair&lang;const int, int&rang;, __rw::__select1st&lang;std::pair&lang;const int, int&rang;, int&rang;, std::less&lang;int&rang;, std::allocator&lang;std::pair&lang;const int, int&rang;&rang;&rang;::__rotate_left(__rw::__rw_rb_tree_node&lang;std::allocator&lang;std::pair&lang;const int, int&rang;&rang;, std::pair&lang;const int, int&rang;, int, __rw::__select1st&lang;std::pair&lang;const int, int&rang;, int&rang;&rang;*)
<LI><a href="#[32f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rb_tree&lang;int, std::pair&lang;const int, int&rang;, __rw::__select1st&lang;std::pair&lang;const int, int&rang;, int&rang;, std::less&lang;int&rang;, std::allocator&lang;std::pair&lang;const int, int&rang;&rang;&rang;::_C_erase_leaf(__rw::__rw_rb_tree_node&lang;std::allocator&lang;std::pair&lang;const int, int&rang;&rang;, std::pair&lang;const int, int&rang;, int, __rw::__select1st&lang;std::pair&lang;const int, int&rang;, int&rang;&rang;*)
<LI><a href="#[328]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rw_tree_iter&lang;std::pair&lang;const int, int&rang;, int, std::pair&lang;const int, int&rang;*, std::pair&lang;const int, int&rang;&, __rw::__rw_rb_tree_node&lang;std::allocator&lang;std::pair&lang;const int, int&rang;&rang;, std::pair&lang;const int, int&rang;, int, __rw::__select1st&lang;std::pair&lang;const int, int&rang;, int&rang;&rang;&rang;::operator ++()
<LI><a href="#[323]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rw_tree_iter&lang;std::pair&lang;const int, int&rang;, int, std::pair&lang;const int, int&rang;*, std::pair&lang;const int, int&rang;&, __rw::__rw_rb_tree_node&lang;std::allocator&lang;std::pair&lang;const int, int&rang;&rang;, std::pair&lang;const int, int&rang;, int, __rw::__select1st&lang;std::pair&lang;const int, int&rang;, int&rang;&rang;&rang;::operator --()
</UL>

<P><STRONG><a name="[325]"></a>__rw::__rw_rb_tree_node&lang;std::allocator&lang;std::pair&lang;const int, int&rang;&rang;, std::pair&lang;const int, int&rang;, int, __rw::__select1st&lang;std::pair&lang;const int, int&rang;, int&rang;&rang;::_C_right()</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, main.o(t._ZN4__rw17__rw_rb_tree_nodeISaISt4pairIKiiEES3_iNS_11__select1stIS3_iEEE8_C_rightEv))
<BR><BR>[Called By]<UL><LI><a href="#[330]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rb_tree&lang;int, std::pair&lang;const int, int&rang;, __rw::__select1st&lang;std::pair&lang;const int, int&rang;, int&rang;, std::less&lang;int&rang;, std::allocator&lang;std::pair&lang;const int, int&rang;&rang;&rang;::_C_rightmost() const
<LI><a href="#[343]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rb_tree&lang;int, std::pair&lang;const int, int&rang;, __rw::__select1st&lang;std::pair&lang;const int, int&rang;, int&rang;, std::less&lang;int&rang;, std::allocator&lang;std::pair&lang;const int, int&rang;&rang;&rang;::_C_insert(__rw::__rw_rb_tree_node&lang;std::allocator&lang;std::pair&lang;const int, int&rang;&rang;, std::pair&lang;const int, int&rang;, int, __rw::__select1st&lang;std::pair&lang;const int, int&rang;, int&rang;&rang;*, __rw::__rw_rb_tree_node&lang;std::allocator&lang;std::pair&lang;const int, int&rang;&rang;, std::pair&lang;const int, int&rang;, int, __rw::__select1st&lang;std::pair&lang;const int, int&rang;, int&rang;&rang;*, const std::pair&lang;const int, int&rang;&)
<LI><a href="#[33f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rb_tree&lang;int, std::pair&lang;const int, int&rang;, __rw::__select1st&lang;std::pair&lang;const int, int&rang;, int&rang;, std::less&lang;int&rang;, std::allocator&lang;std::pair&lang;const int, int&rang;&rang;&rang;::_C_erase(__rw::__rw_rb_tree_node&lang;std::allocator&lang;std::pair&lang;const int, int&rang;&rang;, std::pair&lang;const int, int&rang;, int, __rw::__select1st&lang;std::pair&lang;const int, int&rang;, int&rang;&rang;*)
<LI><a href="#[340]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rb_tree&lang;int, std::pair&lang;const int, int&rang;, __rw::__select1st&lang;std::pair&lang;const int, int&rang;, int&rang;, std::less&lang;int&rang;, std::allocator&lang;std::pair&lang;const int, int&rang;&rang;&rang;::insert(const std::pair&lang;const int, int&rang;&)
<LI><a href="#[33b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rb_tree&lang;int, std::pair&lang;const int, int&rang;, __rw::__select1st&lang;std::pair&lang;const int, int&rang;, int&rang;, std::less&lang;int&rang;, std::allocator&lang;std::pair&lang;const int, int&rang;&rang;&rang;::erase(__rw::__rw_tree_iter&lang;std::pair&lang;const int, int&rang;, int, std::pair&lang;const int, int&rang;*, std::pair&lang;const int, int&rang;&, __rw::__rw_rb_tree_node&lang;std::allocator&lang;std::pair&lang;const int, int&rang;&rang;, std::pair&lang;const int, int&rang;, int, __rw::__select1st&lang;std::pair&lang;const int, int&rang;, int&rang;&rang;&rang;)
<LI><a href="#[334]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rb_tree&lang;int, std::pair&lang;const int, int&rang;, __rw::__select1st&lang;std::pair&lang;const int, int&rang;, int&rang;, std::less&lang;int&rang;, std::allocator&lang;std::pair&lang;const int, int&rang;&rang;&rang;::__rotate_right(__rw::__rw_rb_tree_node&lang;std::allocator&lang;std::pair&lang;const int, int&rang;&rang;, std::pair&lang;const int, int&rang;, int, __rw::__select1st&lang;std::pair&lang;const int, int&rang;, int&rang;&rang;*)
<LI><a href="#[333]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rb_tree&lang;int, std::pair&lang;const int, int&rang;, __rw::__select1st&lang;std::pair&lang;const int, int&rang;, int&rang;, std::less&lang;int&rang;, std::allocator&lang;std::pair&lang;const int, int&rang;&rang;&rang;::__rotate_left(__rw::__rw_rb_tree_node&lang;std::allocator&lang;std::pair&lang;const int, int&rang;&rang;, std::pair&lang;const int, int&rang;, int, __rw::__select1st&lang;std::pair&lang;const int, int&rang;, int&rang;&rang;*)
<LI><a href="#[32f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rb_tree&lang;int, std::pair&lang;const int, int&rang;, __rw::__select1st&lang;std::pair&lang;const int, int&rang;, int&rang;, std::less&lang;int&rang;, std::allocator&lang;std::pair&lang;const int, int&rang;&rang;&rang;::_C_erase_leaf(__rw::__rw_rb_tree_node&lang;std::allocator&lang;std::pair&lang;const int, int&rang;&rang;, std::pair&lang;const int, int&rang;, int, __rw::__select1st&lang;std::pair&lang;const int, int&rang;, int&rang;&rang;*)
<LI><a href="#[328]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rw_tree_iter&lang;std::pair&lang;const int, int&rang;, int, std::pair&lang;const int, int&rang;*, std::pair&lang;const int, int&rang;&, __rw::__rw_rb_tree_node&lang;std::allocator&lang;std::pair&lang;const int, int&rang;&rang;, std::pair&lang;const int, int&rang;, int, __rw::__select1st&lang;std::pair&lang;const int, int&rang;, int&rang;&rang;&rang;::operator ++()
<LI><a href="#[323]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rw_tree_iter&lang;std::pair&lang;const int, int&rang;, int, std::pair&lang;const int, int&rang;*, std::pair&lang;const int, int&rang;&, __rw::__rw_rb_tree_node&lang;std::allocator&lang;std::pair&lang;const int, int&rang;&rang;, std::pair&lang;const int, int&rang;, int, __rw::__select1st&lang;std::pair&lang;const int, int&rang;, int&rang;&rang;&rang;::operator --()
</UL>

<P><STRONG><a name="[324]"></a>__rw::__rw_rb_tree_node&lang;std::allocator&lang;std::pair&lang;const int, int&rang;&rang;, std::pair&lang;const int, int&rang;, int, __rw::__select1st&lang;std::pair&lang;const int, int&rang;, int&rang;&rang;::_C_parent()</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, main.o(t._ZN4__rw17__rw_rb_tree_nodeISaISt4pairIKiiEES3_iNS_11__select1stIS3_iEEE9_C_parentEv))
<BR><BR>[Called By]<UL><LI><a href="#[332]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rb_tree&lang;int, std::pair&lang;const int, int&rang;, __rw::__select1st&lang;std::pair&lang;const int, int&rang;, int&rang;, std::less&lang;int&rang;, std::allocator&lang;std::pair&lang;const int, int&rang;&rang;&rang;::_C_root() const
<LI><a href="#[343]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rb_tree&lang;int, std::pair&lang;const int, int&rang;, __rw::__select1st&lang;std::pair&lang;const int, int&rang;, int&rang;, std::less&lang;int&rang;, std::allocator&lang;std::pair&lang;const int, int&rang;&rang;&rang;::_C_insert(__rw::__rw_rb_tree_node&lang;std::allocator&lang;std::pair&lang;const int, int&rang;&rang;, std::pair&lang;const int, int&rang;, int, __rw::__select1st&lang;std::pair&lang;const int, int&rang;, int&rang;&rang;*, __rw::__rw_rb_tree_node&lang;std::allocator&lang;std::pair&lang;const int, int&rang;&rang;, std::pair&lang;const int, int&rang;, int, __rw::__select1st&lang;std::pair&lang;const int, int&rang;, int&rang;&rang;*, const std::pair&lang;const int, int&rang;&)
<LI><a href="#[33b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rb_tree&lang;int, std::pair&lang;const int, int&rang;, __rw::__select1st&lang;std::pair&lang;const int, int&rang;, int&rang;, std::less&lang;int&rang;, std::allocator&lang;std::pair&lang;const int, int&rang;&rang;&rang;::erase(__rw::__rw_tree_iter&lang;std::pair&lang;const int, int&rang;, int, std::pair&lang;const int, int&rang;*, std::pair&lang;const int, int&rang;&, __rw::__rw_rb_tree_node&lang;std::allocator&lang;std::pair&lang;const int, int&rang;&rang;, std::pair&lang;const int, int&rang;, int, __rw::__select1st&lang;std::pair&lang;const int, int&rang;, int&rang;&rang;&rang;)
<LI><a href="#[334]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rb_tree&lang;int, std::pair&lang;const int, int&rang;, __rw::__select1st&lang;std::pair&lang;const int, int&rang;, int&rang;, std::less&lang;int&rang;, std::allocator&lang;std::pair&lang;const int, int&rang;&rang;&rang;::__rotate_right(__rw::__rw_rb_tree_node&lang;std::allocator&lang;std::pair&lang;const int, int&rang;&rang;, std::pair&lang;const int, int&rang;, int, __rw::__select1st&lang;std::pair&lang;const int, int&rang;, int&rang;&rang;*)
<LI><a href="#[333]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rb_tree&lang;int, std::pair&lang;const int, int&rang;, __rw::__select1st&lang;std::pair&lang;const int, int&rang;, int&rang;, std::less&lang;int&rang;, std::allocator&lang;std::pair&lang;const int, int&rang;&rang;&rang;::__rotate_left(__rw::__rw_rb_tree_node&lang;std::allocator&lang;std::pair&lang;const int, int&rang;&rang;, std::pair&lang;const int, int&rang;, int, __rw::__select1st&lang;std::pair&lang;const int, int&rang;, int&rang;&rang;*)
<LI><a href="#[32f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rb_tree&lang;int, std::pair&lang;const int, int&rang;, __rw::__select1st&lang;std::pair&lang;const int, int&rang;, int&rang;, std::less&lang;int&rang;, std::allocator&lang;std::pair&lang;const int, int&rang;&rang;&rang;::_C_erase_leaf(__rw::__rw_rb_tree_node&lang;std::allocator&lang;std::pair&lang;const int, int&rang;&rang;, std::pair&lang;const int, int&rang;, int, __rw::__select1st&lang;std::pair&lang;const int, int&rang;, int&rang;&rang;*)
<LI><a href="#[328]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rw_tree_iter&lang;std::pair&lang;const int, int&rang;, int, std::pair&lang;const int, int&rang;*, std::pair&lang;const int, int&rang;&, __rw::__rw_rb_tree_node&lang;std::allocator&lang;std::pair&lang;const int, int&rang;&rang;, std::pair&lang;const int, int&rang;, int, __rw::__select1st&lang;std::pair&lang;const int, int&rang;, int&rang;&rang;&rang;::operator ++()
<LI><a href="#[323]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rw_tree_iter&lang;std::pair&lang;const int, int&rang;, int, std::pair&lang;const int, int&rang;*, std::pair&lang;const int, int&rang;&, __rw::__rw_rb_tree_node&lang;std::allocator&lang;std::pair&lang;const int, int&rang;&rang;, std::pair&lang;const int, int&rang;, int, __rw::__select1st&lang;std::pair&lang;const int, int&rang;, int&rang;&rang;&rang;::operator --()
</UL>

<P><STRONG><a name="[2d8]"></a>__rw::__rw_locale_vector&lang;__rw::__rw_facet_base*&rang;::resize(unsigned, __rw::__rw_facet_base*const &)</STRONG> (Thumb, 76 bytes, Stack size 24 bytes, locale.o(t._ZN4__rw18__rw_locale_vectorIPNS_15__rw_facet_baseEE6resizeEjRKS2_))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = __rw::__rw_locale_vector&lang;__rw::__rw_facet_base*&rang;::resize(unsigned, __rw::__rw_facet_base*const &) &rArr; operator new[] (unsigned) &rArr; operator new(unsigned) &rArr; malloc &rArr; _malloc_internal &rArr; __Heap_Full &rArr; __Heap_ProvideMemory &rArr; _free_internal &rArr; _mutex_release
</UL>
<BR>[Calls]<UL><LI><a href="#[290]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;operator new[] (unsigned)
<LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;operator delete[] (void*)
</UL>
<BR>[Called By]<UL><LI><a href="#[2d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::locale::_C_make_facet(const std::locale::id&, bool, int, __rw::__rw_facet_base*(*)(int, const char*, unsigned)) const
<LI><a href="#[2da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::locale::_C_install_facet(__rw::__rw_facet_base*, const std::locale::id&) const
</UL>

<P><STRONG><a name="[2a1]"></a>__rw::__rw_locale_vector&lang;__rw::__rw_facet_base*&rang;::~__rw_locale_vector()</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, main.o(t._ZN4__rw18__rw_locale_vectorIPNS_15__rw_facet_baseEED1Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = __rw::__rw_locale_vector&lang;__rw::__rw_facet_base*&rang;::~__rw_locale_vector() &rArr; operator delete[] (void*) &rArr; operator delete (void*) &rArr; free &rArr; _free_internal &rArr; _mutex_release
</UL>
<BR>[Calls]<UL><LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;operator delete[] (void*)
</UL>
<BR>[Called By]<UL><LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::locale::~locale()
<LI><a href="#[2a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rw_locale_imp::~__rw_locale_imp()
</UL>

<P><STRONG><a name="[450]"></a>__rw::__rw_locale_vector&lang;__rw::__rw_facet_base*&rang;::~__rw_locale_vector__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, main.o(t._ZN4__rw18__rw_locale_vectorIPNS_15__rw_facet_baseEED1Ev), UNUSED)

<P><STRONG><a name="[51]"></a>__rw::__rw_locale_vector&lang;__rw::__rw_cat*&rang;::~__rw_locale_vector()</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, rwcats.o(t._ZN4__rw18__rw_locale_vectorIPNS_8__rw_catEED1Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = __rw::__rw_locale_vector&lang;__rw::__rw_cat*&rang;::~__rw_locale_vector() &rArr; operator delete[] (void*) &rArr; operator delete (void*) &rArr; free &rArr; _free_internal &rArr; _mutex_release
</UL>
<BR>[Calls]<UL><LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;operator delete[] (void*)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> rwcats.o(i.__sti___10_rwcats_cpp)
</UL>
<P><STRONG><a name="[451]"></a>__rw::__rw_locale_vector&lang;__rw::__rw_cat*&rang;::~__rw_locale_vector__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, rwcats.o(t._ZN4__rw18__rw_locale_vectorIPNS_8__rw_catEED1Ev), UNUSED)

<P><STRONG><a name="[296]"></a>__rw::__rw_locale_vector&lang;std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;&rang;::~__rw_locale_vector()</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, main.o(t._ZN4__rw18__rw_locale_vectorISsED1Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 552 + Unknown Stack Size
<LI>Call Chain = __rw::__rw_locale_vector&lang;std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;&rang;::~__rw_locale_vector() &rArr; __aeabi_vec_delete &rArr; __aeabi_vec_dtor_cookie &rArr; __aeabi_vec_dtor &rArr; __ARM_vec_cleanup_rethrow &rArr; __cxa_rethrow &rArr; _Unwind_RaiseException &rArr; __ARM_Unwind_RaiseException &rArr; malloc &rArr; _malloc_internal &rArr; __Heap_Full &rArr; __Heap_ProvideMemory &rArr; _free_internal &rArr; _mutex_release
</UL>
<BR>[Calls]<UL><LI><a href="#[29e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_vec_delete
</UL>
<BR>[Called By]<UL><LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::locale::~locale()
<LI><a href="#[291]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rw_vfmatstr(char*, unsigned, int, std::__va_list)
<LI><a href="#[2f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::locale::locale(const std::locale&, const char*, int)
<LI><a href="#[2a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rw_locale_imp::~__rw_locale_imp()
</UL>

<P><STRONG><a name="[452]"></a>__rw::__rw_locale_vector&lang;std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;&rang;::~__rw_locale_vector__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, main.o(t._ZN4__rw18__rw_locale_vectorISsED1Ev), UNUSED)

<P><STRONG><a name="[2cf]"></a>__rw::__rw_locale_vector&lang;std::__rw_open_cat_data&rang;::resize(unsigned)</STRONG> (Thumb, 112 bytes, Stack size 40 bytes, messages.o(t._ZN4__rw18__rw_locale_vectorISt18__rw_open_cat_dataE6resizeEj))
<BR><BR>[Stack]<UL><LI>Max Depth = 672 + Unknown Stack Size
<LI>Call Chain = __rw::__rw_locale_vector&lang;std::__rw_open_cat_data&rang;::resize(unsigned) &rArr; std::__rw_open_cat_data::__rw_open_cat_data() &rArr; std::locale::classic() &rArr; std::locale::locale(__rw::__rw_locale_imp*) &rArr; std::locale::_C_init() &rArr; __rw::__rw_locale_imp::__rw_locale_imp(const char*, unsigned, unsigned) &rArr; __aeabi_vec_new_cookie &rArr; __cxa_vec_new &rArr; __ARM_array_new_general &rArr; __cxa_rethrow &rArr; _Unwind_RaiseException &rArr; __ARM_Unwind_RaiseException &rArr; malloc &rArr; _malloc_internal &rArr; __Heap_Full &rArr; __Heap_ProvideMemory &rArr; _free_internal &rArr; _mutex_release
</UL>
<BR>[Calls]<UL><LI><a href="#[29c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_vec_new_cookie
<LI><a href="#[2ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__rw_open_cat_data::operator =(const std::__rw_open_cat_data&)
<LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__rw_open_cat_data::__rw_open_cat_data()
<LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::locale::~locale()
<LI><a href="#[29e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_vec_delete
</UL>
<BR>[Called By]<UL><LI><a href="#[2cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__rw_messages_base::_C_cat_open(const std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;&, const std::locale&) const
</UL>

<P><STRONG><a name="[4c]"></a>__rw::__rw_locale_vector&lang;std::__rw_open_cat_data&rang;::~__rw_locale_vector()</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, messages.o(t._ZN4__rw18__rw_locale_vectorISt18__rw_open_cat_dataED1Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 552 + Unknown Stack Size
<LI>Call Chain = __rw::__rw_locale_vector&lang;std::__rw_open_cat_data&rang;::~__rw_locale_vector() &rArr; __aeabi_vec_delete &rArr; __aeabi_vec_dtor_cookie &rArr; __aeabi_vec_dtor &rArr; __ARM_vec_cleanup_rethrow &rArr; __cxa_rethrow &rArr; _Unwind_RaiseException &rArr; __ARM_Unwind_RaiseException &rArr; malloc &rArr; _malloc_internal &rArr; __Heap_Full &rArr; __Heap_ProvideMemory &rArr; _free_internal &rArr; _mutex_release
</UL>
<BR>[Calls]<UL><LI><a href="#[29e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_vec_delete
</UL>
<BR>[Address Reference Count : 1]<UL><LI> messages.o(i._ZSt13__rw_get_catsv)
</UL>
<P><STRONG><a name="[453]"></a>__rw::__rw_locale_vector&lang;std::__rw_open_cat_data&rang;::~__rw_locale_vector__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, messages.o(t._ZN4__rw18__rw_locale_vectorISt18__rw_open_cat_dataED1Ev), UNUSED)

<P><STRONG><a name="[329]"></a>__rw::__rw_create_named_facet&lang;std::ctype&lang;wchar_t&rang;&rang;(T1*, const char*, unsigned)</STRONG> (Thumb, 22 bytes, Stack size 16 bytes, ios.o(t._ZN4__rw23__rw_create_named_facetISt5ctypeIwEEEPT_S4_PKcj))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = __rw::__rw_create_named_facet&lang;std::ctype&lang;wchar_t&rang;&rang;(T1*, const char*, unsigned) &rArr; operator new(unsigned) &rArr; malloc &rArr; _malloc_internal &rArr; __Heap_Full &rArr; __Heap_ProvideMemory &rArr; _free_internal &rArr; _mutex_release
</UL>
<BR>[Calls]<UL><LI><a href="#[2ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::ctype&lang;wchar_t&rang;::ctype(unsigned)
<LI><a href="#[281]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;operator new(unsigned)
</UL>
<BR>[Called By]<UL><LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rw_facet_maker&lang;std::ctype&lang;wchar_t&rang;&rang;::_C_maker_func(int, const char*, unsigned)
</UL>

<P><STRONG><a name="[32a]"></a>__rw::__rw_create_named_facet&lang;std::codecvt&lang;char, char, std::__mbstate_t&rang;&rang;(T1*, const char*, unsigned)</STRONG> (Thumb, 22 bytes, Stack size 16 bytes, ios.o(t._ZN4__rw23__rw_create_named_facetISt7codecvtIccSt11__mbstate_tEEEPT_S5_PKcj))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = __rw::__rw_create_named_facet&lang;std::codecvt&lang;char, char, std::__mbstate_t&rang;&rang;(T1*, const char*, unsigned) &rArr; operator new(unsigned) &rArr; malloc &rArr; _malloc_internal &rArr; __Heap_Full &rArr; __Heap_ProvideMemory &rArr; _free_internal &rArr; _mutex_release
</UL>
<BR>[Calls]<UL><LI><a href="#[2f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::codecvt&lang;char, char, std::__mbstate_t&rang;::codecvt(unsigned)
<LI><a href="#[281]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;operator new(unsigned)
</UL>
<BR>[Called By]<UL><LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rw_facet_maker&lang;std::codecvt&lang;char, char, std::__mbstate_t&rang;&rang;::_C_maker_func(int, const char*, unsigned)
</UL>

<P><STRONG><a name="[32b]"></a>__rw::__rw_create_named_facet&lang;std::codecvt&lang;wchar_t, char, std::__mbstate_t&rang;&rang;(T1*, const char*, unsigned)</STRONG> (Thumb, 22 bytes, Stack size 16 bytes, ios.o(t._ZN4__rw23__rw_create_named_facetISt7codecvtIwcSt11__mbstate_tEEEPT_S5_PKcj))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = __rw::__rw_create_named_facet&lang;std::codecvt&lang;wchar_t, char, std::__mbstate_t&rang;&rang;(T1*, const char*, unsigned) &rArr; operator new(unsigned) &rArr; malloc &rArr; _malloc_internal &rArr; __Heap_Full &rArr; __Heap_ProvideMemory &rArr; _free_internal &rArr; _mutex_release
</UL>
<BR>[Calls]<UL><LI><a href="#[2f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::codecvt&lang;wchar_t, char, std::__mbstate_t&rang;::codecvt(unsigned)
<LI><a href="#[281]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;operator new(unsigned)
</UL>
<BR>[Called By]<UL><LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rw_facet_maker&lang;std::codecvt&lang;wchar_t, char, std::__mbstate_t&rang;&rang;::_C_maker_func(int, const char*, unsigned)
</UL>

<P><STRONG><a name="[38d]"></a>__rw::__rw_numpunct_impl_data&lang;char&rang;::_C_initfacetbase(const std::locale&)</STRONG> (Thumb, 34 bytes, Stack size 0 bytes, main.o(t._ZN4__rw23__rw_numpunct_impl_dataIcE16_C_initfacetbaseERKSt6locale), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[38c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::numpunct&lang;char&rang;::_C_initfacet(const std::locale&)
</UL>

<P><STRONG><a name="[32c]"></a>__rw::__rb_tree&lang;int, std::pair&lang;const int, int&rang;, __rw::__select1st&lang;std::pair&lang;const int, int&rang;, int&rang;, std::less&lang;int&rang;, std::allocator&lang;std::pair&lang;const int, int&rang;&rang;&rang;::_C_get_link()</STRONG> (Thumb, 68 bytes, Stack size 16 bytes, main.o(t._ZN4__rw9__rb_treeIiSt4pairIKiiENS_11__select1stIS3_iEESt4lessIiESaIS3_EE11_C_get_linkEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 504 + Unknown Stack Size
<LI>Call Chain = __rw::__rb_tree&lang;int, std::pair&lang;const int, int&rang;, __rw::__select1st&lang;std::pair&lang;const int, int&rang;, int&rang;, std::less&lang;int&rang;, std::allocator&lang;std::pair&lang;const int, int&rang;&rang;&rang;::_C_get_link() &rArr; __rw::__rb_tree&lang;int, std::pair&lang;const int, int&rang;, __rw::__select1st&lang;std::pair&lang;const int, int&rang;, int&rang;, std::less&lang;int&rang;, std::allocator&lang;std::pair&lang;const int, int&rang;&rang;&rang;::_C_add_new_buffer() &rArr; __cxa_rethrow &rArr; _Unwind_RaiseException &rArr; __ARM_Unwind_RaiseException &rArr; malloc &rArr; _malloc_internal &rArr; __Heap_Full &rArr; __Heap_ProvideMemory &rArr; _free_internal &rArr; _mutex_release
</UL>
<BR>[Calls]<UL><LI><a href="#[32d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rb_tree&lang;int, std::pair&lang;const int, int&rang;, __rw::__select1st&lang;std::pair&lang;const int, int&rang;, int&rang;, std::less&lang;int&rang;, std::allocator&lang;std::pair&lang;const int, int&rang;&rang;&rang;::_C_add_new_buffer()
</UL>
<BR>[Called By]<UL><LI><a href="#[159]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rb_tree&lang;int, std::pair&lang;const int, int&rang;, __rw::__select1st&lang;std::pair&lang;const int, int&rang;, int&rang;, std::less&lang;int&rang;, std::allocator&lang;std::pair&lang;const int, int&rang;&rang;&rang;::__rb_tree(const std::less&lang;int&rang;&, bool, const std::allocator&lang;std::pair&lang;const int, int&rang;&rang;&)
<LI><a href="#[32e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rb_tree&lang;int, std::pair&lang;const int, int&rang;, __rw::__select1st&lang;std::pair&lang;const int, int&rang;, int&rang;, std::less&lang;int&rang;, std::allocator&lang;std::pair&lang;const int, int&rang;&rang;&rang;::_C_get_node(const std::pair&lang;const int, int&rang;&)
</UL>

<P><STRONG><a name="[32e]"></a>__rw::__rb_tree&lang;int, std::pair&lang;const int, int&rang;, __rw::__select1st&lang;std::pair&lang;const int, int&rang;, int&rang;, std::less&lang;int&rang;, std::allocator&lang;std::pair&lang;const int, int&rang;&rang;&rang;::_C_get_node(const std::pair&lang;const int, int&rang;&)</STRONG> (Thumb, 76 bytes, Stack size 40 bytes, main.o(t._ZN4__rw9__rb_treeIiSt4pairIKiiENS_11__select1stIS3_iEESt4lessIiESaIS3_EE11_C_get_nodeERKS3_))
<BR><BR>[Stack]<UL><LI>Max Depth = 544 + Unknown Stack Size
<LI>Call Chain = __rw::__rb_tree&lang;int, std::pair&lang;const int, int&rang;, __rw::__select1st&lang;std::pair&lang;const int, int&rang;, int&rang;, std::less&lang;int&rang;, std::allocator&lang;std::pair&lang;const int, int&rang;&rang;&rang;::_C_get_node(const std::pair&lang;const int, int&rang;&) &rArr; __rw::__rb_tree&lang;int, std::pair&lang;const int, int&rang;, __rw::__select1st&lang;std::pair&lang;const int, int&rang;, int&rang;, std::less&lang;int&rang;, std::allocator&lang;std::pair&lang;const int, int&rang;&rang;&rang;::_C_get_link() &rArr; __rw::__rb_tree&lang;int, std::pair&lang;const int, int&rang;, __rw::__select1st&lang;std::pair&lang;const int, int&rang;, int&rang;, std::less&lang;int&rang;, std::allocator&lang;std::pair&lang;const int, int&rang;&rang;&rang;::_C_add_new_buffer() &rArr; __cxa_rethrow &rArr; _Unwind_RaiseException &rArr; __ARM_Unwind_RaiseException &rArr; malloc &rArr; _malloc_internal &rArr; __Heap_Full &rArr; __Heap_ProvideMemory &rArr; _free_internal &rArr; _mutex_release
</UL>
<BR>[Calls]<UL><LI><a href="#[32c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rb_tree&lang;int, std::pair&lang;const int, int&rang;, __rw::__select1st&lang;std::pair&lang;const int, int&rang;, int&rang;, std::less&lang;int&rang;, std::allocator&lang;std::pair&lang;const int, int&rang;&rang;&rang;::_C_get_link()
<LI><a href="#[285]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;operator new(unsigned, void*)
</UL>
<BR>[Called By]<UL><LI><a href="#[343]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rb_tree&lang;int, std::pair&lang;const int, int&rang;, __rw::__select1st&lang;std::pair&lang;const int, int&rang;, int&rang;, std::less&lang;int&rang;, std::allocator&lang;std::pair&lang;const int, int&rang;&rang;&rang;::_C_insert(__rw::__rw_rb_tree_node&lang;std::allocator&lang;std::pair&lang;const int, int&rang;&rang;, std::pair&lang;const int, int&rang;, int, __rw::__select1st&lang;std::pair&lang;const int, int&rang;, int&rang;&rang;*, __rw::__rw_rb_tree_node&lang;std::allocator&lang;std::pair&lang;const int, int&rang;&rang;, std::pair&lang;const int, int&rang;, int, __rw::__select1st&lang;std::pair&lang;const int, int&rang;, int&rang;&rang;*, const std::pair&lang;const int, int&rang;&)
</UL>

<P><STRONG><a name="[33d]"></a>__rw::__rb_tree&lang;int, std::pair&lang;const int, int&rang;, __rw::__select1st&lang;std::pair&lang;const int, int&rang;, int&rang;, std::less&lang;int&rang;, std::allocator&lang;std::pair&lang;const int, int&rang;&rang;&rang;::_C_put_node(__rw::__rw_rb_tree_node&lang;std::allocator&lang;std::pair&lang;const int, int&rang;&rang;, std::pair&lang;const int, int&rang;, int, __rw::__select1st&lang;std::pair&lang;const int, int&rang;, int&rang;&rang;*, bool)</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, main.o(t._ZN4__rw9__rb_treeIiSt4pairIKiiENS_11__select1stIS3_iEESt4lessIiESaIS3_EE11_C_put_nodeEPNS_17__rw_rb_tree_nodeIS8_S3_iS5_EEb))
<BR><BR>[Called By]<UL><LI><a href="#[2ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rb_tree&lang;int, std::pair&lang;const int, int&rang;, __rw::__select1st&lang;std::pair&lang;const int, int&rang;, int&rang;, std::less&lang;int&rang;, std::allocator&lang;std::pair&lang;const int, int&rang;&rang;&rang;::~__rb_tree()
<LI><a href="#[33f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rb_tree&lang;int, std::pair&lang;const int, int&rang;, __rw::__select1st&lang;std::pair&lang;const int, int&rang;, int&rang;, std::less&lang;int&rang;, std::allocator&lang;std::pair&lang;const int, int&rang;&rang;&rang;::_C_erase(__rw::__rw_rb_tree_node&lang;std::allocator&lang;std::pair&lang;const int, int&rang;&rang;, std::pair&lang;const int, int&rang;, int, __rw::__select1st&lang;std::pair&lang;const int, int&rang;, int&rang;&rang;*)
<LI><a href="#[33b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rb_tree&lang;int, std::pair&lang;const int, int&rang;, __rw::__select1st&lang;std::pair&lang;const int, int&rang;, int&rang;, std::less&lang;int&rang;, std::allocator&lang;std::pair&lang;const int, int&rang;&rang;&rang;::erase(__rw::__rw_tree_iter&lang;std::pair&lang;const int, int&rang;, int, std::pair&lang;const int, int&rang;*, std::pair&lang;const int, int&rang;&, __rw::__rw_rb_tree_node&lang;std::allocator&lang;std::pair&lang;const int, int&rang;&rang;, std::pair&lang;const int, int&rang;, int, __rw::__select1st&lang;std::pair&lang;const int, int&rang;, int&rang;&rang;&rang;)
</UL>

<P><STRONG><a name="[33a]"></a>__rw::__rb_tree&lang;int, std::pair&lang;const int, int&rang;, __rw::__select1st&lang;std::pair&lang;const int, int&rang;, int&rang;, std::less&lang;int&rang;, std::allocator&lang;std::pair&lang;const int, int&rang;&rang;&rang;::_C_make_iter(__rw::__rw_rb_tree_node&lang;std::allocator&lang;std::pair&lang;const int, int&rang;&rang;, std::pair&lang;const int, int&rang;, int, __rw::__select1st&lang;std::pair&lang;const int, int&rang;, int&rang;&rang;*)</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, main.o(t._ZN4__rw9__rb_treeIiSt4pairIKiiENS_11__select1stIS3_iEESt4lessIiESaIS3_EE12_C_make_iterEPNS_17__rw_rb_tree_nodeIS8_S3_iS5_EE))
<BR><BR>[Called By]<UL><LI><a href="#[343]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rb_tree&lang;int, std::pair&lang;const int, int&rang;, __rw::__select1st&lang;std::pair&lang;const int, int&rang;, int&rang;, std::less&lang;int&rang;, std::allocator&lang;std::pair&lang;const int, int&rang;&rang;&rang;::_C_insert(__rw::__rw_rb_tree_node&lang;std::allocator&lang;std::pair&lang;const int, int&rang;&rang;, std::pair&lang;const int, int&rang;, int, __rw::__select1st&lang;std::pair&lang;const int, int&rang;, int&rang;&rang;*, __rw::__rw_rb_tree_node&lang;std::allocator&lang;std::pair&lang;const int, int&rang;&rang;, std::pair&lang;const int, int&rang;, int, __rw::__select1st&lang;std::pair&lang;const int, int&rang;, int&rang;&rang;*, const std::pair&lang;const int, int&rang;&)
<LI><a href="#[340]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rb_tree&lang;int, std::pair&lang;const int, int&rang;, __rw::__select1st&lang;std::pair&lang;const int, int&rang;, int&rang;, std::less&lang;int&rang;, std::allocator&lang;std::pair&lang;const int, int&rang;&rang;&rang;::insert(const std::pair&lang;const int, int&rang;&)
<LI><a href="#[13c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rb_tree&lang;int, std::pair&lang;const int, int&rang;, __rw::__select1st&lang;std::pair&lang;const int, int&rang;, int&rang;, std::less&lang;int&rang;, std::allocator&lang;std::pair&lang;const int, int&rang;&rang;&rang;::begin()
<LI><a href="#[13f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rb_tree&lang;int, std::pair&lang;const int, int&rang;, __rw::__select1st&lang;std::pair&lang;const int, int&rang;, int&rang;, std::less&lang;int&rang;, std::allocator&lang;std::pair&lang;const int, int&rang;&rang;&rang;::end()
</UL>

<P><STRONG><a name="[32f]"></a>__rw::__rb_tree&lang;int, std::pair&lang;const int, int&rang;, __rw::__select1st&lang;std::pair&lang;const int, int&rang;, int&rang;, std::less&lang;int&rang;, std::allocator&lang;std::pair&lang;const int, int&rang;&rang;&rang;::_C_erase_leaf(__rw::__rw_rb_tree_node&lang;std::allocator&lang;std::pair&lang;const int, int&rang;&rang;, std::pair&lang;const int, int&rang;, int, __rw::__select1st&lang;std::pair&lang;const int, int&rang;, int&rang;&rang;*)</STRONG> (Thumb, 124 bytes, Stack size 16 bytes, main.o(t._ZN4__rw9__rb_treeIiSt4pairIKiiENS_11__select1stIS3_iEESt4lessIiESaIS3_EE13_C_erase_leafEPNS_17__rw_rb_tree_nodeIS8_S3_iS5_EE))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = __rw::__rb_tree&lang;int, std::pair&lang;const int, int&rang;, __rw::__select1st&lang;std::pair&lang;const int, int&rang;, int&rang;, std::less&lang;int&rang;, std::allocator&lang;std::pair&lang;const int, int&rang;&rang;&rang;::_C_erase_leaf(__rw::__rw_rb_tree_node&lang;std::allocator&lang;std::pair&lang;const int, int&rang;&rang;, std::pair&lang;const int, int&rang;, int, __rw::__select1st&lang;std::pair&lang;const int, int&rang;, int&rang;&rang;*) &rArr; __rw::__rb_tree&lang;int, std::pair&lang;const int, int&rang;, __rw::__select1st&lang;std::pair&lang;const int, int&rang;, int&rang;, std::less&lang;int&rang;, std::allocator&lang;std::pair&lang;const int, int&rang;&rang;&rang;::_C_root() const
</UL>
<BR>[Calls]<UL><LI><a href="#[332]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rb_tree&lang;int, std::pair&lang;const int, int&rang;, __rw::__select1st&lang;std::pair&lang;const int, int&rang;, int&rang;, std::less&lang;int&rang;, std::allocator&lang;std::pair&lang;const int, int&rang;&rang;&rang;::_C_root() const
<LI><a href="#[330]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rb_tree&lang;int, std::pair&lang;const int, int&rang;, __rw::__select1st&lang;std::pair&lang;const int, int&rang;, int&rang;, std::less&lang;int&rang;, std::allocator&lang;std::pair&lang;const int, int&rang;&rang;&rang;::_C_rightmost() const
<LI><a href="#[331]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rb_tree&lang;int, std::pair&lang;const int, int&rang;, __rw::__select1st&lang;std::pair&lang;const int, int&rang;, int&rang;, std::less&lang;int&rang;, std::allocator&lang;std::pair&lang;const int, int&rang;&rang;&rang;::_C_leftmost() const
<LI><a href="#[324]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rw_rb_tree_node&lang;std::allocator&lang;std::pair&lang;const int, int&rang;&rang;, std::pair&lang;const int, int&rang;, int, __rw::__select1st&lang;std::pair&lang;const int, int&rang;, int&rang;&rang;::_C_parent()
<LI><a href="#[325]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rw_rb_tree_node&lang;std::allocator&lang;std::pair&lang;const int, int&rang;&rang;, std::pair&lang;const int, int&rang;, int, __rw::__select1st&lang;std::pair&lang;const int, int&rang;, int&rang;&rang;::_C_right()
<LI><a href="#[326]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rw_rb_tree_node&lang;std::allocator&lang;std::pair&lang;const int, int&rang;&rang;, std::pair&lang;const int, int&rang;, int, __rw::__select1st&lang;std::pair&lang;const int, int&rang;, int&rang;&rang;::_C_left()
</UL>
<BR>[Called By]<UL><LI><a href="#[33b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rb_tree&lang;int, std::pair&lang;const int, int&rang;, __rw::__select1st&lang;std::pair&lang;const int, int&rang;, int&rang;, std::less&lang;int&rang;, std::allocator&lang;std::pair&lang;const int, int&rang;&rang;&rang;::erase(__rw::__rw_tree_iter&lang;std::pair&lang;const int, int&rang;, int, std::pair&lang;const int, int&rang;*, std::pair&lang;const int, int&rang;&, __rw::__rw_rb_tree_node&lang;std::allocator&lang;std::pair&lang;const int, int&rang;&rang;, std::pair&lang;const int, int&rang;, int, __rw::__select1st&lang;std::pair&lang;const int, int&rang;, int&rang;&rang;&rang;)
</UL>

<P><STRONG><a name="[333]"></a>__rw::__rb_tree&lang;int, std::pair&lang;const int, int&rang;, __rw::__select1st&lang;std::pair&lang;const int, int&rang;, int&rang;, std::less&lang;int&rang;, std::allocator&lang;std::pair&lang;const int, int&rang;&rang;&rang;::__rotate_left(__rw::__rw_rb_tree_node&lang;std::allocator&lang;std::pair&lang;const int, int&rang;&rang;, std::pair&lang;const int, int&rang;, int, __rw::__select1st&lang;std::pair&lang;const int, int&rang;, int&rang;&rang;*)</STRONG> (Thumb, 170 bytes, Stack size 24 bytes, main.o(t._ZN4__rw9__rb_treeIiSt4pairIKiiENS_11__select1stIS3_iEESt4lessIiESaIS3_EE13__rotate_leftEPNS_17__rw_rb_tree_nodeIS8_S3_iS5_EE))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = __rw::__rb_tree&lang;int, std::pair&lang;const int, int&rang;, __rw::__select1st&lang;std::pair&lang;const int, int&rang;, int&rang;, std::less&lang;int&rang;, std::allocator&lang;std::pair&lang;const int, int&rang;&rang;&rang;::__rotate_left(__rw::__rw_rb_tree_node&lang;std::allocator&lang;std::pair&lang;const int, int&rang;&rang;, std::pair&lang;const int, int&rang;, int, __rw::__select1st&lang;std::pair&lang;const int, int&rang;, int&rang;&rang;*) &rArr; __rw::__rb_tree&lang;int, std::pair&lang;const int, int&rang;, __rw::__select1st&lang;std::pair&lang;const int, int&rang;, int&rang;, std::less&lang;int&rang;, std::allocator&lang;std::pair&lang;const int, int&rang;&rang;&rang;::_C_root() const
</UL>
<BR>[Calls]<UL><LI><a href="#[332]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rb_tree&lang;int, std::pair&lang;const int, int&rang;, __rw::__select1st&lang;std::pair&lang;const int, int&rang;, int&rang;, std::less&lang;int&rang;, std::allocator&lang;std::pair&lang;const int, int&rang;&rang;&rang;::_C_root() const
<LI><a href="#[324]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rw_rb_tree_node&lang;std::allocator&lang;std::pair&lang;const int, int&rang;&rang;, std::pair&lang;const int, int&rang;, int, __rw::__select1st&lang;std::pair&lang;const int, int&rang;, int&rang;&rang;::_C_parent()
<LI><a href="#[325]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rw_rb_tree_node&lang;std::allocator&lang;std::pair&lang;const int, int&rang;&rang;, std::pair&lang;const int, int&rang;, int, __rw::__select1st&lang;std::pair&lang;const int, int&rang;, int&rang;&rang;::_C_right()
<LI><a href="#[326]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rw_rb_tree_node&lang;std::allocator&lang;std::pair&lang;const int, int&rang;&rang;, std::pair&lang;const int, int&rang;, int, __rw::__select1st&lang;std::pair&lang;const int, int&rang;, int&rang;&rang;::_C_left()
</UL>
<BR>[Called By]<UL><LI><a href="#[343]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rb_tree&lang;int, std::pair&lang;const int, int&rang;, __rw::__select1st&lang;std::pair&lang;const int, int&rang;, int&rang;, std::less&lang;int&rang;, std::allocator&lang;std::pair&lang;const int, int&rang;&rang;&rang;::_C_insert(__rw::__rw_rb_tree_node&lang;std::allocator&lang;std::pair&lang;const int, int&rang;&rang;, std::pair&lang;const int, int&rang;, int, __rw::__select1st&lang;std::pair&lang;const int, int&rang;, int&rang;&rang;*, __rw::__rw_rb_tree_node&lang;std::allocator&lang;std::pair&lang;const int, int&rang;&rang;, std::pair&lang;const int, int&rang;, int, __rw::__select1st&lang;std::pair&lang;const int, int&rang;, int&rang;&rang;*, const std::pair&lang;const int, int&rang;&)
<LI><a href="#[33b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rb_tree&lang;int, std::pair&lang;const int, int&rang;, __rw::__select1st&lang;std::pair&lang;const int, int&rang;, int&rang;, std::less&lang;int&rang;, std::allocator&lang;std::pair&lang;const int, int&rang;&rang;&rang;::erase(__rw::__rw_tree_iter&lang;std::pair&lang;const int, int&rang;, int, std::pair&lang;const int, int&rang;*, std::pair&lang;const int, int&rang;&, __rw::__rw_rb_tree_node&lang;std::allocator&lang;std::pair&lang;const int, int&rang;&rang;, std::pair&lang;const int, int&rang;, int, __rw::__select1st&lang;std::pair&lang;const int, int&rang;, int&rang;&rang;&rang;)
</UL>

<P><STRONG><a name="[334]"></a>__rw::__rb_tree&lang;int, std::pair&lang;const int, int&rang;, __rw::__select1st&lang;std::pair&lang;const int, int&rang;, int&rang;, std::less&lang;int&rang;, std::allocator&lang;std::pair&lang;const int, int&rang;&rang;&rang;::__rotate_right(__rw::__rw_rb_tree_node&lang;std::allocator&lang;std::pair&lang;const int, int&rang;&rang;, std::pair&lang;const int, int&rang;, int, __rw::__select1st&lang;std::pair&lang;const int, int&rang;, int&rang;&rang;*)</STRONG> (Thumb, 170 bytes, Stack size 24 bytes, main.o(t._ZN4__rw9__rb_treeIiSt4pairIKiiENS_11__select1stIS3_iEESt4lessIiESaIS3_EE14__rotate_rightEPNS_17__rw_rb_tree_nodeIS8_S3_iS5_EE))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = __rw::__rb_tree&lang;int, std::pair&lang;const int, int&rang;, __rw::__select1st&lang;std::pair&lang;const int, int&rang;, int&rang;, std::less&lang;int&rang;, std::allocator&lang;std::pair&lang;const int, int&rang;&rang;&rang;::__rotate_right(__rw::__rw_rb_tree_node&lang;std::allocator&lang;std::pair&lang;const int, int&rang;&rang;, std::pair&lang;const int, int&rang;, int, __rw::__select1st&lang;std::pair&lang;const int, int&rang;, int&rang;&rang;*) &rArr; __rw::__rb_tree&lang;int, std::pair&lang;const int, int&rang;, __rw::__select1st&lang;std::pair&lang;const int, int&rang;, int&rang;, std::less&lang;int&rang;, std::allocator&lang;std::pair&lang;const int, int&rang;&rang;&rang;::_C_root() const
</UL>
<BR>[Calls]<UL><LI><a href="#[332]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rb_tree&lang;int, std::pair&lang;const int, int&rang;, __rw::__select1st&lang;std::pair&lang;const int, int&rang;, int&rang;, std::less&lang;int&rang;, std::allocator&lang;std::pair&lang;const int, int&rang;&rang;&rang;::_C_root() const
<LI><a href="#[324]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rw_rb_tree_node&lang;std::allocator&lang;std::pair&lang;const int, int&rang;&rang;, std::pair&lang;const int, int&rang;, int, __rw::__select1st&lang;std::pair&lang;const int, int&rang;, int&rang;&rang;::_C_parent()
<LI><a href="#[325]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rw_rb_tree_node&lang;std::allocator&lang;std::pair&lang;const int, int&rang;&rang;, std::pair&lang;const int, int&rang;, int, __rw::__select1st&lang;std::pair&lang;const int, int&rang;, int&rang;&rang;::_C_right()
<LI><a href="#[326]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rw_rb_tree_node&lang;std::allocator&lang;std::pair&lang;const int, int&rang;&rang;, std::pair&lang;const int, int&rang;, int, __rw::__select1st&lang;std::pair&lang;const int, int&rang;, int&rang;&rang;::_C_left()
</UL>
<BR>[Called By]<UL><LI><a href="#[343]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rb_tree&lang;int, std::pair&lang;const int, int&rang;, __rw::__select1st&lang;std::pair&lang;const int, int&rang;, int&rang;, std::less&lang;int&rang;, std::allocator&lang;std::pair&lang;const int, int&rang;&rang;&rang;::_C_insert(__rw::__rw_rb_tree_node&lang;std::allocator&lang;std::pair&lang;const int, int&rang;&rang;, std::pair&lang;const int, int&rang;, int, __rw::__select1st&lang;std::pair&lang;const int, int&rang;, int&rang;&rang;*, __rw::__rw_rb_tree_node&lang;std::allocator&lang;std::pair&lang;const int, int&rang;&rang;, std::pair&lang;const int, int&rang;, int, __rw::__select1st&lang;std::pair&lang;const int, int&rang;, int&rang;&rang;*, const std::pair&lang;const int, int&rang;&)
<LI><a href="#[33b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rb_tree&lang;int, std::pair&lang;const int, int&rang;, __rw::__select1st&lang;std::pair&lang;const int, int&rang;, int&rang;, std::less&lang;int&rang;, std::allocator&lang;std::pair&lang;const int, int&rang;&rang;&rang;::erase(__rw::__rw_tree_iter&lang;std::pair&lang;const int, int&rang;, int, std::pair&lang;const int, int&rang;*, std::pair&lang;const int, int&rang;&, __rw::__rw_rb_tree_node&lang;std::allocator&lang;std::pair&lang;const int, int&rang;&rang;, std::pair&lang;const int, int&rang;, int, __rw::__select1st&lang;std::pair&lang;const int, int&rang;, int&rang;&rang;&rang;)
</UL>

<P><STRONG><a name="[32d]"></a>__rw::__rb_tree&lang;int, std::pair&lang;const int, int&rang;, __rw::__select1st&lang;std::pair&lang;const int, int&rang;, int&rang;, std::less&lang;int&rang;, std::allocator&lang;std::pair&lang;const int, int&rang;&rang;&rang;::_C_add_new_buffer()</STRONG> (Thumb, 150 bytes, Stack size 40 bytes, main.o(t._ZN4__rw9__rb_treeIiSt4pairIKiiENS_11__select1stIS3_iEESt4lessIiESaIS3_EE17_C_add_new_bufferEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 488 + Unknown Stack Size
<LI>Call Chain = __rw::__rb_tree&lang;int, std::pair&lang;const int, int&rang;, __rw::__select1st&lang;std::pair&lang;const int, int&rang;, int&rang;, std::less&lang;int&rang;, std::allocator&lang;std::pair&lang;const int, int&rang;&rang;&rang;::_C_add_new_buffer() &rArr; __cxa_rethrow &rArr; _Unwind_RaiseException &rArr; __ARM_Unwind_RaiseException &rArr; malloc &rArr; _malloc_internal &rArr; __Heap_Full &rArr; __Heap_ProvideMemory &rArr; _free_internal &rArr; _mutex_release
</UL>
<BR>[Calls]<UL><LI><a href="#[28e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rw_allocate(unsigned, int)
<LI><a href="#[336]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::allocator&lang;__rw::__rb_tree&lang;int, std::pair&lang;const int, int&rang;, __rw::__select1st&lang;std::pair&lang;const int, int&rang;, int&rang;, std::less&lang;int&rang;, std::allocator&lang;std::pair&lang;const int, int&rang;&rang;&rang;::_C_rb_tree_node_buffer&rang;::allocator&lang;std::pair&lang;const int, int&rang;&rang;(const std::allocator&lang;T1&rang;&)
<LI><a href="#[338]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::allocator&lang;__rw::__rb_tree&lang;int, std::pair&lang;const int, int&rang;, __rw::__select1st&lang;std::pair&lang;const int, int&rang;, int&rang;, std::less&lang;int&rang;, std::allocator&lang;std::pair&lang;const int, int&rang;&rang;&rang;::_C_rb_tree_node_buffer&rang;::deallocate(__rw::__rb_tree&lang;int, std::pair&lang;const int, int&rang;, __rw::__select1st&lang;std::pair&lang;const int, int&rang;, int&rang;, std::less&lang;int&rang;, std::allocator&lang;std::pair&lang;const int, int&rang;&rang;&rang;::_C_rb_tree_node_buffer*, unsigned)
<LI><a href="#[337]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::allocator&lang;__rw::__rw_rb_tree_node&lang;std::allocator&lang;std::pair&lang;const int, int&rang;&rang;, std::pair&lang;const int, int&rang;, int, __rw::__select1st&lang;std::pair&lang;const int, int&rang;, int&rang;&rang;&rang;::allocator&lang;std::pair&lang;const int, int&rang;&rang;(const std::allocator&lang;T1&rang;&)
<LI><a href="#[335]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rw_new_capacity&lang;__rw::__rb_tree&lang;int, std::pair&lang;const int, int&rang;, __rw::__select1st&lang;std::pair&lang;const int, int&rang;, int&rang;, std::less&lang;int&rang;, std::allocator&lang;std::pair&lang;const int, int&rang;&rang;&rang;&rang;(unsigned, const T1*)
<LI><a href="#[1e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxa_rethrow
<LI><a href="#[145]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxa_begin_catch
</UL>
<BR>[Called By]<UL><LI><a href="#[32c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rb_tree&lang;int, std::pair&lang;const int, int&rang;, __rw::__select1st&lang;std::pair&lang;const int, int&rang;, int&rang;, std::less&lang;int&rang;, std::allocator&lang;std::pair&lang;const int, int&rang;&rang;&rang;::_C_get_link()
</UL>

<P><STRONG><a name="[339]"></a>__rw::__rb_tree&lang;int, std::pair&lang;const int, int&rang;, __rw::__select1st&lang;std::pair&lang;const int, int&rang;, int&rang;, std::less&lang;int&rang;, std::allocator&lang;std::pair&lang;const int, int&rang;&rang;&rang;::_C_deallocate_buffers()</STRONG> (Thumb, 72 bytes, Stack size 32 bytes, main.o(t._ZN4__rw9__rb_treeIiSt4pairIKiiENS_11__select1stIS3_iEESt4lessIiESaIS3_EE21_C_deallocate_buffersEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = __rw::__rb_tree&lang;int, std::pair&lang;const int, int&rang;, __rw::__select1st&lang;std::pair&lang;const int, int&rang;, int&rang;, std::less&lang;int&rang;, std::allocator&lang;std::pair&lang;const int, int&rang;&rang;&rang;::_C_deallocate_buffers() &rArr; std::allocator&lang;__rw::__rb_tree&lang;int, std::pair&lang;const int, int&rang;, __rw::__select1st&lang;std::pair&lang;const int, int&rang;, int&rang;, std::less&lang;int&rang;, std::allocator&lang;std::pair&lang;const int, int&rang;&rang;&rang;::_C_rb_tree_node_buffer&rang;::deallocate(__rw::__rb_tree&lang;int, std::pair&lang;const int, int&rang;, __rw::__select1st&lang;std::pair&lang;const int, int&rang;, int&rang;, std::less&lang;int&rang;, std::allocator&lang;std::pair&lang;const int, int&rang;&rang;&rang;::_C_rb_tree_node_buffer*, unsigned) &rArr; __rw::__rw_deallocate(void*, unsigned, int) &rArr; operator delete (void*) &rArr; free &rArr; _free_internal &rArr; _mutex_release
</UL>
<BR>[Calls]<UL><LI><a href="#[297]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rw_deallocate(void*, unsigned, int)
<LI><a href="#[336]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::allocator&lang;__rw::__rb_tree&lang;int, std::pair&lang;const int, int&rang;, __rw::__select1st&lang;std::pair&lang;const int, int&rang;, int&rang;, std::less&lang;int&rang;, std::allocator&lang;std::pair&lang;const int, int&rang;&rang;&rang;::_C_rb_tree_node_buffer&rang;::allocator&lang;std::pair&lang;const int, int&rang;&rang;(const std::allocator&lang;T1&rang;&)
<LI><a href="#[338]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::allocator&lang;__rw::__rb_tree&lang;int, std::pair&lang;const int, int&rang;, __rw::__select1st&lang;std::pair&lang;const int, int&rang;, int&rang;, std::less&lang;int&rang;, std::allocator&lang;std::pair&lang;const int, int&rang;&rang;&rang;::_C_rb_tree_node_buffer&rang;::deallocate(__rw::__rb_tree&lang;int, std::pair&lang;const int, int&rang;, __rw::__select1st&lang;std::pair&lang;const int, int&rang;, int&rang;, std::less&lang;int&rang;, std::allocator&lang;std::pair&lang;const int, int&rang;&rang;&rang;::_C_rb_tree_node_buffer*, unsigned)
<LI><a href="#[337]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::allocator&lang;__rw::__rw_rb_tree_node&lang;std::allocator&lang;std::pair&lang;const int, int&rang;&rang;, std::pair&lang;const int, int&rang;, int, __rw::__select1st&lang;std::pair&lang;const int, int&rang;, int&rang;&rang;&rang;::allocator&lang;std::pair&lang;const int, int&rang;&rang;(const std::allocator&lang;T1&rang;&)
</UL>
<BR>[Called By]<UL><LI><a href="#[2ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rb_tree&lang;int, std::pair&lang;const int, int&rang;, __rw::__select1st&lang;std::pair&lang;const int, int&rang;, int&rang;, std::less&lang;int&rang;, std::allocator&lang;std::pair&lang;const int, int&rang;&rang;&rang;::~__rb_tree()
</UL>

<P><STRONG><a name="[13f]"></a>__rw::__rb_tree&lang;int, std::pair&lang;const int, int&rang;, __rw::__select1st&lang;std::pair&lang;const int, int&rang;, int&rang;, std::less&lang;int&rang;, std::allocator&lang;std::pair&lang;const int, int&rang;&rang;&rang;::end()</STRONG> (Thumb, 18 bytes, Stack size 16 bytes, main.o(t._ZN4__rw9__rb_treeIiSt4pairIKiiENS_11__select1stIS3_iEESt4lessIiESaIS3_EE3endEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = __rw::__rb_tree&lang;int, std::pair&lang;const int, int&rang;, __rw::__select1st&lang;std::pair&lang;const int, int&rang;, int&rang;, std::less&lang;int&rang;, std::allocator&lang;std::pair&lang;const int, int&rang;&rang;&rang;::end()
</UL>
<BR>[Calls]<UL><LI><a href="#[33a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rb_tree&lang;int, std::pair&lang;const int, int&rang;, __rw::__select1st&lang;std::pair&lang;const int, int&rang;, int&rang;, std::less&lang;int&rang;, std::allocator&lang;std::pair&lang;const int, int&rang;&rang;&rang;::_C_make_iter(__rw::__rw_rb_tree_node&lang;std::allocator&lang;std::pair&lang;const int, int&rang;&rang;, std::pair&lang;const int, int&rang;, int, __rw::__select1st&lang;std::pair&lang;const int, int&rang;, int&rang;&rang;*)
</UL>
<BR>[Called By]<UL><LI><a href="#[2ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rb_tree&lang;int, std::pair&lang;const int, int&rang;, __rw::__select1st&lang;std::pair&lang;const int, int&rang;, int&rang;, std::less&lang;int&rang;, std::allocator&lang;std::pair&lang;const int, int&rang;&rang;&rang;::~__rb_tree()
<LI><a href="#[33e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rb_tree&lang;int, std::pair&lang;const int, int&rang;, __rw::__select1st&lang;std::pair&lang;const int, int&rang;, int&rang;, std::less&lang;int&rang;, std::allocator&lang;std::pair&lang;const int, int&rang;&rang;&rang;::erase(__rw::__rw_tree_iter&lang;std::pair&lang;const int, int&rang;, int, std::pair&lang;const int, int&rang;*, std::pair&lang;const int, int&rang;&, __rw::__rw_rb_tree_node&lang;std::allocator&lang;std::pair&lang;const int, int&rang;&rang;, std::pair&lang;const int, int&rang;, int, __rw::__select1st&lang;std::pair&lang;const int, int&rang;, int&rang;&rang;&rang;, __rw::__rw_tree_iter&lang;std::pair&lang;const int, int&rang;, int, std::pair&lang;const int, int&rang;*, std::pair&lang;const int, int&rang;&, __rw::__rw_rb_tree_node&lang;std::allocator&lang;std::pair&lang;const int, int&rang;&rang;, std::pair&lang;const int, int&rang;, int, __rw::__select1st&lang;std::pair&lang;const int, int&rang;, int&rang;&rang;&rang;)
<LI><a href="#[33b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rb_tree&lang;int, std::pair&lang;const int, int&rang;, __rw::__select1st&lang;std::pair&lang;const int, int&rang;, int&rang;, std::less&lang;int&rang;, std::allocator&lang;std::pair&lang;const int, int&rang;&rang;&rang;::erase(__rw::__rw_tree_iter&lang;std::pair&lang;const int, int&rang;, int, std::pair&lang;const int, int&rang;*, std::pair&lang;const int, int&rang;&, __rw::__rw_rb_tree_node&lang;std::allocator&lang;std::pair&lang;const int, int&rang;&rang;, std::pair&lang;const int, int&rang;, int, __rw::__select1st&lang;std::pair&lang;const int, int&rang;, int&rang;&rang;&rang;)
<LI><a href="#[135]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;stl_test()
</UL>

<P><STRONG><a name="[13c]"></a>__rw::__rb_tree&lang;int, std::pair&lang;const int, int&rang;, __rw::__select1st&lang;std::pair&lang;const int, int&rang;, int&rang;, std::less&lang;int&rang;, std::allocator&lang;std::pair&lang;const int, int&rang;&rang;&rang;::begin()</STRONG> (Thumb, 26 bytes, Stack size 16 bytes, main.o(t._ZN4__rw9__rb_treeIiSt4pairIKiiENS_11__select1stIS3_iEESt4lessIiESaIS3_EE5beginEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = __rw::__rb_tree&lang;int, std::pair&lang;const int, int&rang;, __rw::__select1st&lang;std::pair&lang;const int, int&rang;, int&rang;, std::less&lang;int&rang;, std::allocator&lang;std::pair&lang;const int, int&rang;&rang;&rang;::begin() &rArr; __rw::__rb_tree&lang;int, std::pair&lang;const int, int&rang;, __rw::__select1st&lang;std::pair&lang;const int, int&rang;, int&rang;, std::less&lang;int&rang;, std::allocator&lang;std::pair&lang;const int, int&rang;&rang;&rang;::_C_leftmost() const
</UL>
<BR>[Calls]<UL><LI><a href="#[331]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rb_tree&lang;int, std::pair&lang;const int, int&rang;, __rw::__select1st&lang;std::pair&lang;const int, int&rang;, int&rang;, std::less&lang;int&rang;, std::allocator&lang;std::pair&lang;const int, int&rang;&rang;&rang;::_C_leftmost() const
<LI><a href="#[33a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rb_tree&lang;int, std::pair&lang;const int, int&rang;, __rw::__select1st&lang;std::pair&lang;const int, int&rang;, int&rang;, std::less&lang;int&rang;, std::allocator&lang;std::pair&lang;const int, int&rang;&rang;&rang;::_C_make_iter(__rw::__rw_rb_tree_node&lang;std::allocator&lang;std::pair&lang;const int, int&rang;&rang;, std::pair&lang;const int, int&rang;, int, __rw::__select1st&lang;std::pair&lang;const int, int&rang;, int&rang;&rang;*)
</UL>
<BR>[Called By]<UL><LI><a href="#[2ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rb_tree&lang;int, std::pair&lang;const int, int&rang;, __rw::__select1st&lang;std::pair&lang;const int, int&rang;, int&rang;, std::less&lang;int&rang;, std::allocator&lang;std::pair&lang;const int, int&rang;&rang;&rang;::~__rb_tree()
<LI><a href="#[340]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rb_tree&lang;int, std::pair&lang;const int, int&rang;, __rw::__select1st&lang;std::pair&lang;const int, int&rang;, int&rang;, std::less&lang;int&rang;, std::allocator&lang;std::pair&lang;const int, int&rang;&rang;&rang;::insert(const std::pair&lang;const int, int&rang;&)
<LI><a href="#[33e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rb_tree&lang;int, std::pair&lang;const int, int&rang;, __rw::__select1st&lang;std::pair&lang;const int, int&rang;, int&rang;, std::less&lang;int&rang;, std::allocator&lang;std::pair&lang;const int, int&rang;&rang;&rang;::erase(__rw::__rw_tree_iter&lang;std::pair&lang;const int, int&rang;, int, std::pair&lang;const int, int&rang;*, std::pair&lang;const int, int&rang;&, __rw::__rw_rb_tree_node&lang;std::allocator&lang;std::pair&lang;const int, int&rang;&rang;, std::pair&lang;const int, int&rang;, int, __rw::__select1st&lang;std::pair&lang;const int, int&rang;, int&rang;&rang;&rang;, __rw::__rw_tree_iter&lang;std::pair&lang;const int, int&rang;, int, std::pair&lang;const int, int&rang;*, std::pair&lang;const int, int&rang;&, __rw::__rw_rb_tree_node&lang;std::allocator&lang;std::pair&lang;const int, int&rang;&rang;, std::pair&lang;const int, int&rang;, int, __rw::__select1st&lang;std::pair&lang;const int, int&rang;, int&rang;&rang;&rang;)
<LI><a href="#[135]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;stl_test()
</UL>

<P><STRONG><a name="[33b]"></a>__rw::__rb_tree&lang;int, std::pair&lang;const int, int&rang;, __rw::__select1st&lang;std::pair&lang;const int, int&rang;, int&rang;, std::less&lang;int&rang;, std::allocator&lang;std::pair&lang;const int, int&rang;&rang;&rang;::erase(__rw::__rw_tree_iter&lang;std::pair&lang;const int, int&rang;, int, std::pair&lang;const int, int&rang;*, std::pair&lang;const int, int&rang;&, __rw::__rw_rb_tree_node&lang;std::allocator&lang;std::pair&lang;const int, int&rang;&rang;, std::pair&lang;const int, int&rang;, int, __rw::__select1st&lang;std::pair&lang;const int, int&rang;, int&rang;&rang;&rang;)</STRONG> (Thumb, 1560 bytes, Stack size 56 bytes, main.o(t._ZN4__rw9__rb_treeIiSt4pairIKiiENS_11__select1stIS3_iEESt4lessIiESaIS3_EE5eraseENS_14__rw_tree_iterIS3_iPS3_RS3_NS_17__rw_rb_tree_nodeIS8_S3_iS5_EEEE))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = __rw::__rb_tree&lang;int, std::pair&lang;const int, int&rang;, __rw::__select1st&lang;std::pair&lang;const int, int&rang;, int&rang;, std::less&lang;int&rang;, std::allocator&lang;std::pair&lang;const int, int&rang;&rang;&rang;::erase(__rw::__rw_tree_iter&lang;std::pair&lang;const int, int&rang;, int, std::pair&lang;const int, int&rang;*, std::pair&lang;const int, int&rang;&, __rw::__rw_rb_tree_node&lang;std::allocator&lang;std::pair&lang;const int, int&rang;&rang;, std::pair&lang;const int, int&rang;, int, __rw::__select1st&lang;std::pair&lang;const int, int&rang;, int&rang;&rang;&rang;) &rArr; __rw::__rb_tree&lang;int, std::pair&lang;const int, int&rang;, __rw::__select1st&lang;std::pair&lang;const int, int&rang;, int&rang;, std::less&lang;int&rang;, std::allocator&lang;std::pair&lang;const int, int&rang;&rang;&rang;::__rotate_right(__rw::__rw_rb_tree_node&lang;std::allocator&lang;std::pair&lang;const int, int&rang;&rang;, std::pair&lang;const int, int&rang;, int, __rw::__select1st&lang;std::pair&lang;const int, int&rang;, int&rang;&rang;*) &rArr; __rw::__rb_tree&lang;int, std::pair&lang;const int, int&rang;, __rw::__select1st&lang;std::pair&lang;const int, int&rang;, int&rang;, std::less&lang;int&rang;, std::allocator&lang;std::pair&lang;const int, int&rang;&rang;&rang;::_C_root() const
</UL>
<BR>[Calls]<UL><LI><a href="#[332]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rb_tree&lang;int, std::pair&lang;const int, int&rang;, __rw::__select1st&lang;std::pair&lang;const int, int&rang;, int&rang;, std::less&lang;int&rang;, std::allocator&lang;std::pair&lang;const int, int&rang;&rang;&rang;::_C_root() const
<LI><a href="#[330]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rb_tree&lang;int, std::pair&lang;const int, int&rang;, __rw::__select1st&lang;std::pair&lang;const int, int&rang;, int&rang;, std::less&lang;int&rang;, std::allocator&lang;std::pair&lang;const int, int&rang;&rang;&rang;::_C_rightmost() const
<LI><a href="#[331]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rb_tree&lang;int, std::pair&lang;const int, int&rang;, __rw::__select1st&lang;std::pair&lang;const int, int&rang;, int&rang;, std::less&lang;int&rang;, std::allocator&lang;std::pair&lang;const int, int&rang;&rang;&rang;::_C_leftmost() const
<LI><a href="#[33c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::operator ==&lang;std::pair&lang;const int, int&rang;, int, std::pair&lang;const int, int&rang;*, std::pair&lang;const int, int&rang;&, std::pair&lang;const int, int&rang;*, std::pair&lang;const int, int&rang;&, __rw::__rw_rb_tree_node&lang;std::allocator&lang;std::pair&lang;const int, int&rang;&rang;, std::pair&lang;const int, int&rang;, int, __rw::__select1st&lang;std::pair&lang;const int, int&rang;, int&rang;&rang;&rang;(const __rw::__rw_tree_iter&lang;T1, T2, T3, T4, T7&rang;&, const __rw::__rw_tree_iter&lang;T1, T2, T5, T6, T7&rang;&)
<LI><a href="#[13f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rb_tree&lang;int, std::pair&lang;const int, int&rang;, __rw::__select1st&lang;std::pair&lang;const int, int&rang;, int&rang;, std::less&lang;int&rang;, std::allocator&lang;std::pair&lang;const int, int&rang;&rang;&rang;::end()
<LI><a href="#[334]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rb_tree&lang;int, std::pair&lang;const int, int&rang;, __rw::__select1st&lang;std::pair&lang;const int, int&rang;, int&rang;, std::less&lang;int&rang;, std::allocator&lang;std::pair&lang;const int, int&rang;&rang;&rang;::__rotate_right(__rw::__rw_rb_tree_node&lang;std::allocator&lang;std::pair&lang;const int, int&rang;&rang;, std::pair&lang;const int, int&rang;, int, __rw::__select1st&lang;std::pair&lang;const int, int&rang;, int&rang;&rang;*)
<LI><a href="#[333]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rb_tree&lang;int, std::pair&lang;const int, int&rang;, __rw::__select1st&lang;std::pair&lang;const int, int&rang;, int&rang;, std::less&lang;int&rang;, std::allocator&lang;std::pair&lang;const int, int&rang;&rang;&rang;::__rotate_left(__rw::__rw_rb_tree_node&lang;std::allocator&lang;std::pair&lang;const int, int&rang;&rang;, std::pair&lang;const int, int&rang;, int, __rw::__select1st&lang;std::pair&lang;const int, int&rang;, int&rang;&rang;*)
<LI><a href="#[32f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rb_tree&lang;int, std::pair&lang;const int, int&rang;, __rw::__select1st&lang;std::pair&lang;const int, int&rang;, int&rang;, std::less&lang;int&rang;, std::allocator&lang;std::pair&lang;const int, int&rang;&rang;&rang;::_C_erase_leaf(__rw::__rw_rb_tree_node&lang;std::allocator&lang;std::pair&lang;const int, int&rang;&rang;, std::pair&lang;const int, int&rang;, int, __rw::__select1st&lang;std::pair&lang;const int, int&rang;, int&rang;&rang;*)
<LI><a href="#[33d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rb_tree&lang;int, std::pair&lang;const int, int&rang;, __rw::__select1st&lang;std::pair&lang;const int, int&rang;, int&rang;, std::less&lang;int&rang;, std::allocator&lang;std::pair&lang;const int, int&rang;&rang;&rang;::_C_put_node(__rw::__rw_rb_tree_node&lang;std::allocator&lang;std::pair&lang;const int, int&rang;&rang;, std::pair&lang;const int, int&rang;, int, __rw::__select1st&lang;std::pair&lang;const int, int&rang;, int&rang;&rang;*, bool)
<LI><a href="#[324]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rw_rb_tree_node&lang;std::allocator&lang;std::pair&lang;const int, int&rang;&rang;, std::pair&lang;const int, int&rang;, int, __rw::__select1st&lang;std::pair&lang;const int, int&rang;, int&rang;&rang;::_C_parent()
<LI><a href="#[325]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rw_rb_tree_node&lang;std::allocator&lang;std::pair&lang;const int, int&rang;&rang;, std::pair&lang;const int, int&rang;, int, __rw::__select1st&lang;std::pair&lang;const int, int&rang;, int&rang;&rang;::_C_right()
<LI><a href="#[326]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rw_rb_tree_node&lang;std::allocator&lang;std::pair&lang;const int, int&rang;&rang;, std::pair&lang;const int, int&rang;, int, __rw::__select1st&lang;std::pair&lang;const int, int&rang;, int&rang;&rang;::_C_left()
<LI><a href="#[328]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rw_tree_iter&lang;std::pair&lang;const int, int&rang;, int, std::pair&lang;const int, int&rang;*, std::pair&lang;const int, int&rang;&, __rw::__rw_rb_tree_node&lang;std::allocator&lang;std::pair&lang;const int, int&rang;&rang;, std::pair&lang;const int, int&rang;, int, __rw::__select1st&lang;std::pair&lang;const int, int&rang;, int&rang;&rang;&rang;::operator ++()
<LI><a href="#[327]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rw_tree_iter&lang;std::pair&lang;const int, int&rang;, int, std::pair&lang;const int, int&rang;*, std::pair&lang;const int, int&rang;&, __rw::__rw_rb_tree_node&lang;std::allocator&lang;std::pair&lang;const int, int&rang;&rang;, std::pair&lang;const int, int&rang;, int, __rw::__select1st&lang;std::pair&lang;const int, int&rang;, int&rang;&rang;&rang;::__rw_tree_iter(const __rw::__rw_tree_iter&lang;std::pair&lang;const int, int&rang;, int, std::pair&lang;const int, int&rang;*, std::pair&lang;const int, int&rang;&, __rw::__rw_rb_tree_node&lang;std::allocator&lang;std::pair&lang;const int, int&rang;&rang;, std::pair&lang;const int, int&rang;, int, __rw::__select1st&lang;std::pair&lang;const int, int&rang;, int&rang;&rang;&rang;&)
</UL>
<BR>[Called By]<UL><LI><a href="#[33e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rb_tree&lang;int, std::pair&lang;const int, int&rang;, __rw::__select1st&lang;std::pair&lang;const int, int&rang;, int&rang;, std::less&lang;int&rang;, std::allocator&lang;std::pair&lang;const int, int&rang;&rang;&rang;::erase(__rw::__rw_tree_iter&lang;std::pair&lang;const int, int&rang;, int, std::pair&lang;const int, int&rang;*, std::pair&lang;const int, int&rang;&, __rw::__rw_rb_tree_node&lang;std::allocator&lang;std::pair&lang;const int, int&rang;&rang;, std::pair&lang;const int, int&rang;, int, __rw::__select1st&lang;std::pair&lang;const int, int&rang;, int&rang;&rang;&rang;, __rw::__rw_tree_iter&lang;std::pair&lang;const int, int&rang;, int, std::pair&lang;const int, int&rang;*, std::pair&lang;const int, int&rang;&, __rw::__rw_rb_tree_node&lang;std::allocator&lang;std::pair&lang;const int, int&rang;&rang;, std::pair&lang;const int, int&rang;, int, __rw::__select1st&lang;std::pair&lang;const int, int&rang;, int&rang;&rang;&rang;)
</UL>

<P><STRONG><a name="[33e]"></a>__rw::__rb_tree&lang;int, std::pair&lang;const int, int&rang;, __rw::__select1st&lang;std::pair&lang;const int, int&rang;, int&rang;, std::less&lang;int&rang;, std::allocator&lang;std::pair&lang;const int, int&rang;&rang;&rang;::erase(__rw::__rw_tree_iter&lang;std::pair&lang;const int, int&rang;, int, std::pair&lang;const int, int&rang;*, std::pair&lang;const int, int&rang;&, __rw::__rw_rb_tree_node&lang;std::allocator&lang;std::pair&lang;const int, int&rang;&rang;, std::pair&lang;const int, int&rang;, int, __rw::__select1st&lang;std::pair&lang;const int, int&rang;, int&rang;&rang;&rang;, __rw::__rw_tree_iter&lang;std::pair&lang;const int, int&rang;, int, std::pair&lang;const int, int&rang;*, std::pair&lang;const int, int&rang;&, __rw::__rw_rb_tree_node&lang;std::allocator&lang;std::pair&lang;const int, int&rang;&rang;, std::pair&lang;const int, int&rang;, int, __rw::__select1st&lang;std::pair&lang;const int, int&rang;, int&rang;&rang;&rang;)</STRONG> (Thumb, 170 bytes, Stack size 40 bytes, main.o(t._ZN4__rw9__rb_treeIiSt4pairIKiiENS_11__select1stIS3_iEESt4lessIiESaIS3_EE5eraseENS_14__rw_tree_iterIS3_iPS3_RS3_NS_17__rw_rb_tree_nodeIS8_S3_iS5_EEEESF_))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = __rw::__rb_tree&lang;int, std::pair&lang;const int, int&rang;, __rw::__select1st&lang;std::pair&lang;const int, int&rang;, int&rang;, std::less&lang;int&rang;, std::allocator&lang;std::pair&lang;const int, int&rang;&rang;&rang;::erase(__rw::__rw_tree_iter&lang;std::pair&lang;const int, int&rang;, int, std::pair&lang;const int, int&rang;*, std::pair&lang;const int, int&rang;&, __rw::__rw_rb_tree_node&lang;std::allocator&lang;std::pair&lang;const int, int&rang;&rang;, std::pair&lang;const int, int&rang;, int, __rw::__select1st&lang;std::pair&lang;const int, int&rang;, int&rang;&rang;&rang;, __rw::__rw_tree_iter&lang;std::pair&lang;const int, int&rang;, int, std::pair&lang;const int, int&rang;*, std::pair&lang;const int, int&rang;&, __rw::__rw_rb_tree_node&lang;std::allocator&lang;std::pair&lang;const int, int&rang;&rang;, std::pair&lang;const int, int&rang;, int, __rw::__select1st&lang;std::pair&lang;const int, int&rang;, int&rang;&rang;&rang;) &rArr; __rw::__rb_tree&lang;int, std::pair&lang;const int, int&rang;, __rw::__select1st&lang;std::pair&lang;const int, int&rang;, int&rang;, std::less&lang;int&rang;, std::allocator&lang;std::pair&lang;const int, int&rang;&rang;&rang;::erase(__rw::__rw_tree_iter&lang;std::pair&lang;const int, int&rang;, int, std::pair&lang;const int, int&rang;*, std::pair&lang;const int, int&rang;&, __rw::__rw_rb_tree_node&lang;std::allocator&lang;std::pair&lang;const int, int&rang;&rang;, std::pair&lang;const int, int&rang;, int, __rw::__select1st&lang;std::pair&lang;const int, int&rang;, int&rang;&rang;&rang;) &rArr; __rw::__rb_tree&lang;int, std::pair&lang;const int, int&rang;, __rw::__select1st&lang;std::pair&lang;const int, int&rang;, int&rang;, std::less&lang;int&rang;, std::allocator&lang;std::pair&lang;const int, int&rang;&rang;&rang;::__rotate_right(__rw::__rw_rb_tree_node&lang;std::allocator&lang;std::pair&lang;const int, int&rang;&rang;, std::pair&lang;const int, int&rang;, int, __rw::__select1st&lang;std::pair&lang;const int, int&rang;, int&rang;&rang;*) &rArr; __rw::__rb_tree&lang;int, std::pair&lang;const int, int&rang;, __rw::__select1st&lang;std::pair&lang;const int, int&rang;, int&rang;, std::less&lang;int&rang;, std::allocator&lang;std::pair&lang;const int, int&rang;&rang;&rang;::_C_root() const
</UL>
<BR>[Calls]<UL><LI><a href="#[332]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rb_tree&lang;int, std::pair&lang;const int, int&rang;, __rw::__select1st&lang;std::pair&lang;const int, int&rang;, int&rang;, std::less&lang;int&rang;, std::allocator&lang;std::pair&lang;const int, int&rang;&rang;&rang;::_C_root() const
<LI><a href="#[330]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rb_tree&lang;int, std::pair&lang;const int, int&rang;, __rw::__select1st&lang;std::pair&lang;const int, int&rang;, int&rang;, std::less&lang;int&rang;, std::allocator&lang;std::pair&lang;const int, int&rang;&rang;&rang;::_C_rightmost() const
<LI><a href="#[331]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rb_tree&lang;int, std::pair&lang;const int, int&rang;, __rw::__select1st&lang;std::pair&lang;const int, int&rang;, int&rang;, std::less&lang;int&rang;, std::allocator&lang;std::pair&lang;const int, int&rang;&rang;&rang;::_C_leftmost() const
<LI><a href="#[140]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::operator !=&lang;std::pair&lang;const int, int&rang;, int, std::pair&lang;const int, int&rang;*, std::pair&lang;const int, int&rang;&, std::pair&lang;const int, int&rang;*, std::pair&lang;const int, int&rang;&, __rw::__rw_rb_tree_node&lang;std::allocator&lang;std::pair&lang;const int, int&rang;&rang;, std::pair&lang;const int, int&rang;, int, __rw::__select1st&lang;std::pair&lang;const int, int&rang;, int&rang;&rang;&rang;(const __rw::__rw_tree_iter&lang;T1, T2, T3, T4, T7&rang;&, const __rw::__rw_tree_iter&lang;T1, T2, T5, T6, T7&rang;&)
<LI><a href="#[33c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::operator ==&lang;std::pair&lang;const int, int&rang;, int, std::pair&lang;const int, int&rang;*, std::pair&lang;const int, int&rang;&, std::pair&lang;const int, int&rang;*, std::pair&lang;const int, int&rang;&, __rw::__rw_rb_tree_node&lang;std::allocator&lang;std::pair&lang;const int, int&rang;&rang;, std::pair&lang;const int, int&rang;, int, __rw::__select1st&lang;std::pair&lang;const int, int&rang;, int&rang;&rang;&rang;(const __rw::__rw_tree_iter&lang;T1, T2, T3, T4, T7&rang;&, const __rw::__rw_tree_iter&lang;T1, T2, T5, T6, T7&rang;&)
<LI><a href="#[33f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rb_tree&lang;int, std::pair&lang;const int, int&rang;, __rw::__select1st&lang;std::pair&lang;const int, int&rang;, int&rang;, std::less&lang;int&rang;, std::allocator&lang;std::pair&lang;const int, int&rang;&rang;&rang;::_C_erase(__rw::__rw_rb_tree_node&lang;std::allocator&lang;std::pair&lang;const int, int&rang;&rang;, std::pair&lang;const int, int&rang;, int, __rw::__select1st&lang;std::pair&lang;const int, int&rang;, int&rang;&rang;*)
<LI><a href="#[33b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rb_tree&lang;int, std::pair&lang;const int, int&rang;, __rw::__select1st&lang;std::pair&lang;const int, int&rang;, int&rang;, std::less&lang;int&rang;, std::allocator&lang;std::pair&lang;const int, int&rang;&rang;&rang;::erase(__rw::__rw_tree_iter&lang;std::pair&lang;const int, int&rang;, int, std::pair&lang;const int, int&rang;*, std::pair&lang;const int, int&rang;&, __rw::__rw_rb_tree_node&lang;std::allocator&lang;std::pair&lang;const int, int&rang;&rang;, std::pair&lang;const int, int&rang;, int, __rw::__select1st&lang;std::pair&lang;const int, int&rang;, int&rang;&rang;&rang;)
<LI><a href="#[13c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rb_tree&lang;int, std::pair&lang;const int, int&rang;, __rw::__select1st&lang;std::pair&lang;const int, int&rang;, int&rang;, std::less&lang;int&rang;, std::allocator&lang;std::pair&lang;const int, int&rang;&rang;&rang;::begin()
<LI><a href="#[13f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rb_tree&lang;int, std::pair&lang;const int, int&rang;, __rw::__select1st&lang;std::pair&lang;const int, int&rang;, int&rang;, std::less&lang;int&rang;, std::allocator&lang;std::pair&lang;const int, int&rang;&rang;&rang;::end()
<LI><a href="#[13e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rw_tree_iter&lang;std::pair&lang;const int, int&rang;, int, std::pair&lang;const int, int&rang;*, std::pair&lang;const int, int&rang;&, __rw::__rw_rb_tree_node&lang;std::allocator&lang;std::pair&lang;const int, int&rang;&rang;, std::pair&lang;const int, int&rang;, int, __rw::__select1st&lang;std::pair&lang;const int, int&rang;, int&rang;&rang;&rang;::operator ++(int)
</UL>
<BR>[Called By]<UL><LI><a href="#[2ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rb_tree&lang;int, std::pair&lang;const int, int&rang;, __rw::__select1st&lang;std::pair&lang;const int, int&rang;, int&rang;, std::less&lang;int&rang;, std::allocator&lang;std::pair&lang;const int, int&rang;&rang;&rang;::~__rb_tree()
</UL>

<P><STRONG><a name="[340]"></a>__rw::__rb_tree&lang;int, std::pair&lang;const int, int&rang;, __rw::__select1st&lang;std::pair&lang;const int, int&rang;, int&rang;, std::less&lang;int&rang;, std::allocator&lang;std::pair&lang;const int, int&rang;&rang;&rang;::insert(const std::pair&lang;const int, int&rang;&)</STRONG> (Thumb, 284 bytes, Stack size 64 bytes, main.o(t._ZN4__rw9__rb_treeIiSt4pairIKiiENS_11__select1stIS3_iEESt4lessIiESaIS3_EE6insertERKS3_))
<BR><BR>[Stack]<UL><LI>Max Depth = 664 + Unknown Stack Size
<LI>Call Chain = __rw::__rb_tree&lang;int, std::pair&lang;const int, int&rang;, __rw::__select1st&lang;std::pair&lang;const int, int&rang;, int&rang;, std::less&lang;int&rang;, std::allocator&lang;std::pair&lang;const int, int&rang;&rang;&rang;::insert(const std::pair&lang;const int, int&rang;&) &rArr; __rw::__rb_tree&lang;int, std::pair&lang;const int, int&rang;, __rw::__select1st&lang;std::pair&lang;const int, int&rang;, int&rang;, std::less&lang;int&rang;, std::allocator&lang;std::pair&lang;const int, int&rang;&rang;&rang;::_C_insert(__rw::__rw_rb_tree_node&lang;std::allocator&lang;std::pair&lang;const int, int&rang;&rang;, std::pair&lang;const int, int&rang;, int, __rw::__select1st&lang;std::pair&lang;const int, int&rang;, int&rang;&rang;*, __rw::__rw_rb_tree_node&lang;std::allocator&lang;std::pair&lang;const int, int&rang;&rang;, std::pair&lang;const int, int&rang;, int, __rw::__select1st&lang;std::pair&lang;const int, int&rang;, int&rang;&rang;*, const std::pair&lang;const int, int&rang;&) &rArr; __rw::__rb_tree&lang;int, std::pair&lang;const int, int&rang;, __rw::__select1st&lang;std::pair&lang;const int, int&rang;, int&rang;, std::less&lang;int&rang;, std::allocator&lang;std::pair&lang;const int, int&rang;&rang;&rang;::_C_get_node(const std::pair&lang;const int, int&rang;&) &rArr; __rw::__rb_tree&lang;int, std::pair&lang;const int, int&rang;, __rw::__select1st&lang;std::pair&lang;const int, int&rang;, int&rang;, std::less&lang;int&rang;, std::allocator&lang;std::pair&lang;const int, int&rang;&rang;&rang;::_C_get_link() &rArr; __rw::__rb_tree&lang;int, std::pair&lang;const int, int&rang;, __rw::__select1st&lang;std::pair&lang;const int, int&rang;, int&rang;, std::less&lang;int&rang;, std::allocator&lang;std::pair&lang;const int, int&rang;&rang;&rang;::_C_add_new_buffer() &rArr; __cxa_rethrow &rArr; _Unwind_RaiseException &rArr; __ARM_Unwind_RaiseException &rArr; malloc &rArr; _malloc_internal &rArr; __Heap_Full &rArr; __Heap_ProvideMemory &rArr; _free_internal &rArr; _mutex_release
</UL>
<BR>[Calls]<UL><LI><a href="#[344]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::pair&lang;__rw::__rw_tree_iter&lang;std::pair&lang;const int, int&rang;, int, std::pair&lang;const int, int&rang;*, std::pair&lang;const int, int&rang;&, __rw::__rw_rb_tree_node&lang;std::allocator&lang;std::pair&lang;const int, int&rang;&rang;, std::pair&lang;const int, int&rang;, int, __rw::__select1st&lang;std::pair&lang;const int, int&rang;, int&rang;&rang;&rang;, bool&rang;::pair(const __rw::__rw_tree_iter&lang;std::pair&lang;const int, int&rang;, int, std::pair&lang;const int, int&rang;*, std::pair&lang;const int, int&rang;&, __rw::__rw_rb_tree_node&lang;std::allocator&lang;std::pair&lang;const int, int&rang;&rang;, std::pair&lang;const int, int&rang;, int, __rw::__select1st&lang;std::pair&lang;const int, int&rang;, int&rang;&rang;&rang;&, const bool&)
<LI><a href="#[342]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::less&lang;int&rang;::operator ()(const int&, const int&) const
<LI><a href="#[332]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rb_tree&lang;int, std::pair&lang;const int, int&rang;, __rw::__select1st&lang;std::pair&lang;const int, int&rang;, int&rang;, std::less&lang;int&rang;, std::allocator&lang;std::pair&lang;const int, int&rang;&rang;&rang;::_C_root() const
<LI><a href="#[33c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::operator ==&lang;std::pair&lang;const int, int&rang;, int, std::pair&lang;const int, int&rang;*, std::pair&lang;const int, int&rang;&, std::pair&lang;const int, int&rang;*, std::pair&lang;const int, int&rang;&, __rw::__rw_rb_tree_node&lang;std::allocator&lang;std::pair&lang;const int, int&rang;&rang;, std::pair&lang;const int, int&rang;, int, __rw::__select1st&lang;std::pair&lang;const int, int&rang;, int&rang;&rang;&rang;(const __rw::__rw_tree_iter&lang;T1, T2, T3, T4, T7&rang;&, const __rw::__rw_tree_iter&lang;T1, T2, T5, T6, T7&rang;&)
<LI><a href="#[343]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rb_tree&lang;int, std::pair&lang;const int, int&rang;, __rw::__select1st&lang;std::pair&lang;const int, int&rang;, int&rang;, std::less&lang;int&rang;, std::allocator&lang;std::pair&lang;const int, int&rang;&rang;&rang;::_C_insert(__rw::__rw_rb_tree_node&lang;std::allocator&lang;std::pair&lang;const int, int&rang;&rang;, std::pair&lang;const int, int&rang;, int, __rw::__select1st&lang;std::pair&lang;const int, int&rang;, int&rang;&rang;*, __rw::__rw_rb_tree_node&lang;std::allocator&lang;std::pair&lang;const int, int&rang;&rang;, std::pair&lang;const int, int&rang;, int, __rw::__select1st&lang;std::pair&lang;const int, int&rang;, int&rang;&rang;*, const std::pair&lang;const int, int&rang;&)
<LI><a href="#[13c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rb_tree&lang;int, std::pair&lang;const int, int&rang;, __rw::__select1st&lang;std::pair&lang;const int, int&rang;, int&rang;, std::less&lang;int&rang;, std::allocator&lang;std::pair&lang;const int, int&rang;&rang;&rang;::begin()
<LI><a href="#[33a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rb_tree&lang;int, std::pair&lang;const int, int&rang;, __rw::__select1st&lang;std::pair&lang;const int, int&rang;, int&rang;, std::less&lang;int&rang;, std::allocator&lang;std::pair&lang;const int, int&rang;&rang;&rang;::_C_make_iter(__rw::__rw_rb_tree_node&lang;std::allocator&lang;std::pair&lang;const int, int&rang;&rang;, std::pair&lang;const int, int&rang;, int, __rw::__select1st&lang;std::pair&lang;const int, int&rang;, int&rang;&rang;*)
<LI><a href="#[325]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rw_rb_tree_node&lang;std::allocator&lang;std::pair&lang;const int, int&rang;&rang;, std::pair&lang;const int, int&rang;, int, __rw::__select1st&lang;std::pair&lang;const int, int&rang;, int&rang;&rang;::_C_right()
<LI><a href="#[326]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rw_rb_tree_node&lang;std::allocator&lang;std::pair&lang;const int, int&rang;&rang;, std::pair&lang;const int, int&rang;, int, __rw::__select1st&lang;std::pair&lang;const int, int&rang;, int&rang;&rang;::_C_left()
<LI><a href="#[341]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rw_rb_tree_node&lang;std::allocator&lang;std::pair&lang;const int, int&rang;&rang;, std::pair&lang;const int, int&rang;, int, __rw::__select1st&lang;std::pair&lang;const int, int&rang;, int&rang;&rang;::_C_key()
<LI><a href="#[323]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rw_tree_iter&lang;std::pair&lang;const int, int&rang;, int, std::pair&lang;const int, int&rang;*, std::pair&lang;const int, int&rang;&, __rw::__rw_rb_tree_node&lang;std::allocator&lang;std::pair&lang;const int, int&rang;&rang;, std::pair&lang;const int, int&rang;, int, __rw::__select1st&lang;std::pair&lang;const int, int&rang;, int&rang;&rang;&rang;::operator --()
</UL>
<BR>[Called By]<UL><LI><a href="#[13b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::map&lang;int, int, std::less&lang;int&rang;, std::allocator&lang;std::pair&lang;const int, int&rang;&rang;&rang;::operator [](const int&)
</UL>

<P><STRONG><a name="[33f]"></a>__rw::__rb_tree&lang;int, std::pair&lang;const int, int&rang;, __rw::__select1st&lang;std::pair&lang;const int, int&rang;, int&rang;, std::less&lang;int&rang;, std::allocator&lang;std::pair&lang;const int, int&rang;&rang;&rang;::_C_erase(__rw::__rw_rb_tree_node&lang;std::allocator&lang;std::pair&lang;const int, int&rang;&rang;, std::pair&lang;const int, int&rang;, int, __rw::__select1st&lang;std::pair&lang;const int, int&rang;, int&rang;&rang;*)</STRONG> (Thumb, 56 bytes, Stack size 24 bytes, main.o(t._ZN4__rw9__rb_treeIiSt4pairIKiiENS_11__select1stIS3_iEESt4lessIiESaIS3_EE8_C_eraseEPNS_17__rw_rb_tree_nodeIS8_S3_iS5_EE))
<BR><BR>[Stack]<UL><LI>Max Depth = 24 + In Cycle
<LI>Call Chain = __rw::__rb_tree&lang;int, std::pair&lang;const int, int&rang;, __rw::__select1st&lang;std::pair&lang;const int, int&rang;, int&rang;, std::less&lang;int&rang;, std::allocator&lang;std::pair&lang;const int, int&rang;&rang;&rang;::_C_erase(__rw::__rw_rb_tree_node&lang;std::allocator&lang;std::pair&lang;const int, int&rang;&rang;, std::pair&lang;const int, int&rang;, int, __rw::__select1st&lang;std::pair&lang;const int, int&rang;, int&rang;&rang;*) &rArr;  __rw::__rb_tree&lang;int, std::pair&lang;const int, int&rang;, __rw::__select1st&lang;std::pair&lang;const int, int&rang;, int&rang;, std::less&lang;int&rang;, std::allocator&lang;std::pair&lang;const int, int&rang;&rang;&rang;::_C_erase(__rw::__rw_rb_tree_node&lang;std::allocator&lang;std::pair&lang;const int, int&rang;&rang;, std::pair&lang;const int, int&rang;, int, __rw::__select1st&lang;std::pair&lang;const int, int&rang;, int&rang;&rang;*) (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[33f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rb_tree&lang;int, std::pair&lang;const int, int&rang;, __rw::__select1st&lang;std::pair&lang;const int, int&rang;, int&rang;, std::less&lang;int&rang;, std::allocator&lang;std::pair&lang;const int, int&rang;&rang;&rang;::_C_erase(__rw::__rw_rb_tree_node&lang;std::allocator&lang;std::pair&lang;const int, int&rang;&rang;, std::pair&lang;const int, int&rang;, int, __rw::__select1st&lang;std::pair&lang;const int, int&rang;, int&rang;&rang;*)
<LI><a href="#[33d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rb_tree&lang;int, std::pair&lang;const int, int&rang;, __rw::__select1st&lang;std::pair&lang;const int, int&rang;, int&rang;, std::less&lang;int&rang;, std::allocator&lang;std::pair&lang;const int, int&rang;&rang;&rang;::_C_put_node(__rw::__rw_rb_tree_node&lang;std::allocator&lang;std::pair&lang;const int, int&rang;&rang;, std::pair&lang;const int, int&rang;, int, __rw::__select1st&lang;std::pair&lang;const int, int&rang;, int&rang;&rang;*, bool)
<LI><a href="#[325]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rw_rb_tree_node&lang;std::allocator&lang;std::pair&lang;const int, int&rang;&rang;, std::pair&lang;const int, int&rang;, int, __rw::__select1st&lang;std::pair&lang;const int, int&rang;, int&rang;&rang;::_C_right()
<LI><a href="#[326]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rw_rb_tree_node&lang;std::allocator&lang;std::pair&lang;const int, int&rang;&rang;, std::pair&lang;const int, int&rang;, int, __rw::__select1st&lang;std::pair&lang;const int, int&rang;, int&rang;&rang;::_C_left()
</UL>
<BR>[Called By]<UL><LI><a href="#[33f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rb_tree&lang;int, std::pair&lang;const int, int&rang;, __rw::__select1st&lang;std::pair&lang;const int, int&rang;, int&rang;, std::less&lang;int&rang;, std::allocator&lang;std::pair&lang;const int, int&rang;&rang;&rang;::_C_erase(__rw::__rw_rb_tree_node&lang;std::allocator&lang;std::pair&lang;const int, int&rang;&rang;, std::pair&lang;const int, int&rang;, int, __rw::__select1st&lang;std::pair&lang;const int, int&rang;, int&rang;&rang;*)
<LI><a href="#[33e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rb_tree&lang;int, std::pair&lang;const int, int&rang;, __rw::__select1st&lang;std::pair&lang;const int, int&rang;, int&rang;, std::less&lang;int&rang;, std::allocator&lang;std::pair&lang;const int, int&rang;&rang;&rang;::erase(__rw::__rw_tree_iter&lang;std::pair&lang;const int, int&rang;, int, std::pair&lang;const int, int&rang;*, std::pair&lang;const int, int&rang;&, __rw::__rw_rb_tree_node&lang;std::allocator&lang;std::pair&lang;const int, int&rang;&rang;, std::pair&lang;const int, int&rang;, int, __rw::__select1st&lang;std::pair&lang;const int, int&rang;, int&rang;&rang;&rang;, __rw::__rw_tree_iter&lang;std::pair&lang;const int, int&rang;, int, std::pair&lang;const int, int&rang;*, std::pair&lang;const int, int&rang;&, __rw::__rw_rb_tree_node&lang;std::allocator&lang;std::pair&lang;const int, int&rang;&rang;, std::pair&lang;const int, int&rang;, int, __rw::__select1st&lang;std::pair&lang;const int, int&rang;, int&rang;&rang;&rang;)
</UL>

<P><STRONG><a name="[343]"></a>__rw::__rb_tree&lang;int, std::pair&lang;const int, int&rang;, __rw::__select1st&lang;std::pair&lang;const int, int&rang;, int&rang;, std::less&lang;int&rang;, std::allocator&lang;std::pair&lang;const int, int&rang;&rang;&rang;::_C_insert(__rw::__rw_rb_tree_node&lang;std::allocator&lang;std::pair&lang;const int, int&rang;&rang;, std::pair&lang;const int, int&rang;, int, __rw::__select1st&lang;std::pair&lang;const int, int&rang;, int&rang;&rang;*, __rw::__rw_rb_tree_node&lang;std::allocator&lang;std::pair&lang;const int, int&rang;&rang;, std::pair&lang;const int, int&rang;, int, __rw::__select1st&lang;std::pair&lang;const int, int&rang;, int&rang;&rang;*, const std::pair&lang;const int, int&rang;&)</STRONG> (Thumb, 714 bytes, Stack size 56 bytes, main.o(t._ZN4__rw9__rb_treeIiSt4pairIKiiENS_11__select1stIS3_iEESt4lessIiESaIS3_EE9_C_insertEPNS_17__rw_rb_tree_nodeIS8_S3_iS5_EESC_RKS3_))
<BR><BR>[Stack]<UL><LI>Max Depth = 600 + Unknown Stack Size
<LI>Call Chain = __rw::__rb_tree&lang;int, std::pair&lang;const int, int&rang;, __rw::__select1st&lang;std::pair&lang;const int, int&rang;, int&rang;, std::less&lang;int&rang;, std::allocator&lang;std::pair&lang;const int, int&rang;&rang;&rang;::_C_insert(__rw::__rw_rb_tree_node&lang;std::allocator&lang;std::pair&lang;const int, int&rang;&rang;, std::pair&lang;const int, int&rang;, int, __rw::__select1st&lang;std::pair&lang;const int, int&rang;, int&rang;&rang;*, __rw::__rw_rb_tree_node&lang;std::allocator&lang;std::pair&lang;const int, int&rang;&rang;, std::pair&lang;const int, int&rang;, int, __rw::__select1st&lang;std::pair&lang;const int, int&rang;, int&rang;&rang;*, const std::pair&lang;const int, int&rang;&) &rArr; __rw::__rb_tree&lang;int, std::pair&lang;const int, int&rang;, __rw::__select1st&lang;std::pair&lang;const int, int&rang;, int&rang;, std::less&lang;int&rang;, std::allocator&lang;std::pair&lang;const int, int&rang;&rang;&rang;::_C_get_node(const std::pair&lang;const int, int&rang;&) &rArr; __rw::__rb_tree&lang;int, std::pair&lang;const int, int&rang;, __rw::__select1st&lang;std::pair&lang;const int, int&rang;, int&rang;, std::less&lang;int&rang;, std::allocator&lang;std::pair&lang;const int, int&rang;&rang;&rang;::_C_get_link() &rArr; __rw::__rb_tree&lang;int, std::pair&lang;const int, int&rang;, __rw::__select1st&lang;std::pair&lang;const int, int&rang;, int&rang;, std::less&lang;int&rang;, std::allocator&lang;std::pair&lang;const int, int&rang;&rang;&rang;::_C_add_new_buffer() &rArr; __cxa_rethrow &rArr; _Unwind_RaiseException &rArr; __ARM_Unwind_RaiseException &rArr; malloc &rArr; _malloc_internal &rArr; __Heap_Full &rArr; __Heap_ProvideMemory &rArr; _free_internal &rArr; _mutex_release
</UL>
<BR>[Calls]<UL><LI><a href="#[342]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::less&lang;int&rang;::operator ()(const int&, const int&) const
<LI><a href="#[332]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rb_tree&lang;int, std::pair&lang;const int, int&rang;, __rw::__select1st&lang;std::pair&lang;const int, int&rang;, int&rang;, std::less&lang;int&rang;, std::allocator&lang;std::pair&lang;const int, int&rang;&rang;&rang;::_C_root() const
<LI><a href="#[330]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rb_tree&lang;int, std::pair&lang;const int, int&rang;, __rw::__select1st&lang;std::pair&lang;const int, int&rang;, int&rang;, std::less&lang;int&rang;, std::allocator&lang;std::pair&lang;const int, int&rang;&rang;&rang;::_C_rightmost() const
<LI><a href="#[331]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rb_tree&lang;int, std::pair&lang;const int, int&rang;, __rw::__select1st&lang;std::pair&lang;const int, int&rang;, int&rang;, std::less&lang;int&rang;, std::allocator&lang;std::pair&lang;const int, int&rang;&rang;&rang;::_C_leftmost() const
<LI><a href="#[334]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rb_tree&lang;int, std::pair&lang;const int, int&rang;, __rw::__select1st&lang;std::pair&lang;const int, int&rang;, int&rang;, std::less&lang;int&rang;, std::allocator&lang;std::pair&lang;const int, int&rang;&rang;&rang;::__rotate_right(__rw::__rw_rb_tree_node&lang;std::allocator&lang;std::pair&lang;const int, int&rang;&rang;, std::pair&lang;const int, int&rang;, int, __rw::__select1st&lang;std::pair&lang;const int, int&rang;, int&rang;&rang;*)
<LI><a href="#[333]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rb_tree&lang;int, std::pair&lang;const int, int&rang;, __rw::__select1st&lang;std::pair&lang;const int, int&rang;, int&rang;, std::less&lang;int&rang;, std::allocator&lang;std::pair&lang;const int, int&rang;&rang;&rang;::__rotate_left(__rw::__rw_rb_tree_node&lang;std::allocator&lang;std::pair&lang;const int, int&rang;&rang;, std::pair&lang;const int, int&rang;, int, __rw::__select1st&lang;std::pair&lang;const int, int&rang;, int&rang;&rang;*)
<LI><a href="#[33a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rb_tree&lang;int, std::pair&lang;const int, int&rang;, __rw::__select1st&lang;std::pair&lang;const int, int&rang;, int&rang;, std::less&lang;int&rang;, std::allocator&lang;std::pair&lang;const int, int&rang;&rang;&rang;::_C_make_iter(__rw::__rw_rb_tree_node&lang;std::allocator&lang;std::pair&lang;const int, int&rang;&rang;, std::pair&lang;const int, int&rang;, int, __rw::__select1st&lang;std::pair&lang;const int, int&rang;, int&rang;&rang;*)
<LI><a href="#[32e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rb_tree&lang;int, std::pair&lang;const int, int&rang;, __rw::__select1st&lang;std::pair&lang;const int, int&rang;, int&rang;, std::less&lang;int&rang;, std::allocator&lang;std::pair&lang;const int, int&rang;&rang;&rang;::_C_get_node(const std::pair&lang;const int, int&rang;&)
<LI><a href="#[324]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rw_rb_tree_node&lang;std::allocator&lang;std::pair&lang;const int, int&rang;&rang;, std::pair&lang;const int, int&rang;, int, __rw::__select1st&lang;std::pair&lang;const int, int&rang;, int&rang;&rang;::_C_parent()
<LI><a href="#[325]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rw_rb_tree_node&lang;std::allocator&lang;std::pair&lang;const int, int&rang;&rang;, std::pair&lang;const int, int&rang;, int, __rw::__select1st&lang;std::pair&lang;const int, int&rang;, int&rang;&rang;::_C_right()
<LI><a href="#[326]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rw_rb_tree_node&lang;std::allocator&lang;std::pair&lang;const int, int&rang;&rang;, std::pair&lang;const int, int&rang;, int, __rw::__select1st&lang;std::pair&lang;const int, int&rang;, int&rang;&rang;::_C_left()
<LI><a href="#[341]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rw_rb_tree_node&lang;std::allocator&lang;std::pair&lang;const int, int&rang;&rang;, std::pair&lang;const int, int&rang;, int, __rw::__select1st&lang;std::pair&lang;const int, int&rang;, int&rang;&rang;::_C_key()
</UL>
<BR>[Called By]<UL><LI><a href="#[340]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rb_tree&lang;int, std::pair&lang;const int, int&rang;, __rw::__select1st&lang;std::pair&lang;const int, int&rang;, int&rang;, std::less&lang;int&rang;, std::allocator&lang;std::pair&lang;const int, int&rang;&rang;&rang;::insert(const std::pair&lang;const int, int&rang;&)
</UL>

<P><STRONG><a name="[159]"></a>__rw::__rb_tree&lang;int, std::pair&lang;const int, int&rang;, __rw::__select1st&lang;std::pair&lang;const int, int&rang;, int&rang;, std::less&lang;int&rang;, std::allocator&lang;std::pair&lang;const int, int&rang;&rang;&rang;::__rb_tree(const std::less&lang;int&rang;&, bool, const std::allocator&lang;std::pair&lang;const int, int&rang;&rang;&)</STRONG> (Thumb, 100 bytes, Stack size 32 bytes, main.o(t._ZN4__rw9__rb_treeIiSt4pairIKiiENS_11__select1stIS3_iEESt4lessIiESaIS3_EEC1ERKS7_bRKS8_))
<BR><BR>[Stack]<UL><LI>Max Depth = 536 + Unknown Stack Size
<LI>Call Chain = __rw::__rb_tree&lang;int, std::pair&lang;const int, int&rang;, __rw::__select1st&lang;std::pair&lang;const int, int&rang;, int&rang;, std::less&lang;int&rang;, std::allocator&lang;std::pair&lang;const int, int&rang;&rang;&rang;::__rb_tree(const std::less&lang;int&rang;&, bool, const std::allocator&lang;std::pair&lang;const int, int&rang;&rang;&) &rArr; __rw::__rb_tree&lang;int, std::pair&lang;const int, int&rang;, __rw::__select1st&lang;std::pair&lang;const int, int&rang;, int&rang;, std::less&lang;int&rang;, std::allocator&lang;std::pair&lang;const int, int&rang;&rang;&rang;::_C_get_link() &rArr; __rw::__rb_tree&lang;int, std::pair&lang;const int, int&rang;, __rw::__select1st&lang;std::pair&lang;const int, int&rang;, int&rang;, std::less&lang;int&rang;, std::allocator&lang;std::pair&lang;const int, int&rang;&rang;&rang;::_C_add_new_buffer() &rArr; __cxa_rethrow &rArr; _Unwind_RaiseException &rArr; __ARM_Unwind_RaiseException &rArr; malloc &rArr; _malloc_internal &rArr; __Heap_Full &rArr; __Heap_ProvideMemory &rArr; _free_internal &rArr; _mutex_release
</UL>
<BR>[Calls]<UL><LI><a href="#[345]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::allocator&lang;std::pair&lang;const int, int&rang;&rang;::allocator(const std::allocator&lang;std::pair&lang;const int, int&rang;&rang;&)
<LI><a href="#[332]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rb_tree&lang;int, std::pair&lang;const int, int&rang;, __rw::__select1st&lang;std::pair&lang;const int, int&rang;, int&rang;, std::less&lang;int&rang;, std::allocator&lang;std::pair&lang;const int, int&rang;&rang;&rang;::_C_root() const
<LI><a href="#[330]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rb_tree&lang;int, std::pair&lang;const int, int&rang;, __rw::__select1st&lang;std::pair&lang;const int, int&rang;, int&rang;, std::less&lang;int&rang;, std::allocator&lang;std::pair&lang;const int, int&rang;&rang;&rang;::_C_rightmost() const
<LI><a href="#[331]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rb_tree&lang;int, std::pair&lang;const int, int&rang;, __rw::__select1st&lang;std::pair&lang;const int, int&rang;, int&rang;, std::less&lang;int&rang;, std::allocator&lang;std::pair&lang;const int, int&rang;&rang;&rang;::_C_leftmost() const
<LI><a href="#[32c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rb_tree&lang;int, std::pair&lang;const int, int&rang;, __rw::__select1st&lang;std::pair&lang;const int, int&rang;, int&rang;, std::less&lang;int&rang;, std::allocator&lang;std::pair&lang;const int, int&rang;&rang;&rang;::_C_get_link()
</UL>
<BR>[Called By]<UL><LI><a href="#[d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__sti___8_main_cpp
</UL>

<P><STRONG><a name="[454]"></a>__rw::__rb_tree&lang;int, std::pair&lang;const int, int&rang;, __rw::__select1st&lang;std::pair&lang;const int, int&rang;, int&rang;, std::less&lang;int&rang;, std::allocator&lang;std::pair&lang;const int, int&rang;&rang;&rang;::__rb_tree__sub_object(const std::less&lang;int&rang;&, bool, const std::allocator&lang;std::pair&lang;const int, int&rang;&rang;&)</STRONG> (Thumb, 0 bytes, Stack size 32 bytes, main.o(t._ZN4__rw9__rb_treeIiSt4pairIKiiENS_11__select1stIS3_iEESt4lessIiESaIS3_EEC1ERKS7_bRKS8_), UNUSED)

<P><STRONG><a name="[2ed]"></a>__rw::__rb_tree&lang;int, std::pair&lang;const int, int&rang;, __rw::__select1st&lang;std::pair&lang;const int, int&rang;, int&rang;, std::less&lang;int&rang;, std::allocator&lang;std::pair&lang;const int, int&rang;&rang;&rang;::~__rb_tree()</STRONG> (Thumb, 58 bytes, Stack size 24 bytes, main.o(t._ZN4__rw9__rb_treeIiSt4pairIKiiENS_11__select1stIS3_iEESt4lessIiESaIS3_EED1Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 152<LI>Call Chain = __rw::__rb_tree&lang;int, std::pair&lang;const int, int&rang;, __rw::__select1st&lang;std::pair&lang;const int, int&rang;, int&rang;, std::less&lang;int&rang;, std::allocator&lang;std::pair&lang;const int, int&rang;&rang;&rang;::~__rb_tree() &rArr; __rw::__rb_tree&lang;int, std::pair&lang;const int, int&rang;, __rw::__select1st&lang;std::pair&lang;const int, int&rang;, int&rang;, std::less&lang;int&rang;, std::allocator&lang;std::pair&lang;const int, int&rang;&rang;&rang;::erase(__rw::__rw_tree_iter&lang;std::pair&lang;const int, int&rang;, int, std::pair&lang;const int, int&rang;*, std::pair&lang;const int, int&rang;&, __rw::__rw_rb_tree_node&lang;std::allocator&lang;std::pair&lang;const int, int&rang;&rang;, std::pair&lang;const int, int&rang;, int, __rw::__select1st&lang;std::pair&lang;const int, int&rang;, int&rang;&rang;&rang;, __rw::__rw_tree_iter&lang;std::pair&lang;const int, int&rang;, int, std::pair&lang;const int, int&rang;*, std::pair&lang;const int, int&rang;&, __rw::__rw_rb_tree_node&lang;std::allocator&lang;std::pair&lang;const int, int&rang;&rang;, std::pair&lang;const int, int&rang;, int, __rw::__select1st&lang;std::pair&lang;const int, int&rang;, int&rang;&rang;&rang;) &rArr; __rw::__rb_tree&lang;int, std::pair&lang;const int, int&rang;, __rw::__select1st&lang;std::pair&lang;const int, int&rang;, int&rang;, std::less&lang;int&rang;, std::allocator&lang;std::pair&lang;const int, int&rang;&rang;&rang;::erase(__rw::__rw_tree_iter&lang;std::pair&lang;const int, int&rang;, int, std::pair&lang;const int, int&rang;*, std::pair&lang;const int, int&rang;&, __rw::__rw_rb_tree_node&lang;std::allocator&lang;std::pair&lang;const int, int&rang;&rang;, std::pair&lang;const int, int&rang;, int, __rw::__select1st&lang;std::pair&lang;const int, int&rang;, int&rang;&rang;&rang;) &rArr; __rw::__rb_tree&lang;int, std::pair&lang;const int, int&rang;, __rw::__select1st&lang;std::pair&lang;const int, int&rang;, int&rang;, std::less&lang;int&rang;, std::allocator&lang;std::pair&lang;const int, int&rang;&rang;&rang;::__rotate_right(__rw::__rw_rb_tree_node&lang;std::allocator&lang;std::pair&lang;const int, int&rang;&rang;, std::pair&lang;const int, int&rang;, int, __rw::__select1st&lang;std::pair&lang;const int, int&rang;, int&rang;&rang;*) &rArr; __rw::__rb_tree&lang;int, std::pair&lang;const int, int&rang;, __rw::__select1st&lang;std::pair&lang;const int, int&rang;, int&rang;, std::less&lang;int&rang;, std::allocator&lang;std::pair&lang;const int, int&rang;&rang;&rang;::_C_root() const
</UL>
<BR>[Calls]<UL><LI><a href="#[33e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rb_tree&lang;int, std::pair&lang;const int, int&rang;, __rw::__select1st&lang;std::pair&lang;const int, int&rang;, int&rang;, std::less&lang;int&rang;, std::allocator&lang;std::pair&lang;const int, int&rang;&rang;&rang;::erase(__rw::__rw_tree_iter&lang;std::pair&lang;const int, int&rang;, int, std::pair&lang;const int, int&rang;*, std::pair&lang;const int, int&rang;&, __rw::__rw_rb_tree_node&lang;std::allocator&lang;std::pair&lang;const int, int&rang;&rang;, std::pair&lang;const int, int&rang;, int, __rw::__select1st&lang;std::pair&lang;const int, int&rang;, int&rang;&rang;&rang;, __rw::__rw_tree_iter&lang;std::pair&lang;const int, int&rang;, int, std::pair&lang;const int, int&rang;*, std::pair&lang;const int, int&rang;&, __rw::__rw_rb_tree_node&lang;std::allocator&lang;std::pair&lang;const int, int&rang;&rang;, std::pair&lang;const int, int&rang;, int, __rw::__select1st&lang;std::pair&lang;const int, int&rang;, int&rang;&rang;&rang;)
<LI><a href="#[13c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rb_tree&lang;int, std::pair&lang;const int, int&rang;, __rw::__select1st&lang;std::pair&lang;const int, int&rang;, int&rang;, std::less&lang;int&rang;, std::allocator&lang;std::pair&lang;const int, int&rang;&rang;&rang;::begin()
<LI><a href="#[13f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rb_tree&lang;int, std::pair&lang;const int, int&rang;, __rw::__select1st&lang;std::pair&lang;const int, int&rang;, int&rang;, std::less&lang;int&rang;, std::allocator&lang;std::pair&lang;const int, int&rang;&rang;&rang;::end()
<LI><a href="#[339]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rb_tree&lang;int, std::pair&lang;const int, int&rang;, __rw::__select1st&lang;std::pair&lang;const int, int&rang;, int&rang;, std::less&lang;int&rang;, std::allocator&lang;std::pair&lang;const int, int&rang;&rang;&rang;::_C_deallocate_buffers()
<LI><a href="#[33d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rb_tree&lang;int, std::pair&lang;const int, int&rang;, __rw::__select1st&lang;std::pair&lang;const int, int&rang;, int&rang;, std::less&lang;int&rang;, std::allocator&lang;std::pair&lang;const int, int&rang;&rang;&rang;::_C_put_node(__rw::__rw_rb_tree_node&lang;std::allocator&lang;std::pair&lang;const int, int&rang;&rang;, std::pair&lang;const int, int&rang;, int, __rw::__select1st&lang;std::pair&lang;const int, int&rang;, int&rang;&rang;*, bool)
</UL>
<BR>[Called By]<UL><LI><a href="#[27]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::map&lang;int, int, std::less&lang;int&rang;, std::allocator&lang;std::pair&lang;const int, int&rang;&rang;&rang;::~map()
</UL>

<P><STRONG><a name="[455]"></a>__rw::__rb_tree&lang;int, std::pair&lang;const int, int&rang;, __rw::__select1st&lang;std::pair&lang;const int, int&rang;, int&rang;, std::less&lang;int&rang;, std::allocator&lang;std::pair&lang;const int, int&rang;&rang;&rang;::~__rb_tree__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 24 bytes, main.o(t._ZN4__rw9__rb_treeIiSt4pairIKiiENS_11__select1stIS3_iEESt4lessIiESaIS3_EED1Ev), UNUSED)

<P><STRONG><a name="[33c]"></a>__rw::operator ==&lang;std::pair&lang;const int, int&rang;, int, std::pair&lang;const int, int&rang;*, std::pair&lang;const int, int&rang;&, std::pair&lang;const int, int&rang;*, std::pair&lang;const int, int&rang;&, __rw::__rw_rb_tree_node&lang;std::allocator&lang;std::pair&lang;const int, int&rang;&rang;, std::pair&lang;const int, int&rang;, int, __rw::__select1st&lang;std::pair&lang;const int, int&rang;, int&rang;&rang;&rang;(const __rw::__rw_tree_iter&lang;T1, T2, T3, T4, T7&rang;&, const __rw::__rw_tree_iter&lang;T1, T2, T5, T6, T7&rang;&)</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, main.o(t._ZN4__rweqISt4pairIKiiEiPS3_RS3_S4_S5_NS_17__rw_rb_tree_nodeISaIS3_ES3_iNS_11__select1stIS3_iEEEEEEbRKNS_14__rw_tree_iterIT_T0_T1_T2_T5_EERKNSB_ISC_SD_T3_T4_SG_EE))
<BR><BR>[Called By]<UL><LI><a href="#[140]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::operator !=&lang;std::pair&lang;const int, int&rang;, int, std::pair&lang;const int, int&rang;*, std::pair&lang;const int, int&rang;&, std::pair&lang;const int, int&rang;*, std::pair&lang;const int, int&rang;&, __rw::__rw_rb_tree_node&lang;std::allocator&lang;std::pair&lang;const int, int&rang;&rang;, std::pair&lang;const int, int&rang;, int, __rw::__select1st&lang;std::pair&lang;const int, int&rang;, int&rang;&rang;&rang;(const __rw::__rw_tree_iter&lang;T1, T2, T3, T4, T7&rang;&, const __rw::__rw_tree_iter&lang;T1, T2, T5, T6, T7&rang;&)
<LI><a href="#[340]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rb_tree&lang;int, std::pair&lang;const int, int&rang;, __rw::__select1st&lang;std::pair&lang;const int, int&rang;, int&rang;, std::less&lang;int&rang;, std::allocator&lang;std::pair&lang;const int, int&rang;&rang;&rang;::insert(const std::pair&lang;const int, int&rang;&)
<LI><a href="#[33e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rb_tree&lang;int, std::pair&lang;const int, int&rang;, __rw::__select1st&lang;std::pair&lang;const int, int&rang;, int&rang;, std::less&lang;int&rang;, std::allocator&lang;std::pair&lang;const int, int&rang;&rang;&rang;::erase(__rw::__rw_tree_iter&lang;std::pair&lang;const int, int&rang;, int, std::pair&lang;const int, int&rang;*, std::pair&lang;const int, int&rang;&, __rw::__rw_rb_tree_node&lang;std::allocator&lang;std::pair&lang;const int, int&rang;&rang;, std::pair&lang;const int, int&rang;, int, __rw::__select1st&lang;std::pair&lang;const int, int&rang;, int&rang;&rang;&rang;, __rw::__rw_tree_iter&lang;std::pair&lang;const int, int&rang;, int, std::pair&lang;const int, int&rang;*, std::pair&lang;const int, int&rang;&, __rw::__rw_rb_tree_node&lang;std::allocator&lang;std::pair&lang;const int, int&rang;&rang;, std::pair&lang;const int, int&rang;, int, __rw::__select1st&lang;std::pair&lang;const int, int&rang;, int&rang;&rang;&rang;)
<LI><a href="#[33b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rb_tree&lang;int, std::pair&lang;const int, int&rang;, __rw::__select1st&lang;std::pair&lang;const int, int&rang;, int&rang;, std::less&lang;int&rang;, std::allocator&lang;std::pair&lang;const int, int&rang;&rang;&rang;::erase(__rw::__rw_tree_iter&lang;std::pair&lang;const int, int&rang;, int, std::pair&lang;const int, int&rang;*, std::pair&lang;const int, int&rang;&, __rw::__rw_rb_tree_node&lang;std::allocator&lang;std::pair&lang;const int, int&rang;&rang;, std::pair&lang;const int, int&rang;, int, __rw::__select1st&lang;std::pair&lang;const int, int&rang;, int&rang;&rang;&rang;)
</UL>

<P><STRONG><a name="[140]"></a>__rw::operator !=&lang;std::pair&lang;const int, int&rang;, int, std::pair&lang;const int, int&rang;*, std::pair&lang;const int, int&rang;&, std::pair&lang;const int, int&rang;*, std::pair&lang;const int, int&rang;&, __rw::__rw_rb_tree_node&lang;std::allocator&lang;std::pair&lang;const int, int&rang;&rang;, std::pair&lang;const int, int&rang;, int, __rw::__select1st&lang;std::pair&lang;const int, int&rang;, int&rang;&rang;&rang;(const __rw::__rw_tree_iter&lang;T1, T2, T3, T4, T7&rang;&, const __rw::__rw_tree_iter&lang;T1, T2, T5, T6, T7&rang;&)</STRONG> (Thumb, 20 bytes, Stack size 16 bytes, main.o(t._ZN4__rwneISt4pairIKiiEiPS3_RS3_S4_S5_NS_17__rw_rb_tree_nodeISaIS3_ES3_iNS_11__select1stIS3_iEEEEEEbRKNS_14__rw_tree_iterIT_T0_T1_T2_T5_EERKNSB_ISC_SD_T3_T4_SG_EE))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = __rw::operator !=&lang;std::pair&lang;const int, int&rang;, int, std::pair&lang;const int, int&rang;*, std::pair&lang;const int, int&rang;&, std::pair&lang;const int, int&rang;*, std::pair&lang;const int, int&rang;&, __rw::__rw_rb_tree_node&lang;std::allocator&lang;std::pair&lang;const int, int&rang;&rang;, std::pair&lang;const int, int&rang;, int, __rw::__select1st&lang;std::pair&lang;const int, int&rang;, int&rang;&rang;&rang;(const __rw::__rw_tree_iter&lang;T1, T2, T3, T4, T7&rang;&, const __rw::__rw_tree_iter&lang;T1, T2, T5, T6, T7&rang;&)
</UL>
<BR>[Calls]<UL><LI><a href="#[33c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::operator ==&lang;std::pair&lang;const int, int&rang;, int, std::pair&lang;const int, int&rang;*, std::pair&lang;const int, int&rang;&, std::pair&lang;const int, int&rang;*, std::pair&lang;const int, int&rang;&, __rw::__rw_rb_tree_node&lang;std::allocator&lang;std::pair&lang;const int, int&rang;&rang;, std::pair&lang;const int, int&rang;, int, __rw::__select1st&lang;std::pair&lang;const int, int&rang;, int&rang;&rang;&rang;(const __rw::__rw_tree_iter&lang;T1, T2, T3, T4, T7&rang;&, const __rw::__rw_tree_iter&lang;T1, T2, T5, T6, T7&rang;&)
</UL>
<BR>[Called By]<UL><LI><a href="#[33e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rb_tree&lang;int, std::pair&lang;const int, int&rang;, __rw::__select1st&lang;std::pair&lang;const int, int&rang;, int&rang;, std::less&lang;int&rang;, std::allocator&lang;std::pair&lang;const int, int&rang;&rang;&rang;::erase(__rw::__rw_tree_iter&lang;std::pair&lang;const int, int&rang;, int, std::pair&lang;const int, int&rang;*, std::pair&lang;const int, int&rang;&, __rw::__rw_rb_tree_node&lang;std::allocator&lang;std::pair&lang;const int, int&rang;&rang;, std::pair&lang;const int, int&rang;, int, __rw::__select1st&lang;std::pair&lang;const int, int&rang;, int&rang;&rang;&rang;, __rw::__rw_tree_iter&lang;std::pair&lang;const int, int&rang;, int, std::pair&lang;const int, int&rang;*, std::pair&lang;const int, int&rang;&, __rw::__rw_rb_tree_node&lang;std::allocator&lang;std::pair&lang;const int, int&rang;&rang;, std::pair&lang;const int, int&rang;, int, __rw::__select1st&lang;std::pair&lang;const int, int&rang;, int&rang;&rang;&rang;)
<LI><a href="#[135]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;stl_test()
</UL>

<P><STRONG><a name="[365]"></a>__rw::__string_ref&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;::_C_ref_count() const</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, main.o(t._ZNK4__rw12__string_refIcSt11char_traitsIcESaIcEE12_C_ref_countEv))
<BR><BR>[Called By]<UL><LI><a href="#[29d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;::operator =(const std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;&)
<LI><a href="#[146]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;::operator =(const char*)
<LI><a href="#[294]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;::basic_string(const std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;&)
<LI><a href="#[362]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;::_C_unlink()
<LI><a href="#[364]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;::replace(unsigned, unsigned, const char*, unsigned, unsigned, unsigned)
</UL>

<P><STRONG><a name="[346]"></a>__rw::__rw_tree_iter&lang;std::pair&lang;const int, int&rang;, int, std::pair&lang;const int, int&rang;*, std::pair&lang;const int, int&rang;&, __rw::__rw_rb_tree_node&lang;std::allocator&lang;std::pair&lang;const int, int&rang;&rang;, std::pair&lang;const int, int&rang;, int, __rw::__select1st&lang;std::pair&lang;const int, int&rang;, int&rang;&rang;&rang;::operator *() const</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, main.o(t._ZNK4__rw14__rw_tree_iterISt4pairIKiiEiPS3_RS3_NS_17__rw_rb_tree_nodeISaIS3_ES3_iNS_11__select1stIS3_iEEEEEdeEv))
<BR><BR>[Called By]<UL><LI><a href="#[13b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::map&lang;int, int, std::less&lang;int&rang;, std::allocator&lang;std::pair&lang;const int, int&rang;&rang;&rang;::operator [](const int&)
<LI><a href="#[13d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rw_tree_iter&lang;std::pair&lang;const int, int&rang;, int, std::pair&lang;const int, int&rang;*, std::pair&lang;const int, int&rang;&, __rw::__rw_rb_tree_node&lang;std::allocator&lang;std::pair&lang;const int, int&rang;&rang;, std::pair&lang;const int, int&rang;, int, __rw::__select1st&lang;std::pair&lang;const int, int&rang;, int&rang;&rang;&rang;::operator -&rang;() const
</UL>

<P><STRONG><a name="[13d]"></a>__rw::__rw_tree_iter&lang;std::pair&lang;const int, int&rang;, int, std::pair&lang;const int, int&rang;*, std::pair&lang;const int, int&rang;&, __rw::__rw_rb_tree_node&lang;std::allocator&lang;std::pair&lang;const int, int&rang;&rang;, std::pair&lang;const int, int&rang;, int, __rw::__select1st&lang;std::pair&lang;const int, int&rang;, int&rang;&rang;&rang;::operator -&rang;() const</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, main.o(t._ZNK4__rw14__rw_tree_iterISt4pairIKiiEiPS3_RS3_NS_17__rw_rb_tree_nodeISaIS3_ES3_iNS_11__select1stIS3_iEEEEEptEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __rw::__rw_tree_iter&lang;std::pair&lang;const int, int&rang;, int, std::pair&lang;const int, int&rang;*, std::pair&lang;const int, int&rang;&, __rw::__rw_rb_tree_node&lang;std::allocator&lang;std::pair&lang;const int, int&rang;&rang;, std::pair&lang;const int, int&rang;, int, __rw::__select1st&lang;std::pair&lang;const int, int&rang;, int&rang;&rang;&rang;::operator -&rang;() const
</UL>
<BR>[Calls]<UL><LI><a href="#[346]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rw_tree_iter&lang;std::pair&lang;const int, int&rang;, int, std::pair&lang;const int, int&rang;*, std::pair&lang;const int, int&rang;&, __rw::__rw_rb_tree_node&lang;std::allocator&lang;std::pair&lang;const int, int&rang;&rang;, std::pair&lang;const int, int&rang;, int, __rw::__select1st&lang;std::pair&lang;const int, int&rang;, int&rang;&rang;&rang;::operator *() const
</UL>
<BR>[Called By]<UL><LI><a href="#[135]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;stl_test()
</UL>

<P><STRONG><a name="[354]"></a>__rw::__rw_collate_data&lang;char&rang;::_C_coll_order(char) const</STRONG> (Thumb, 54 bytes, Stack size 0 bytes, char.o(t._ZNK4__rw17__rw_collate_dataIcE13_C_coll_orderEc), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[355]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::collate&lang;char&rang;::do_transform(const char*, const char*) const
<LI><a href="#[353]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::collate&lang;char&rang;::do_compare(const char*, const char*, const char*, const char*) const
</UL>

<P><STRONG><a name="[331]"></a>__rw::__rb_tree&lang;int, std::pair&lang;const int, int&rang;, __rw::__select1st&lang;std::pair&lang;const int, int&rang;, int&rang;, std::less&lang;int&rang;, std::allocator&lang;std::pair&lang;const int, int&rang;&rang;&rang;::_C_leftmost() const</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, main.o(t._ZNK4__rw9__rb_treeIiSt4pairIKiiENS_11__select1stIS3_iEESt4lessIiESaIS3_EE11_C_leftmostEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __rw::__rb_tree&lang;int, std::pair&lang;const int, int&rang;, __rw::__select1st&lang;std::pair&lang;const int, int&rang;, int&rang;, std::less&lang;int&rang;, std::allocator&lang;std::pair&lang;const int, int&rang;&rang;&rang;::_C_leftmost() const
</UL>
<BR>[Calls]<UL><LI><a href="#[326]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rw_rb_tree_node&lang;std::allocator&lang;std::pair&lang;const int, int&rang;&rang;, std::pair&lang;const int, int&rang;, int, __rw::__select1st&lang;std::pair&lang;const int, int&rang;, int&rang;&rang;::_C_left()
</UL>
<BR>[Called By]<UL><LI><a href="#[159]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rb_tree&lang;int, std::pair&lang;const int, int&rang;, __rw::__select1st&lang;std::pair&lang;const int, int&rang;, int&rang;, std::less&lang;int&rang;, std::allocator&lang;std::pair&lang;const int, int&rang;&rang;&rang;::__rb_tree(const std::less&lang;int&rang;&, bool, const std::allocator&lang;std::pair&lang;const int, int&rang;&rang;&)
<LI><a href="#[343]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rb_tree&lang;int, std::pair&lang;const int, int&rang;, __rw::__select1st&lang;std::pair&lang;const int, int&rang;, int&rang;, std::less&lang;int&rang;, std::allocator&lang;std::pair&lang;const int, int&rang;&rang;&rang;::_C_insert(__rw::__rw_rb_tree_node&lang;std::allocator&lang;std::pair&lang;const int, int&rang;&rang;, std::pair&lang;const int, int&rang;, int, __rw::__select1st&lang;std::pair&lang;const int, int&rang;, int&rang;&rang;*, __rw::__rw_rb_tree_node&lang;std::allocator&lang;std::pair&lang;const int, int&rang;&rang;, std::pair&lang;const int, int&rang;, int, __rw::__select1st&lang;std::pair&lang;const int, int&rang;, int&rang;&rang;*, const std::pair&lang;const int, int&rang;&)
<LI><a href="#[33e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rb_tree&lang;int, std::pair&lang;const int, int&rang;, __rw::__select1st&lang;std::pair&lang;const int, int&rang;, int&rang;, std::less&lang;int&rang;, std::allocator&lang;std::pair&lang;const int, int&rang;&rang;&rang;::erase(__rw::__rw_tree_iter&lang;std::pair&lang;const int, int&rang;, int, std::pair&lang;const int, int&rang;*, std::pair&lang;const int, int&rang;&, __rw::__rw_rb_tree_node&lang;std::allocator&lang;std::pair&lang;const int, int&rang;&rang;, std::pair&lang;const int, int&rang;, int, __rw::__select1st&lang;std::pair&lang;const int, int&rang;, int&rang;&rang;&rang;, __rw::__rw_tree_iter&lang;std::pair&lang;const int, int&rang;, int, std::pair&lang;const int, int&rang;*, std::pair&lang;const int, int&rang;&, __rw::__rw_rb_tree_node&lang;std::allocator&lang;std::pair&lang;const int, int&rang;&rang;, std::pair&lang;const int, int&rang;, int, __rw::__select1st&lang;std::pair&lang;const int, int&rang;, int&rang;&rang;&rang;)
<LI><a href="#[33b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rb_tree&lang;int, std::pair&lang;const int, int&rang;, __rw::__select1st&lang;std::pair&lang;const int, int&rang;, int&rang;, std::less&lang;int&rang;, std::allocator&lang;std::pair&lang;const int, int&rang;&rang;&rang;::erase(__rw::__rw_tree_iter&lang;std::pair&lang;const int, int&rang;, int, std::pair&lang;const int, int&rang;*, std::pair&lang;const int, int&rang;&, __rw::__rw_rb_tree_node&lang;std::allocator&lang;std::pair&lang;const int, int&rang;&rang;, std::pair&lang;const int, int&rang;, int, __rw::__select1st&lang;std::pair&lang;const int, int&rang;, int&rang;&rang;&rang;)
<LI><a href="#[13c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rb_tree&lang;int, std::pair&lang;const int, int&rang;, __rw::__select1st&lang;std::pair&lang;const int, int&rang;, int&rang;, std::less&lang;int&rang;, std::allocator&lang;std::pair&lang;const int, int&rang;&rang;&rang;::begin()
<LI><a href="#[32f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rb_tree&lang;int, std::pair&lang;const int, int&rang;, __rw::__select1st&lang;std::pair&lang;const int, int&rang;, int&rang;, std::less&lang;int&rang;, std::allocator&lang;std::pair&lang;const int, int&rang;&rang;&rang;::_C_erase_leaf(__rw::__rw_rb_tree_node&lang;std::allocator&lang;std::pair&lang;const int, int&rang;&rang;, std::pair&lang;const int, int&rang;, int, __rw::__select1st&lang;std::pair&lang;const int, int&rang;, int&rang;&rang;*)
</UL>

<P><STRONG><a name="[330]"></a>__rw::__rb_tree&lang;int, std::pair&lang;const int, int&rang;, __rw::__select1st&lang;std::pair&lang;const int, int&rang;, int&rang;, std::less&lang;int&rang;, std::allocator&lang;std::pair&lang;const int, int&rang;&rang;&rang;::_C_rightmost() const</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, main.o(t._ZNK4__rw9__rb_treeIiSt4pairIKiiENS_11__select1stIS3_iEESt4lessIiESaIS3_EE12_C_rightmostEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __rw::__rb_tree&lang;int, std::pair&lang;const int, int&rang;, __rw::__select1st&lang;std::pair&lang;const int, int&rang;, int&rang;, std::less&lang;int&rang;, std::allocator&lang;std::pair&lang;const int, int&rang;&rang;&rang;::_C_rightmost() const
</UL>
<BR>[Calls]<UL><LI><a href="#[325]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rw_rb_tree_node&lang;std::allocator&lang;std::pair&lang;const int, int&rang;&rang;, std::pair&lang;const int, int&rang;, int, __rw::__select1st&lang;std::pair&lang;const int, int&rang;, int&rang;&rang;::_C_right()
</UL>
<BR>[Called By]<UL><LI><a href="#[159]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rb_tree&lang;int, std::pair&lang;const int, int&rang;, __rw::__select1st&lang;std::pair&lang;const int, int&rang;, int&rang;, std::less&lang;int&rang;, std::allocator&lang;std::pair&lang;const int, int&rang;&rang;&rang;::__rb_tree(const std::less&lang;int&rang;&, bool, const std::allocator&lang;std::pair&lang;const int, int&rang;&rang;&)
<LI><a href="#[343]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rb_tree&lang;int, std::pair&lang;const int, int&rang;, __rw::__select1st&lang;std::pair&lang;const int, int&rang;, int&rang;, std::less&lang;int&rang;, std::allocator&lang;std::pair&lang;const int, int&rang;&rang;&rang;::_C_insert(__rw::__rw_rb_tree_node&lang;std::allocator&lang;std::pair&lang;const int, int&rang;&rang;, std::pair&lang;const int, int&rang;, int, __rw::__select1st&lang;std::pair&lang;const int, int&rang;, int&rang;&rang;*, __rw::__rw_rb_tree_node&lang;std::allocator&lang;std::pair&lang;const int, int&rang;&rang;, std::pair&lang;const int, int&rang;, int, __rw::__select1st&lang;std::pair&lang;const int, int&rang;, int&rang;&rang;*, const std::pair&lang;const int, int&rang;&)
<LI><a href="#[33e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rb_tree&lang;int, std::pair&lang;const int, int&rang;, __rw::__select1st&lang;std::pair&lang;const int, int&rang;, int&rang;, std::less&lang;int&rang;, std::allocator&lang;std::pair&lang;const int, int&rang;&rang;&rang;::erase(__rw::__rw_tree_iter&lang;std::pair&lang;const int, int&rang;, int, std::pair&lang;const int, int&rang;*, std::pair&lang;const int, int&rang;&, __rw::__rw_rb_tree_node&lang;std::allocator&lang;std::pair&lang;const int, int&rang;&rang;, std::pair&lang;const int, int&rang;, int, __rw::__select1st&lang;std::pair&lang;const int, int&rang;, int&rang;&rang;&rang;, __rw::__rw_tree_iter&lang;std::pair&lang;const int, int&rang;, int, std::pair&lang;const int, int&rang;*, std::pair&lang;const int, int&rang;&, __rw::__rw_rb_tree_node&lang;std::allocator&lang;std::pair&lang;const int, int&rang;&rang;, std::pair&lang;const int, int&rang;, int, __rw::__select1st&lang;std::pair&lang;const int, int&rang;, int&rang;&rang;&rang;)
<LI><a href="#[33b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rb_tree&lang;int, std::pair&lang;const int, int&rang;, __rw::__select1st&lang;std::pair&lang;const int, int&rang;, int&rang;, std::less&lang;int&rang;, std::allocator&lang;std::pair&lang;const int, int&rang;&rang;&rang;::erase(__rw::__rw_tree_iter&lang;std::pair&lang;const int, int&rang;, int, std::pair&lang;const int, int&rang;*, std::pair&lang;const int, int&rang;&, __rw::__rw_rb_tree_node&lang;std::allocator&lang;std::pair&lang;const int, int&rang;&rang;, std::pair&lang;const int, int&rang;, int, __rw::__select1st&lang;std::pair&lang;const int, int&rang;, int&rang;&rang;&rang;)
<LI><a href="#[32f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rb_tree&lang;int, std::pair&lang;const int, int&rang;, __rw::__select1st&lang;std::pair&lang;const int, int&rang;, int&rang;, std::less&lang;int&rang;, std::allocator&lang;std::pair&lang;const int, int&rang;&rang;&rang;::_C_erase_leaf(__rw::__rw_rb_tree_node&lang;std::allocator&lang;std::pair&lang;const int, int&rang;&rang;, std::pair&lang;const int, int&rang;, int, __rw::__select1st&lang;std::pair&lang;const int, int&rang;, int&rang;&rang;*)
</UL>

<P><STRONG><a name="[332]"></a>__rw::__rb_tree&lang;int, std::pair&lang;const int, int&rang;, __rw::__select1st&lang;std::pair&lang;const int, int&rang;, int&rang;, std::less&lang;int&rang;, std::allocator&lang;std::pair&lang;const int, int&rang;&rang;&rang;::_C_root() const</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, main.o(t._ZNK4__rw9__rb_treeIiSt4pairIKiiENS_11__select1stIS3_iEESt4lessIiESaIS3_EE7_C_rootEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __rw::__rb_tree&lang;int, std::pair&lang;const int, int&rang;, __rw::__select1st&lang;std::pair&lang;const int, int&rang;, int&rang;, std::less&lang;int&rang;, std::allocator&lang;std::pair&lang;const int, int&rang;&rang;&rang;::_C_root() const
</UL>
<BR>[Calls]<UL><LI><a href="#[324]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rw_rb_tree_node&lang;std::allocator&lang;std::pair&lang;const int, int&rang;&rang;, std::pair&lang;const int, int&rang;, int, __rw::__select1st&lang;std::pair&lang;const int, int&rang;, int&rang;&rang;::_C_parent()
</UL>
<BR>[Called By]<UL><LI><a href="#[159]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rb_tree&lang;int, std::pair&lang;const int, int&rang;, __rw::__select1st&lang;std::pair&lang;const int, int&rang;, int&rang;, std::less&lang;int&rang;, std::allocator&lang;std::pair&lang;const int, int&rang;&rang;&rang;::__rb_tree(const std::less&lang;int&rang;&, bool, const std::allocator&lang;std::pair&lang;const int, int&rang;&rang;&)
<LI><a href="#[343]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rb_tree&lang;int, std::pair&lang;const int, int&rang;, __rw::__select1st&lang;std::pair&lang;const int, int&rang;, int&rang;, std::less&lang;int&rang;, std::allocator&lang;std::pair&lang;const int, int&rang;&rang;&rang;::_C_insert(__rw::__rw_rb_tree_node&lang;std::allocator&lang;std::pair&lang;const int, int&rang;&rang;, std::pair&lang;const int, int&rang;, int, __rw::__select1st&lang;std::pair&lang;const int, int&rang;, int&rang;&rang;*, __rw::__rw_rb_tree_node&lang;std::allocator&lang;std::pair&lang;const int, int&rang;&rang;, std::pair&lang;const int, int&rang;, int, __rw::__select1st&lang;std::pair&lang;const int, int&rang;, int&rang;&rang;*, const std::pair&lang;const int, int&rang;&)
<LI><a href="#[340]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rb_tree&lang;int, std::pair&lang;const int, int&rang;, __rw::__select1st&lang;std::pair&lang;const int, int&rang;, int&rang;, std::less&lang;int&rang;, std::allocator&lang;std::pair&lang;const int, int&rang;&rang;&rang;::insert(const std::pair&lang;const int, int&rang;&)
<LI><a href="#[33e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rb_tree&lang;int, std::pair&lang;const int, int&rang;, __rw::__select1st&lang;std::pair&lang;const int, int&rang;, int&rang;, std::less&lang;int&rang;, std::allocator&lang;std::pair&lang;const int, int&rang;&rang;&rang;::erase(__rw::__rw_tree_iter&lang;std::pair&lang;const int, int&rang;, int, std::pair&lang;const int, int&rang;*, std::pair&lang;const int, int&rang;&, __rw::__rw_rb_tree_node&lang;std::allocator&lang;std::pair&lang;const int, int&rang;&rang;, std::pair&lang;const int, int&rang;, int, __rw::__select1st&lang;std::pair&lang;const int, int&rang;, int&rang;&rang;&rang;, __rw::__rw_tree_iter&lang;std::pair&lang;const int, int&rang;, int, std::pair&lang;const int, int&rang;*, std::pair&lang;const int, int&rang;&, __rw::__rw_rb_tree_node&lang;std::allocator&lang;std::pair&lang;const int, int&rang;&rang;, std::pair&lang;const int, int&rang;, int, __rw::__select1st&lang;std::pair&lang;const int, int&rang;, int&rang;&rang;&rang;)
<LI><a href="#[33b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rb_tree&lang;int, std::pair&lang;const int, int&rang;, __rw::__select1st&lang;std::pair&lang;const int, int&rang;, int&rang;, std::less&lang;int&rang;, std::allocator&lang;std::pair&lang;const int, int&rang;&rang;&rang;::erase(__rw::__rw_tree_iter&lang;std::pair&lang;const int, int&rang;, int, std::pair&lang;const int, int&rang;*, std::pair&lang;const int, int&rang;&, __rw::__rw_rb_tree_node&lang;std::allocator&lang;std::pair&lang;const int, int&rang;&rang;, std::pair&lang;const int, int&rang;, int, __rw::__select1st&lang;std::pair&lang;const int, int&rang;, int&rang;&rang;&rang;)
<LI><a href="#[334]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rb_tree&lang;int, std::pair&lang;const int, int&rang;, __rw::__select1st&lang;std::pair&lang;const int, int&rang;, int&rang;, std::less&lang;int&rang;, std::allocator&lang;std::pair&lang;const int, int&rang;&rang;&rang;::__rotate_right(__rw::__rw_rb_tree_node&lang;std::allocator&lang;std::pair&lang;const int, int&rang;&rang;, std::pair&lang;const int, int&rang;, int, __rw::__select1st&lang;std::pair&lang;const int, int&rang;, int&rang;&rang;*)
<LI><a href="#[333]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rb_tree&lang;int, std::pair&lang;const int, int&rang;, __rw::__select1st&lang;std::pair&lang;const int, int&rang;, int&rang;, std::less&lang;int&rang;, std::allocator&lang;std::pair&lang;const int, int&rang;&rang;&rang;::__rotate_left(__rw::__rw_rb_tree_node&lang;std::allocator&lang;std::pair&lang;const int, int&rang;&rang;, std::pair&lang;const int, int&rang;, int, __rw::__select1st&lang;std::pair&lang;const int, int&rang;, int&rang;&rang;*)
<LI><a href="#[32f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rb_tree&lang;int, std::pair&lang;const int, int&rang;, __rw::__select1st&lang;std::pair&lang;const int, int&rang;, int&rang;, std::less&lang;int&rang;, std::allocator&lang;std::pair&lang;const int, int&rang;&rang;&rang;::_C_erase_leaf(__rw::__rw_rb_tree_node&lang;std::allocator&lang;std::pair&lang;const int, int&rang;&rang;, std::pair&lang;const int, int&rang;, int, __rw::__select1st&lang;std::pair&lang;const int, int&rang;, int&rang;&rang;*)
</UL>

<P><STRONG><a name="[14c]"></a>std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;::data() const</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, main.o(t._ZNKSs4dataEv))
<BR><BR>[Called By]<UL><LI><a href="#[29d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;::operator =(const std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;&)
<LI><a href="#[362]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;::_C_unlink()
<LI><a href="#[364]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;::replace(unsigned, unsigned, const char*, unsigned, unsigned, unsigned)
<LI><a href="#[135]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;stl_test()
</UL>

<P><STRONG><a name="[149]"></a>std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;::size() const</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, main.o(t._ZNKSs4sizeEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;::size() const
</UL>
<BR>[Calls]<UL><LI><a href="#[347]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;::_C_pref() const
</UL>
<BR>[Called By]<UL><LI><a href="#[29d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;::operator =(const std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;&)
<LI><a href="#[146]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;::operator =(const char*)
<LI><a href="#[294]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;::basic_string(const std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;&)
<LI><a href="#[364]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;::replace(unsigned, unsigned, const char*, unsigned, unsigned, unsigned)
<LI><a href="#[148]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;::length() const
<LI><a href="#[135]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;stl_test()
</UL>

<P><STRONG><a name="[148]"></a>std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;::length() const</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, main.o(t._ZNKSs6lengthEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;::length() const &rArr; std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;::size() const
</UL>
<BR>[Calls]<UL><LI><a href="#[149]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;::size() const
</UL>
<BR>[Called By]<UL><LI><a href="#[135]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;stl_test()
</UL>

<P><STRONG><a name="[347]"></a>std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;::_C_pref() const</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, main.o(t._ZNKSs7_C_prefEv))
<BR><BR>[Called By]<UL><LI><a href="#[29d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;::operator =(const std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;&)
<LI><a href="#[146]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;::operator =(const char*)
<LI><a href="#[294]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;::basic_string(const std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;&)
<LI><a href="#[362]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;::_C_unlink()
<LI><a href="#[364]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;::replace(unsigned, unsigned, const char*, unsigned, unsigned, unsigned)
<LI><a href="#[348]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;::capacity() const
<LI><a href="#[149]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;::size() const
</UL>

<P><STRONG><a name="[348]"></a>std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;::capacity() const</STRONG> (Thumb, 16 bytes, Stack size 16 bytes, main.o(t._ZNKSs8capacityEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;::capacity() const
</UL>
<BR>[Calls]<UL><LI><a href="#[347]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;::_C_pref() const
</UL>
<BR>[Called By]<UL><LI><a href="#[362]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;::_C_unlink()
<LI><a href="#[364]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;::replace(unsigned, unsigned, const char*, unsigned, unsigned, unsigned)
</UL>

<P><STRONG><a name="[349]"></a>std::basic_filebuf&lang;char, std::char_traits&lang;char&rang;&rang;::is_open() const</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, ios.o(t._ZNKSt13basic_filebufIcSt11char_traitsIcEE7is_openEv))
<BR><BR>[Calls]<UL><LI><a href="#[28b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rw_file_t::_C_is_open() const
</UL>
<BR>[Called By]<UL><LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::basic_filebuf&lang;char, std::char_traits&lang;char&rang;&rang;::underflow()
<LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::basic_filebuf&lang;char, std::char_traits&lang;char&rang;&rang;::showmanyc()
<LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::basic_filebuf&lang;char, std::char_traits&lang;char&rang;&rang;::pbackfail(int)
<LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::basic_filebuf&lang;char, std::char_traits&lang;char&rang;&rang;::overflow(int)
<LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::basic_filebuf&lang;char, std::char_traits&lang;char&rang;&rang;::seekpos(std::fpos&lang;std::__mbstate_t&rang;, int)
<LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::basic_filebuf&lang;char, std::char_traits&lang;char&rang;&rang;::seekoff(long, std::ios_base::_C_seekdir, int)
<LI><a href="#[371]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::basic_filebuf&lang;char, std::char_traits&lang;char&rang;&rang;::close()
</UL>

<P><STRONG><a name="[34a]"></a>std::basic_filebuf&lang;wchar_t, std::char_traits&lang;wchar_t&rang;&rang;::is_open() const</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, ios.o(t._ZNKSt13basic_filebufIwSt11char_traitsIwEE7is_openEv))
<BR><BR>[Calls]<UL><LI><a href="#[28b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rw_file_t::_C_is_open() const
</UL>
<BR>[Called By]<UL><LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::basic_filebuf&lang;wchar_t, std::char_traits&lang;wchar_t&rang;&rang;::underflow()
<LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::basic_filebuf&lang;wchar_t, std::char_traits&lang;wchar_t&rang;&rang;::showmanyc()
<LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::basic_filebuf&lang;wchar_t, std::char_traits&lang;wchar_t&rang;&rang;::pbackfail(int)
<LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::basic_filebuf&lang;wchar_t, std::char_traits&lang;wchar_t&rang;&rang;::overflow(int)
<LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::basic_filebuf&lang;wchar_t, std::char_traits&lang;wchar_t&rang;&rang;::seekpos(std::fpos&lang;std::__mbstate_t&rang;, int)
<LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::basic_filebuf&lang;wchar_t, std::char_traits&lang;wchar_t&rang;&rang;::seekoff(long, std::ios_base::_C_seekdir, int)
<LI><a href="#[380]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::basic_filebuf&lang;wchar_t, std::char_traits&lang;wchar_t&rang;&rang;::close()
</UL>

<P><STRONG><a name="[376]"></a>std::basic_streambuf&lang;char, std::char_traits&lang;char&rang;&rang;::_C_putback_avail() const</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, ios.o(t._ZNKSt15basic_streambufIcSt11char_traitsIcEE16_C_putback_availEv))
<BR><BR>[Called By]<UL><LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::basic_filebuf&lang;char, std::char_traits&lang;char&rang;&rang;::underflow()
<LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::basic_filebuf&lang;char, std::char_traits&lang;char&rang;&rang;::pbackfail(int)
</UL>

<P><STRONG><a name="[34b]"></a>std::basic_streambuf&lang;char, std::char_traits&lang;char&rang;&rang;::_C_is_eof(int) const</STRONG> (Thumb, 20 bytes, Stack size 16 bytes, ios.o(t._ZNKSt15basic_streambufIcSt11char_traitsIcEE9_C_is_eofEi))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = std::basic_streambuf&lang;char, std::char_traits&lang;char&rang;&rang;::_C_is_eof(int) const
</UL>
<BR>[Calls]<UL><LI><a href="#[2de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::char_traits&lang;char&rang;::eq_int_type(const int&, const int&)
</UL>
<BR>[Called By]<UL><LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::basic_streambuf&lang;char, std::char_traits&lang;char&rang;&rang;::xsputn(const char*, long)
<LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::basic_streambuf&lang;char, std::char_traits&lang;char&rang;&rang;::uflow()
<LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::basic_filebuf&lang;char, std::char_traits&lang;char&rang;&rang;::pbackfail(int)
<LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::basic_filebuf&lang;char, std::char_traits&lang;char&rang;&rang;::overflow(int)
<LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::basic_filebuf&lang;char, std::char_traits&lang;char&rang;&rang;::seekpos(std::fpos&lang;std::__mbstate_t&rang;, int)
<LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::basic_filebuf&lang;char, std::char_traits&lang;char&rang;&rang;::xsputn(const char*, long)
<LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::basic_filebuf&lang;char, std::char_traits&lang;char&rang;&rang;::uflow()
<LI><a href="#[371]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::basic_filebuf&lang;char, std::char_traits&lang;char&rang;&rang;::close()
<LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::basic_filebuf&lang;char, std::char_traits&lang;char&rang;&rang;::sync()
</UL>

<P><STRONG><a name="[386]"></a>std::basic_streambuf&lang;wchar_t, std::char_traits&lang;wchar_t&rang;&rang;::_C_putback_avail() const</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, ios.o(t._ZNKSt15basic_streambufIwSt11char_traitsIwEE16_C_putback_availEv))
<BR><BR>[Called By]<UL><LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::basic_filebuf&lang;wchar_t, std::char_traits&lang;wchar_t&rang;&rang;::underflow()
<LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::basic_filebuf&lang;wchar_t, std::char_traits&lang;wchar_t&rang;&rang;::pbackfail(int)
</UL>

<P><STRONG><a name="[34c]"></a>std::basic_streambuf&lang;wchar_t, std::char_traits&lang;wchar_t&rang;&rang;::_C_is_eof(int) const</STRONG> (Thumb, 20 bytes, Stack size 16 bytes, ios.o(t._ZNKSt15basic_streambufIwSt11char_traitsIwEE9_C_is_eofEi))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = std::basic_streambuf&lang;wchar_t, std::char_traits&lang;wchar_t&rang;&rang;::_C_is_eof(int) const
</UL>
<BR>[Calls]<UL><LI><a href="#[2e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::char_traits&lang;wchar_t&rang;::eq_int_type(const int&, const int&)
</UL>
<BR>[Called By]<UL><LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::basic_streambuf&lang;wchar_t, std::char_traits&lang;wchar_t&rang;&rang;::xsputn(const wchar_t*, long)
<LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::basic_streambuf&lang;wchar_t, std::char_traits&lang;wchar_t&rang;&rang;::uflow()
<LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::basic_filebuf&lang;wchar_t, std::char_traits&lang;wchar_t&rang;&rang;::pbackfail(int)
<LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::basic_filebuf&lang;wchar_t, std::char_traits&lang;wchar_t&rang;&rang;::overflow(int)
<LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::basic_filebuf&lang;wchar_t, std::char_traits&lang;wchar_t&rang;&rang;::seekpos(std::fpos&lang;std::__mbstate_t&rang;, int)
<LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::basic_filebuf&lang;wchar_t, std::char_traits&lang;wchar_t&rang;&rang;::xsputn(const wchar_t*, long)
<LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::basic_filebuf&lang;wchar_t, std::char_traits&lang;wchar_t&rang;&rang;::uflow()
<LI><a href="#[380]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::basic_filebuf&lang;wchar_t, std::char_traits&lang;wchar_t&rang;&rang;::close()
<LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::basic_filebuf&lang;wchar_t, std::char_traits&lang;wchar_t&rang;&rang;::sync()
</UL>

<P><STRONG><a name="[350]"></a>std::fpos&lang;std::__mbstate_t&rang;::operator ==(const std::fpos&lang;std::__mbstate_t&rang;&) const</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, ios.o(t._ZNKSt4fposISt11__mbstate_tEeqERKS1_))
<BR><BR>[Called By]<UL><LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::basic_filebuf&lang;wchar_t, std::char_traits&lang;wchar_t&rang;&rang;::showmanyc()
<LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::basic_filebuf&lang;wchar_t, std::char_traits&lang;wchar_t&rang;&rang;::pbackfail(int)
<LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::basic_filebuf&lang;wchar_t, std::char_traits&lang;wchar_t&rang;&rang;::seekpos(std::fpos&lang;std::__mbstate_t&rang;, int)
<LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::basic_filebuf&lang;wchar_t, std::char_traits&lang;wchar_t&rang;&rang;::sync()
<LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::basic_filebuf&lang;char, std::char_traits&lang;char&rang;&rang;::showmanyc()
<LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::basic_filebuf&lang;char, std::char_traits&lang;char&rang;&rang;::pbackfail(int)
<LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::basic_filebuf&lang;char, std::char_traits&lang;char&rang;&rang;::seekpos(std::fpos&lang;std::__mbstate_t&rang;, int)
<LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::basic_filebuf&lang;char, std::char_traits&lang;char&rang;&rang;::sync()
<LI><a href="#[34f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::fpos&lang;std::__mbstate_t&rang;::operator !=(const std::fpos&lang;std::__mbstate_t&rang;&) const
</UL>

<P><STRONG><a name="[34d]"></a>std::fpos&lang;std::__mbstate_t&rang;::operator -(const std::fpos&lang;std::__mbstate_t&rang;&) const</STRONG> (Thumb, 30 bytes, Stack size 24 bytes, ios.o(t._ZNKSt4fposISt11__mbstate_tEmiERKS1_))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = std::fpos&lang;std::__mbstate_t&rang;::operator -(const std::fpos&lang;std::__mbstate_t&rang;&) const
</UL>
<BR>[Calls]<UL><LI><a href="#[34e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::fpos&lang;std::__mbstate_t&rang;::fpos(const std::fpos&lang;std::__mbstate_t&rang;&)
</UL>
<BR>[Called By]<UL><LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::basic_filebuf&lang;wchar_t, std::char_traits&lang;wchar_t&rang;&rang;::showmanyc()
<LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::basic_filebuf&lang;char, std::char_traits&lang;char&rang;&rang;::showmanyc()
</UL>

<P><STRONG><a name="[34f]"></a>std::fpos&lang;std::__mbstate_t&rang;::operator !=(const std::fpos&lang;std::__mbstate_t&rang;&) const</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, ios.o(t._ZNKSt4fposISt11__mbstate_tEneERKS1_))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = std::fpos&lang;std::__mbstate_t&rang;::operator !=(const std::fpos&lang;std::__mbstate_t&rang;&) const
</UL>
<BR>[Calls]<UL><LI><a href="#[350]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::fpos&lang;std::__mbstate_t&rang;::operator ==(const std::fpos&lang;std::__mbstate_t&rang;&) const
</UL>
<BR>[Called By]<UL><LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::basic_filebuf&lang;wchar_t, std::char_traits&lang;wchar_t&rang;&rang;::showmanyc()
<LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::basic_filebuf&lang;wchar_t, std::char_traits&lang;wchar_t&rang;&rang;::seekoff(long, std::ios_base::_C_seekdir, int)
<LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::basic_filebuf&lang;char, std::char_traits&lang;char&rang;&rang;::showmanyc()
<LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::basic_filebuf&lang;char, std::char_traits&lang;char&rang;&rang;::seekoff(long, std::ios_base::_C_seekdir, int)
</UL>

<P><STRONG><a name="[351]"></a>std::fpos&lang;std::__mbstate_t&rang;::operator +(long) const</STRONG> (Thumb, 28 bytes, Stack size 24 bytes, ios.o(t._ZNKSt4fposISt11__mbstate_tEplEl))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = std::fpos&lang;std::__mbstate_t&rang;::operator +(long) const
</UL>
<BR>[Calls]<UL><LI><a href="#[352]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::fpos&lang;std::__mbstate_t&rang;::operator +=(long)
<LI><a href="#[34e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::fpos&lang;std::__mbstate_t&rang;::fpos(const std::fpos&lang;std::__mbstate_t&rang;&)
</UL>
<BR>[Called By]<UL><LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::basic_filebuf&lang;wchar_t, std::char_traits&lang;wchar_t&rang;&rang;::sync()
<LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::basic_filebuf&lang;char, std::char_traits&lang;char&rang;&rang;::sync()
</UL>

<P><STRONG><a name="[342]"></a>std::less&lang;int&rang;::operator ()(const int&, const int&) const</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, main.o(t._ZNKSt4lessIiEclERKiS2_))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = std::less&lang;int&rang;::operator ()(const int&, const int&) const
</UL>
<BR>[Called By]<UL><LI><a href="#[343]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rb_tree&lang;int, std::pair&lang;const int, int&rang;, __rw::__select1st&lang;std::pair&lang;const int, int&rang;, int&rang;, std::less&lang;int&rang;, std::allocator&lang;std::pair&lang;const int, int&rang;&rang;&rang;::_C_insert(__rw::__rw_rb_tree_node&lang;std::allocator&lang;std::pair&lang;const int, int&rang;&rang;, std::pair&lang;const int, int&rang;, int, __rw::__select1st&lang;std::pair&lang;const int, int&rang;, int&rang;&rang;*, __rw::__rw_rb_tree_node&lang;std::allocator&lang;std::pair&lang;const int, int&rang;&rang;, std::pair&lang;const int, int&rang;, int, __rw::__select1st&lang;std::pair&lang;const int, int&rang;, int&rang;&rang;*, const std::pair&lang;const int, int&rang;&)
<LI><a href="#[340]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rb_tree&lang;int, std::pair&lang;const int, int&rang;, __rw::__select1st&lang;std::pair&lang;const int, int&rang;, int&rang;, std::less&lang;int&rang;, std::allocator&lang;std::pair&lang;const int, int&rang;&rang;&rang;::insert(const std::pair&lang;const int, int&rang;&)
</UL>

<P><STRONG><a name="[136]"></a>std::vector&lang;int, std::allocator&lang;int&rang;&rang;::size() const</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, main.o(t._ZNKSt6vectorIiSaIiEE4sizeEv))
<BR><BR>[Called By]<UL><LI><a href="#[388]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::vector&lang;int, std::allocator&lang;int&rang;&rang;::_C_insert_aux(int*, const int&)
<LI><a href="#[135]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;stl_test()
</UL>

<P><STRONG><a name="[389]"></a>std::vector&lang;int, std::allocator&lang;int&rang;&rang;::capacity() const</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, main.o(t._ZNKSt6vectorIiSaIiEE8capacityEv))
<BR><BR>[Called By]<UL><LI><a href="#[388]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::vector&lang;int, std::allocator&lang;int&rang;&rang;::_C_insert_aux(int*, const int&)
</UL>

<P><STRONG><a name="[353]"></a>std::collate&lang;char&rang;::do_compare(const char*, const char*, const char*, const char*) const</STRONG> (Thumb, 94 bytes, Stack size 40 bytes, char.o(t._ZNKSt7collateIcE10do_compareEPKcS2_S2_S2_), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[354]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rw_collate_data&lang;char&rang;::_C_coll_order(char) const
</UL>

<P><STRONG><a name="[355]"></a>std::collate&lang;char&rang;::do_transform(const char*, const char*) const</STRONG> (Thumb, 64 bytes, Stack size 32 bytes, char.o(t._ZNKSt7collateIcE12do_transformEPKcS2_), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[2cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;::basic_string(const char*, unsigned, const std::allocator&lang;char&rang;&)
<LI><a href="#[2cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;::begin()
<LI><a href="#[354]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rw_collate_data&lang;char&rang;::_C_coll_order(char) const
<LI><a href="#[15a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::allocator&lang;char&rang;::allocator()
</UL>

<P><STRONG><a name="[cf]"></a>std::messages&lang;char&rang;::do_get(int, int, int, const std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;&) const</STRONG> (Thumb, 132 bytes, Stack size 40 bytes, rwstdexcept.o(t._ZNKSt8messagesIcE6do_getEiiiRKSs))
<BR><BR>[Stack]<UL><LI>Max Depth = 872 + Unknown Stack Size
<LI>Call Chain = std::messages&lang;char&rang;::do_get(int, int, int, const std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;&) const &rArr; std::locale::_C_make_facet(const std::locale::id&, bool, int, __rw::__rw_facet_base*(*)(int, const char*, unsigned)) const &rArr; __rw::__rw_throw(int, ...) &rArr; std::__rw_exception::_C_vformat(int, std::__va_list) &rArr; __rw::__rw_vfmatstr(char*, unsigned, int, std::__va_list) &rArr; std::locale::locale() &rArr; std::locale::_C_init() &rArr; __rw::__rw_locale_imp::__rw_locale_imp(const char*, unsigned, unsigned) &rArr; __aeabi_vec_new_cookie &rArr; __cxa_vec_new &rArr; __ARM_array_new_general &rArr; __cxa_rethrow &rArr; _Unwind_RaiseException &rArr; __ARM_Unwind_RaiseException &rArr; malloc &rArr; _malloc_internal &rArr; __Heap_Full &rArr; __Heap_ProvideMemory &rArr; _free_internal &rArr; _mutex_release
</UL>
<BR>[Calls]<UL><LI><a href="#[2d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::locale::_C_make_facet(const std::locale::id&, bool, int, __rw::__rw_facet_base*(*)(int, const char*, unsigned)) const
<LI><a href="#[28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;::~basic_string()
<LI><a href="#[294]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;::basic_string(const std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;&)
<LI><a href="#[15a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::allocator&lang;char&rang;::allocator()
<LI><a href="#[2d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__rw_messages_base::_C_get_message(int, int, int) const
<LI><a href="#[2d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__rw_messages_base::_C_get_locale(int) const
<LI><a href="#[293]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;::basic_string(const char*, const std::allocator&lang;char&rang;&)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> rwstdexcept.o(.constdata__ZTVSt8messagesIcE)
</UL>
<P><STRONG><a name="[ce]"></a>std::messages&lang;char&rang;::do_open(const std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;&, const std::locale&) const</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, rwstdexcept.o(t._ZNKSt8messagesIcE7do_openERKSsRKSt6locale))
<BR><BR>[Stack]<UL><LI>Max Depth = 704 + Unknown Stack Size
<LI>Call Chain = std::messages&lang;char&rang;::do_open(const std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;&, const std::locale&) const &rArr; std::__rw_messages_base::_C_cat_open(const std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;&, const std::locale&) const &rArr; __rw::__rw_locale_vector&lang;std::__rw_open_cat_data&rang;::resize(unsigned) &rArr; std::__rw_open_cat_data::__rw_open_cat_data() &rArr; std::locale::classic() &rArr; std::locale::locale(__rw::__rw_locale_imp*) &rArr; std::locale::_C_init() &rArr; __rw::__rw_locale_imp::__rw_locale_imp(const char*, unsigned, unsigned) &rArr; __aeabi_vec_new_cookie &rArr; __cxa_vec_new &rArr; __ARM_array_new_general &rArr; __cxa_rethrow &rArr; _Unwind_RaiseException &rArr; __ARM_Unwind_RaiseException &rArr; malloc &rArr; _malloc_internal &rArr; __Heap_Full &rArr; __Heap_ProvideMemory &rArr; _free_internal &rArr; _mutex_release
</UL>
<BR>[Calls]<UL><LI><a href="#[2cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__rw_messages_base::_C_cat_open(const std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;&, const std::locale&) const
</UL>
<BR>[Address Reference Count : 1]<UL><LI> rwstdexcept.o(.constdata__ZTVSt8messagesIcE)
</UL>
<P><STRONG><a name="[356]"></a>std::numpunct&lang;char&rang;::do_grouping() const</STRONG> (Thumb, 20 bytes, Stack size 16 bytes, main.o(t._ZNKSt8numpunctIcE11do_groupingEv), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[294]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;::basic_string(const std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;&)
</UL>

<P><STRONG><a name="[357]"></a>std::numpunct&lang;char&rang;::do_truename() const</STRONG> (Thumb, 20 bytes, Stack size 16 bytes, main.o(t._ZNKSt8numpunctIcE11do_truenameEv), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[294]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;::basic_string(const std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;&)
</UL>

<P><STRONG><a name="[358]"></a>std::numpunct&lang;char&rang;::do_falsename() const</STRONG> (Thumb, 20 bytes, Stack size 16 bytes, main.o(t._ZNKSt8numpunctIcE12do_falsenameEv), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[294]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;::basic_string(const std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;&)
</UL>

<P><STRONG><a name="[31f]"></a>std::basic_ios&lang;char, std::char_traits&lang;char&rang;&rang;::rdbuf() const</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, main.o(t._ZNKSt9basic_iosIcSt11char_traitsIcEE5rdbufEv))
<BR><BR>[Called By]<UL><LI><a href="#[38e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::basic_ios&lang;char, std::char_traits&lang;char&rang;&rang;::clear(int, int)
<LI><a href="#[35f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::basic_ostream&lang;char, std::char_traits&lang;char&rang;&rang;::_C_opfx()
<LI><a href="#[320]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::basic_ostream&lang;char, std::char_traits&lang;char&rang;&rang;::sentry::~sentry()
<LI><a href="#[31d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::basic_ostream&lang;char, std::char_traits&lang;char&rang;&rang;::sentry::sentry(std::basic_ostream&lang;char, std::char_traits&lang;char&rang;&rang;&)
<LI><a href="#[31e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::basic_ostream&lang;char, std::char_traits&lang;char&rang;&rang;::_C_pad(long)
<LI><a href="#[35c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::basic_ostream&lang;char, std::char_traits&lang;char&rang;&rang;::flush()
<LI><a href="#[31c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rw_insert&lang;char, std::char_traits&lang;char&rang;, char&rang;(std::basic_ostream&lang;T1, T2&rang;&, T3*, long, long)
</UL>

<P><STRONG><a name="[359]"></a>std::basic_ios&lang;char, std::char_traits&lang;char&rang;&rang;::widen(char) const</STRONG> (Thumb, 82 bytes, Stack size 48 bytes, main.o(t._ZNKSt9basic_iosIcSt11char_traitsIcEE5widenEc))
<BR><BR>[Stack]<UL><LI>Max Depth = 912 + Unknown Stack Size
<LI>Call Chain = std::basic_ios&lang;char, std::char_traits&lang;char&rang;&rang;::widen(char) const &rArr; std::locale::_C_use_facet(const std::locale::id&, bool, int, __rw::__rw_facet_base*(*)(int, const char*, unsigned)) const &rArr; std::locale::_C_make_facet(const std::locale::id&, bool, int, __rw::__rw_facet_base*(*)(int, const char*, unsigned)) const &rArr; __rw::__rw_throw(int, ...) &rArr; std::__rw_exception::_C_vformat(int, std::__va_list) &rArr; __rw::__rw_vfmatstr(char*, unsigned, int, std::__va_list) &rArr; std::locale::locale() &rArr; std::locale::_C_init() &rArr; __rw::__rw_locale_imp::__rw_locale_imp(const char*, unsigned, unsigned) &rArr; __aeabi_vec_new_cookie &rArr; __cxa_vec_new &rArr; __ARM_array_new_general &rArr; __cxa_rethrow &rArr; _Unwind_RaiseException &rArr; __ARM_Unwind_RaiseException &rArr; malloc &rArr; _malloc_internal &rArr; __Heap_Full &rArr; __Heap_ProvideMemory &rArr; _free_internal &rArr; _mutex_release
</UL>
<BR>[Calls]<UL><LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::locale::~locale()
<LI><a href="#[2eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::locale::locale(const std::locale&)
<LI><a href="#[2d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::locale::_C_use_facet(const std::locale::id&, bool, int, __rw::__rw_facet_base*(*)(int, const char*, unsigned)) const
</UL>
<BR>[Called By]<UL><LI><a href="#[24]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::endl&lang;char, std::char_traits&lang;char&rang;&rang;(std::basic_ostream&lang;T1, T2&rang;&)
</UL>

<P><STRONG><a name="[367]"></a>std::allocator&lang;__rw::__string_ref&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;&rang;::allocator&lang;char&rang;(const std::allocator&lang;T1&rang;&)</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, main.o(t._ZNSaIN4__rw12__string_refIcSt11char_traitsIcESaIcEEEEC1IcEERKSaIT_E))
<BR><BR>[Called By]<UL><LI><a href="#[362]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;::_C_unlink()
</UL>

<P><STRONG><a name="[456]"></a>std::allocator&lang;__rw::__string_ref&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;&rang;::allocator__sub_object&lang;char&rang;(const std::allocator&lang;T1&rang;&)</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, main.o(t._ZNSaIN4__rw12__string_refIcSt11char_traitsIcESaIcEEEEC1IcEERKSaIT_E), UNUSED)

<P><STRONG><a name="[337]"></a>std::allocator&lang;__rw::__rw_rb_tree_node&lang;std::allocator&lang;std::pair&lang;const int, int&rang;&rang;, std::pair&lang;const int, int&rang;, int, __rw::__select1st&lang;std::pair&lang;const int, int&rang;, int&rang;&rang;&rang;::allocator&lang;std::pair&lang;const int, int&rang;&rang;(const std::allocator&lang;T1&rang;&)</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, main.o(t._ZNSaIN4__rw17__rw_rb_tree_nodeISaISt4pairIKiiEES3_iNS_11__select1stIS3_iEEEEEC1IS3_EERKSaIT_E))
<BR><BR>[Called By]<UL><LI><a href="#[339]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rb_tree&lang;int, std::pair&lang;const int, int&rang;, __rw::__select1st&lang;std::pair&lang;const int, int&rang;, int&rang;, std::less&lang;int&rang;, std::allocator&lang;std::pair&lang;const int, int&rang;&rang;&rang;::_C_deallocate_buffers()
<LI><a href="#[32d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rb_tree&lang;int, std::pair&lang;const int, int&rang;, __rw::__select1st&lang;std::pair&lang;const int, int&rang;, int&rang;, std::less&lang;int&rang;, std::allocator&lang;std::pair&lang;const int, int&rang;&rang;&rang;::_C_add_new_buffer()
</UL>

<P><STRONG><a name="[457]"></a>std::allocator&lang;__rw::__rw_rb_tree_node&lang;std::allocator&lang;std::pair&lang;const int, int&rang;&rang;, std::pair&lang;const int, int&rang;, int, __rw::__select1st&lang;std::pair&lang;const int, int&rang;, int&rang;&rang;&rang;::allocator__sub_object&lang;std::pair&lang;const int, int&rang;&rang;(const std::allocator&lang;T1&rang;&)</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, main.o(t._ZNSaIN4__rw17__rw_rb_tree_nodeISaISt4pairIKiiEES3_iNS_11__select1stIS3_iEEEEEC1IS3_EERKSaIT_E), UNUSED)

<P><STRONG><a name="[338]"></a>std::allocator&lang;__rw::__rb_tree&lang;int, std::pair&lang;const int, int&rang;, __rw::__select1st&lang;std::pair&lang;const int, int&rang;, int&rang;, std::less&lang;int&rang;, std::allocator&lang;std::pair&lang;const int, int&rang;&rang;&rang;::_C_rb_tree_node_buffer&rang;::deallocate(__rw::__rb_tree&lang;int, std::pair&lang;const int, int&rang;, __rw::__select1st&lang;std::pair&lang;const int, int&rang;, int&rang;, std::less&lang;int&rang;, std::allocator&lang;std::pair&lang;const int, int&rang;&rang;&rang;::_C_rb_tree_node_buffer*, unsigned)</STRONG> (Thumb, 20 bytes, Stack size 16 bytes, main.o(t._ZNSaIN4__rw9__rb_treeIiSt4pairIKiiENS_11__select1stIS3_iEESt4lessIiESaIS3_EE22_C_rb_tree_node_bufferEE10deallocateEPSA_j))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = std::allocator&lang;__rw::__rb_tree&lang;int, std::pair&lang;const int, int&rang;, __rw::__select1st&lang;std::pair&lang;const int, int&rang;, int&rang;, std::less&lang;int&rang;, std::allocator&lang;std::pair&lang;const int, int&rang;&rang;&rang;::_C_rb_tree_node_buffer&rang;::deallocate(__rw::__rb_tree&lang;int, std::pair&lang;const int, int&rang;, __rw::__select1st&lang;std::pair&lang;const int, int&rang;, int&rang;, std::less&lang;int&rang;, std::allocator&lang;std::pair&lang;const int, int&rang;&rang;&rang;::_C_rb_tree_node_buffer*, unsigned) &rArr; __rw::__rw_deallocate(void*, unsigned, int) &rArr; operator delete (void*) &rArr; free &rArr; _free_internal &rArr; _mutex_release
</UL>
<BR>[Calls]<UL><LI><a href="#[297]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rw_deallocate(void*, unsigned, int)
</UL>
<BR>[Called By]<UL><LI><a href="#[339]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rb_tree&lang;int, std::pair&lang;const int, int&rang;, __rw::__select1st&lang;std::pair&lang;const int, int&rang;, int&rang;, std::less&lang;int&rang;, std::allocator&lang;std::pair&lang;const int, int&rang;&rang;&rang;::_C_deallocate_buffers()
<LI><a href="#[32d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rb_tree&lang;int, std::pair&lang;const int, int&rang;, __rw::__select1st&lang;std::pair&lang;const int, int&rang;, int&rang;, std::less&lang;int&rang;, std::allocator&lang;std::pair&lang;const int, int&rang;&rang;&rang;::_C_add_new_buffer()
</UL>

<P><STRONG><a name="[336]"></a>std::allocator&lang;__rw::__rb_tree&lang;int, std::pair&lang;const int, int&rang;, __rw::__select1st&lang;std::pair&lang;const int, int&rang;, int&rang;, std::less&lang;int&rang;, std::allocator&lang;std::pair&lang;const int, int&rang;&rang;&rang;::_C_rb_tree_node_buffer&rang;::allocator&lang;std::pair&lang;const int, int&rang;&rang;(const std::allocator&lang;T1&rang;&)</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, main.o(t._ZNSaIN4__rw9__rb_treeIiSt4pairIKiiENS_11__select1stIS3_iEESt4lessIiESaIS3_EE22_C_rb_tree_node_bufferEEC1IS3_EERKSaIT_E))
<BR><BR>[Called By]<UL><LI><a href="#[339]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rb_tree&lang;int, std::pair&lang;const int, int&rang;, __rw::__select1st&lang;std::pair&lang;const int, int&rang;, int&rang;, std::less&lang;int&rang;, std::allocator&lang;std::pair&lang;const int, int&rang;&rang;&rang;::_C_deallocate_buffers()
<LI><a href="#[32d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rb_tree&lang;int, std::pair&lang;const int, int&rang;, __rw::__select1st&lang;std::pair&lang;const int, int&rang;, int&rang;, std::less&lang;int&rang;, std::allocator&lang;std::pair&lang;const int, int&rang;&rang;&rang;::_C_add_new_buffer()
</UL>

<P><STRONG><a name="[458]"></a>std::allocator&lang;__rw::__rb_tree&lang;int, std::pair&lang;const int, int&rang;, __rw::__select1st&lang;std::pair&lang;const int, int&rang;, int&rang;, std::less&lang;int&rang;, std::allocator&lang;std::pair&lang;const int, int&rang;&rang;&rang;::_C_rb_tree_node_buffer&rang;::allocator__sub_object&lang;std::pair&lang;const int, int&rang;&rang;(const std::allocator&lang;T1&rang;&)</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, main.o(t._ZNSaIN4__rw9__rb_treeIiSt4pairIKiiENS_11__select1stIS3_iEESt4lessIiESaIS3_EE22_C_rb_tree_node_bufferEEC1IS3_EERKSaIT_E), UNUSED)

<P><STRONG><a name="[345]"></a>std::allocator&lang;std::pair&lang;const int, int&rang;&rang;::allocator(const std::allocator&lang;std::pair&lang;const int, int&rang;&rang;&)</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, main.o(t._ZNSaISt4pairIKiiEEC1ERKS2_))
<BR><BR>[Called By]<UL><LI><a href="#[159]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rb_tree&lang;int, std::pair&lang;const int, int&rang;, __rw::__select1st&lang;std::pair&lang;const int, int&rang;, int&rang;, std::less&lang;int&rang;, std::allocator&lang;std::pair&lang;const int, int&rang;&rang;&rang;::__rb_tree(const std::less&lang;int&rang;&, bool, const std::allocator&lang;std::pair&lang;const int, int&rang;&rang;&)
</UL>

<P><STRONG><a name="[459]"></a>std::allocator&lang;std::pair&lang;const int, int&rang;&rang;::allocator__sub_object(const std::allocator&lang;std::pair&lang;const int, int&rang;&rang;&)</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, main.o(t._ZNSaISt4pairIKiiEEC1ERKS2_), UNUSED)

<P><STRONG><a name="[158]"></a>std::allocator&lang;std::pair&lang;const int, int&rang;&rang;::allocator()</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, main.o(t._ZNSaISt4pairIKiiEEC1Ev))
<BR><BR>[Called By]<UL><LI><a href="#[d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__sti___8_main_cpp
</UL>

<P><STRONG><a name="[45a]"></a>std::allocator&lang;std::pair&lang;const int, int&rang;&rang;::allocator__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, main.o(t._ZNSaISt4pairIKiiEEC1Ev), UNUSED)

<P><STRONG><a name="[15b]"></a>std::allocator&lang;char&rang;::allocator(const std::allocator&lang;char&rang;&)</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, main.o(t._ZNSaIcEC1ERKS_))
<BR><BR>[Called By]<UL><LI><a href="#[d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__sti___8_main_cpp
<LI><a href="#[2cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;::basic_string(const char*, unsigned, const std::allocator&lang;char&rang;&)
<LI><a href="#[294]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;::basic_string(const std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;&)
<LI><a href="#[298]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rw_locale_imp::_C_parse_name(__rw::__rw_locale_vector&lang;std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;&rang;&, const char*)
<LI><a href="#[278]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;::basic_string(const std::allocator&lang;char&rang;&)
<LI><a href="#[293]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;::basic_string(const char*, const std::allocator&lang;char&rang;&)
</UL>

<P><STRONG><a name="[45b]"></a>std::allocator&lang;char&rang;::allocator__sub_object(const std::allocator&lang;char&rang;&)</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, main.o(t._ZNSaIcEC1ERKS_), UNUSED)

<P><STRONG><a name="[15a]"></a>std::allocator&lang;char&rang;::allocator()</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, main.o(t._ZNSaIcEC1Ev))
<BR><BR>[Called By]<UL><LI><a href="#[d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__sti___8_main_cpp
<LI><a href="#[2db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::locale::name() const
<LI><a href="#[355]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::collate&lang;char&rang;::do_transform(const char*, const char*) const
<LI><a href="#[a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::collate_byname&lang;char&rang;::do_transform(const char*, const char*) const
<LI><a href="#[cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::messages&lang;char&rang;::do_get(int, int, int, const std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;&) const
<LI><a href="#[291]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rw_vfmatstr(char*, unsigned, int, std::__va_list)
<LI><a href="#[298]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rw_locale_imp::_C_parse_name(__rw::__rw_locale_vector&lang;std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;&rang;&, const char*)
<LI><a href="#[29b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rw_locale_imp::__rw_locale_imp(const char*, unsigned, unsigned)
<LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;&lang;Func5&rang;
</UL>

<P><STRONG><a name="[45c]"></a>std::allocator&lang;char&rang;::allocator__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, main.o(t._ZNSaIcEC1Ev), UNUSED)

<P><STRONG><a name="[35a]"></a>std::allocator&lang;int&rang;::deallocate(int*, unsigned)</STRONG> (Thumb, 20 bytes, Stack size 16 bytes, main.o(t._ZNSaIiE10deallocateEPij))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = std::allocator&lang;int&rang;::deallocate(int*, unsigned) &rArr; __rw::__rw_deallocate(void*, unsigned, int) &rArr; operator delete (void*) &rArr; free &rArr; _free_internal &rArr; _mutex_release
</UL>
<BR>[Calls]<UL><LI><a href="#[297]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rw_deallocate(void*, unsigned, int)
</UL>
<BR>[Called By]<UL><LI><a href="#[26]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::vector&lang;int, std::allocator&lang;int&rang;&rang;::~vector()
<LI><a href="#[388]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::vector&lang;int, std::allocator&lang;int&rang;&rang;::_C_insert_aux(int*, const int&)
</UL>

<P><STRONG><a name="[35b]"></a>std::allocator&lang;int&rang;::construct(int*, const int&)</STRONG> (Thumb, 36 bytes, Stack size 32 bytes, main.o(t._ZNSaIiE9constructEPiRKi))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = std::allocator&lang;int&rang;::construct(int*, const int&)
</UL>
<BR>[Calls]<UL><LI><a href="#[285]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;operator new(unsigned, void*)
</UL>
<BR>[Called By]<UL><LI><a href="#[38a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::uninitialized_copy&lang;int*, int*, std::allocator&lang;int&rang;&rang;(T1, T1, T2, T3&)
<LI><a href="#[137]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::vector&lang;int, std::allocator&lang;int&rang;&rang;::push_back(const int&)
<LI><a href="#[388]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::vector&lang;int, std::allocator&lang;int&rang;&rang;::_C_insert_aux(int*, const int&)
</UL>

<P><STRONG><a name="[157]"></a>std::allocator&lang;int&rang;::allocator(const std::allocator&lang;int&rang;&)</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, main.o(t._ZNSaIiEC1ERKS_))
<BR><BR>[Called By]<UL><LI><a href="#[d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__sti___8_main_cpp
</UL>

<P><STRONG><a name="[45d]"></a>std::allocator&lang;int&rang;::allocator__sub_object(const std::allocator&lang;int&rang;&)</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, main.o(t._ZNSaIiEC1ERKS_), UNUSED)

<P><STRONG><a name="[156]"></a>std::allocator&lang;int&rang;::allocator()</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, main.o(t._ZNSaIiEC1Ev))
<BR><BR>[Called By]<UL><LI><a href="#[d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__sti___8_main_cpp
</UL>

<P><STRONG><a name="[45e]"></a>std::allocator&lang;int&rang;::allocator__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, main.o(t._ZNSaIiEC1Ev), UNUSED)

<P><STRONG><a name="[35c]"></a>std::basic_ostream&lang;char, std::char_traits&lang;char&rang;&rang;::flush()</STRONG> (Thumb, 60 bytes, Stack size 16 bytes, main.o(t._ZNSo5flushEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 880 + Unknown Stack Size
<LI>Call Chain = std::basic_ostream&lang;char, std::char_traits&lang;char&rang;&rang;::flush() &rArr; std::basic_ios&lang;char, std::char_traits&lang;char&rang;&rang;::setstate(int) &rArr; std::basic_ios&lang;char, std::char_traits&lang;char&rang;&rang;::clear(int, int) &rArr; std::ios_base::_C_unsafe_clear(int, int) &rArr; __rw::__rw_throw(int, ...) &rArr; std::__rw_exception::_C_vformat(int, std::__va_list) &rArr; __rw::__rw_vfmatstr(char*, unsigned, int, std::__va_list) &rArr; std::locale::locale() &rArr; std::locale::_C_init() &rArr; __rw::__rw_locale_imp::__rw_locale_imp(const char*, unsigned, unsigned) &rArr; __aeabi_vec_new_cookie &rArr; __cxa_vec_new &rArr; __ARM_array_new_general &rArr; __cxa_rethrow &rArr; _Unwind_RaiseException &rArr; __ARM_Unwind_RaiseException &rArr; malloc &rArr; _malloc_internal &rArr; __Heap_Full &rArr; __Heap_ProvideMemory &rArr; _free_internal &rArr; _mutex_release
</UL>
<BR>[Calls]<UL><LI><a href="#[322]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::basic_ios&lang;char, std::char_traits&lang;char&rang;&rang;::setstate(int)
<LI><a href="#[35d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::basic_streambuf&lang;char, std::char_traits&lang;char&rang;&rang;::pubsync()
<LI><a href="#[31f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::basic_ios&lang;char, std::char_traits&lang;char&rang;&rang;::rdbuf() const
</UL>
<BR>[Called By]<UL><LI><a href="#[24]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::endl&lang;char, std::char_traits&lang;char&rang;&rang;(std::basic_ostream&lang;T1, T2&rang;&)
<LI><a href="#[35f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::basic_ostream&lang;char, std::char_traits&lang;char&rang;&rang;::_C_opfx()
</UL>

<P><STRONG><a name="[31e]"></a>std::basic_ostream&lang;char, std::char_traits&lang;char&rang;&rang;::_C_pad(long)</STRONG> (Thumb, 86 bytes, Stack size 32 bytes, main.o(t._ZNSo6_C_padEl))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = std::basic_ostream&lang;char, std::char_traits&lang;char&rang;&rang;::_C_pad(long) &rArr; std::basic_streambuf&lang;char, std::char_traits&lang;char&rang;&rang;::sputc(char)
</UL>
<BR>[Calls]<UL><LI><a href="#[35e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::basic_streambuf&lang;char, std::char_traits&lang;char&rang;&rang;::sputc(char)
<LI><a href="#[31f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::basic_ios&lang;char, std::char_traits&lang;char&rang;&rang;::rdbuf() const
</UL>
<BR>[Called By]<UL><LI><a href="#[31c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rw_insert&lang;char, std::char_traits&lang;char&rang;, char&rang;(std::basic_ostream&lang;T1, T2&rang;&, T3*, long, long)
</UL>

<P><STRONG><a name="[31d]"></a>std::basic_ostream&lang;char, std::char_traits&lang;char&rang;&rang;::sentry::sentry(std::basic_ostream&lang;char, std::char_traits&lang;char&rang;&rang;&)</STRONG> (Thumb, 86 bytes, Stack size 24 bytes, main.o(t._ZNSo6sentryC1ERSo))
<BR><BR>[Stack]<UL><LI>Max Depth = 952 + Unknown Stack Size
<LI>Call Chain = std::basic_ostream&lang;char, std::char_traits&lang;char&rang;&rang;::sentry::sentry(std::basic_ostream&lang;char, std::char_traits&lang;char&rang;&rang;&) &rArr; std::basic_ostream&lang;char, std::char_traits&lang;char&rang;&rang;::_C_opfx() &rArr; std::basic_ostream&lang;char, std::char_traits&lang;char&rang;&rang;::flush() &rArr; std::basic_ios&lang;char, std::char_traits&lang;char&rang;&rang;::setstate(int) &rArr; std::basic_ios&lang;char, std::char_traits&lang;char&rang;&rang;::clear(int, int) &rArr; std::ios_base::_C_unsafe_clear(int, int) &rArr; __rw::__rw_throw(int, ...) &rArr; std::__rw_exception::_C_vformat(int, std::__va_list) &rArr; __rw::__rw_vfmatstr(char*, unsigned, int, std::__va_list) &rArr; std::locale::locale() &rArr; std::locale::_C_init() &rArr; __rw::__rw_locale_imp::__rw_locale_imp(const char*, unsigned, unsigned) &rArr; __aeabi_vec_new_cookie &rArr; __cxa_vec_new &rArr; __ARM_array_new_general &rArr; __cxa_rethrow &rArr; _Unwind_RaiseException &rArr; __ARM_Unwind_RaiseException &rArr; malloc &rArr; _malloc_internal &rArr; __Heap_Full &rArr; __Heap_ProvideMemory &rArr; _free_internal &rArr; _mutex_release
</UL>
<BR>[Calls]<UL><LI><a href="#[35f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::basic_ostream&lang;char, std::char_traits&lang;char&rang;&rang;::_C_opfx()
<LI><a href="#[31f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::basic_ios&lang;char, std::char_traits&lang;char&rang;&rang;::rdbuf() const
</UL>
<BR>[Called By]<UL><LI><a href="#[31c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rw_insert&lang;char, std::char_traits&lang;char&rang;, char&rang;(std::basic_ostream&lang;T1, T2&rang;&, T3*, long, long)
</UL>

<P><STRONG><a name="[45f]"></a>std::basic_ostream&lang;char, std::char_traits&lang;char&rang;&rang;::sentry::sentry__sub_object(std::basic_ostream&lang;char, std::char_traits&lang;char&rang;&rang;&)</STRONG> (Thumb, 0 bytes, Stack size 24 bytes, main.o(t._ZNSo6sentryC1ERSo), UNUSED)

<P><STRONG><a name="[320]"></a>std::basic_ostream&lang;char, std::char_traits&lang;char&rang;&rang;::sentry::~sentry()</STRONG> (Thumb, 92 bytes, Stack size 16 bytes, main.o(t._ZNSo6sentryD1Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 880 + Unknown Stack Size
<LI>Call Chain = std::basic_ostream&lang;char, std::char_traits&lang;char&rang;&rang;::sentry::~sentry() &rArr; std::basic_ios&lang;char, std::char_traits&lang;char&rang;&rang;::setstate(int, int) &rArr; std::basic_ios&lang;char, std::char_traits&lang;char&rang;&rang;::clear(int, int) &rArr; std::ios_base::_C_unsafe_clear(int, int) &rArr; __rw::__rw_throw(int, ...) &rArr; std::__rw_exception::_C_vformat(int, std::__va_list) &rArr; __rw::__rw_vfmatstr(char*, unsigned, int, std::__va_list) &rArr; std::locale::locale() &rArr; std::locale::_C_init() &rArr; __rw::__rw_locale_imp::__rw_locale_imp(const char*, unsigned, unsigned) &rArr; __aeabi_vec_new_cookie &rArr; __cxa_vec_new &rArr; __ARM_array_new_general &rArr; __cxa_rethrow &rArr; _Unwind_RaiseException &rArr; __ARM_Unwind_RaiseException &rArr; malloc &rArr; _malloc_internal &rArr; __Heap_Full &rArr; __Heap_ProvideMemory &rArr; _free_internal &rArr; _mutex_release
</UL>
<BR>[Calls]<UL><LI><a href="#[321]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::basic_ios&lang;char, std::char_traits&lang;char&rang;&rang;::setstate(int, int)
<LI><a href="#[35d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::basic_streambuf&lang;char, std::char_traits&lang;char&rang;&rang;::pubsync()
<LI><a href="#[31f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::basic_ios&lang;char, std::char_traits&lang;char&rang;&rang;::rdbuf() const
<LI><a href="#[2c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::basic_ostream&lang;char, std::char_traits&lang;char&rang;&rang;::_C_is_std() const
<LI><a href="#[1ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::uncaught_exception()
</UL>
<BR>[Called By]<UL><LI><a href="#[31c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rw_insert&lang;char, std::char_traits&lang;char&rang;, char&rang;(std::basic_ostream&lang;T1, T2&rang;&, T3*, long, long)
</UL>

<P><STRONG><a name="[460]"></a>std::basic_ostream&lang;char, std::char_traits&lang;char&rang;&rang;::sentry::~sentry__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 16 bytes, main.o(t._ZNSo6sentryD1Ev), UNUSED)

<P><STRONG><a name="[35f]"></a>std::basic_ostream&lang;char, std::char_traits&lang;char&rang;&rang;::_C_opfx()</STRONG> (Thumb, 168 bytes, Stack size 48 bytes, main.o(t._ZNSo7_C_opfxEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 928 + Unknown Stack Size
<LI>Call Chain = std::basic_ostream&lang;char, std::char_traits&lang;char&rang;&rang;::_C_opfx() &rArr; std::basic_ostream&lang;char, std::char_traits&lang;char&rang;&rang;::flush() &rArr; std::basic_ios&lang;char, std::char_traits&lang;char&rang;&rang;::setstate(int) &rArr; std::basic_ios&lang;char, std::char_traits&lang;char&rang;&rang;::clear(int, int) &rArr; std::ios_base::_C_unsafe_clear(int, int) &rArr; __rw::__rw_throw(int, ...) &rArr; std::__rw_exception::_C_vformat(int, std::__va_list) &rArr; __rw::__rw_vfmatstr(char*, unsigned, int, std::__va_list) &rArr; std::locale::locale() &rArr; std::locale::_C_init() &rArr; __rw::__rw_locale_imp::__rw_locale_imp(const char*, unsigned, unsigned) &rArr; __aeabi_vec_new_cookie &rArr; __cxa_vec_new &rArr; __ARM_array_new_general &rArr; __cxa_rethrow &rArr; _Unwind_RaiseException &rArr; __ARM_Unwind_RaiseException &rArr; malloc &rArr; _malloc_internal &rArr; __Heap_Full &rArr; __Heap_ProvideMemory &rArr; _free_internal &rArr; _mutex_release
</UL>
<BR>[Calls]<UL><LI><a href="#[1d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fflush
<LI><a href="#[35c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::basic_ostream&lang;char, std::char_traits&lang;char&rang;&rang;::flush()
<LI><a href="#[31f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::basic_ios&lang;char, std::char_traits&lang;char&rang;&rang;::rdbuf() const
<LI><a href="#[2c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::basic_ostream&lang;char, std::char_traits&lang;char&rang;&rang;::_C_is_std() const
<LI><a href="#[2ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::basic_ostream&lang;char, std::char_traits&lang;char&rang;&rang;::_C_is_cout() const
</UL>
<BR>[Called By]<UL><LI><a href="#[31d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::basic_ostream&lang;char, std::char_traits&lang;char&rang;&rang;::sentry::sentry(std::basic_ostream&lang;char, std::char_traits&lang;char&rang;&rang;&)
</UL>

<P><STRONG><a name="[301]"></a>std::basic_ostream&lang;char, std::char_traits&lang;char&rang;&rang;::basic_ostream(std::basic_streambuf&lang;char, std::char_traits&lang;char&rang;&rang;*)</STRONG> (Thumb, 46 bytes, Stack size 16 bytes, ios.o(t._ZNSoC1EPSt15basic_streambufIcSt11char_traitsIcEE))
<BR><BR>[Stack]<UL><LI>Max Depth = 904 + Unknown Stack Size
<LI>Call Chain = std::basic_ostream&lang;char, std::char_traits&lang;char&rang;&rang;::basic_ostream(std::basic_streambuf&lang;char, std::char_traits&lang;char&rang;&rang;*) &rArr; std::basic_ios&lang;char, std::char_traits&lang;char&rang;&rang;::init(std::basic_streambuf&lang;char, std::char_traits&lang;char&rang;&rang;*) &rArr; std::locale::_C_use_facet(const std::locale::id&, bool, int, __rw::__rw_facet_base*(*)(int, const char*, unsigned)) const &rArr; std::locale::_C_make_facet(const std::locale::id&, bool, int, __rw::__rw_facet_base*(*)(int, const char*, unsigned)) const &rArr; __rw::__rw_throw(int, ...) &rArr; std::__rw_exception::_C_vformat(int, std::__va_list) &rArr; __rw::__rw_vfmatstr(char*, unsigned, int, std::__va_list) &rArr; std::locale::locale() &rArr; std::locale::_C_init() &rArr; __rw::__rw_locale_imp::__rw_locale_imp(const char*, unsigned, unsigned) &rArr; __aeabi_vec_new_cookie &rArr; __cxa_vec_new &rArr; __ARM_array_new_general &rArr; __cxa_rethrow &rArr; _Unwind_RaiseException &rArr; __ARM_Unwind_RaiseException &rArr; malloc &rArr; _malloc_internal &rArr; __Heap_Full &rArr; __Heap_ProvideMemory &rArr; _free_internal &rArr; _mutex_release
</UL>
<BR>[Calls]<UL><LI><a href="#[2ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::basic_ios&lang;char, std::char_traits&lang;char&rang;&rang;::basic_ios()
<LI><a href="#[300]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::basic_ios&lang;char, std::char_traits&lang;char&rang;&rang;::init(std::basic_streambuf&lang;char, std::char_traits&lang;char&rang;&rang;*)
</UL>
<BR>[Called By]<UL><LI><a href="#[154]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::ios_base::Init::Init()
</UL>

<P><STRONG><a name="[142]"></a>std::basic_ostream&lang;char, std::char_traits&lang;char&rang;&rang;::operator &lang;&lang;(std::basic_ostream&lang;char, std::char_traits&lang;char&rang;&rang;&(*)(std::basic_ostream&lang;char, std::char_traits&lang;char&rang;&rang;&))</STRONG> (Thumb, 12 bytes, Stack size 16 bytes, main.o(t._ZNSolsEPFRSoS_E))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = std::basic_ostream&lang;char, std::char_traits&lang;char&rang;&rang;::operator &lang;&lang;(std::basic_ostream&lang;char, std::char_traits&lang;char&rang;&rang;&(*)(std::basic_ostream&lang;char, std::char_traits&lang;char&rang;&rang;&))
</UL>
<BR>[Called By]<UL><LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[135]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;stl_test()
</UL>

<P><STRONG><a name="[299]"></a>std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;::_C_allocate(unsigned, unsigned, unsigned)</STRONG> (Thumb, 50 bytes, Stack size 40 bytes, locale.o(t._ZNSs11_C_allocateEjjj))
<BR><BR>[Stack]<UL><LI>Max Depth = 280 + Unknown Stack Size
<LI>Call Chain = std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;::_C_allocate(unsigned, unsigned, unsigned) &rArr; std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;::_C_getRep(unsigned, unsigned) &rArr;  __rw::__rw_throw(int, ...) (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[360]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::max&lang;unsigned&rang;(const T1&, const T1&)
<LI><a href="#[361]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;::_C_getRep(unsigned, unsigned)
</UL>
<BR>[Called By]<UL><LI><a href="#[298]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rw_locale_imp::_C_parse_name(__rw::__rw_locale_vector&lang;std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;&rang;&, const char*)
<LI><a href="#[293]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;::basic_string(const char*, const std::allocator&lang;char&rang;&)
</UL>

<P><STRONG><a name="[2cc]"></a>std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;::begin()</STRONG> (Thumb, 84 bytes, Stack size 24 bytes, char.o(t._ZNSs5beginEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 264 + Unknown Stack Size
<LI>Call Chain = std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;::begin() &rArr; std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;::_C_getRep(unsigned, unsigned) &rArr;  __rw::__rw_throw(int, ...) (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[362]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;::_C_unlink()
<LI><a href="#[361]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;::_C_getRep(unsigned, unsigned)
<LI><a href="#[29a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::char_traits&lang;char&rang;::copy(char*, const char*, unsigned)
</UL>
<BR>[Called By]<UL><LI><a href="#[355]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::collate&lang;char&rang;::do_transform(const char*, const char*) const
<LI><a href="#[a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::collate_byname&lang;char&rang;::do_transform(const char*, const char*) const
</UL>

<P><STRONG><a name="[15c]"></a>std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;::_C_null()</STRONG> (Thumb, 10 bytes, Stack size 8 bytes, main.o(t._ZNSs7_C_nullEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;::_C_null()
</UL>
<BR>[Calls]<UL><LI><a href="#[363]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__string_ref&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;::data()
</UL>
<BR>[Called By]<UL><LI><a href="#[d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__sti___8_main_cpp
<LI><a href="#[146]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;::operator =(const char*)
<LI><a href="#[362]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;::_C_unlink()
<LI><a href="#[364]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;::replace(unsigned, unsigned, const char*, unsigned, unsigned, unsigned)
</UL>

<P><STRONG><a name="[14b]"></a>std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;::replace(unsigned, unsigned, const char*, unsigned)</STRONG> (Thumb, 40 bytes, Stack size 40 bytes, main.o(t._ZNSs7replaceEjjPKcj))
<BR><BR>[Stack]<UL><LI>Max Depth = 360 + Unknown Stack Size
<LI>Call Chain = std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;::replace(unsigned, unsigned, const char*, unsigned) &rArr; std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;::replace(unsigned, unsigned, const char*, unsigned, unsigned, unsigned) &rArr;  __rw::__rw_throw(int, ...) (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[364]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;::replace(unsigned, unsigned, const char*, unsigned, unsigned, unsigned)
</UL>
<BR>[Called By]<UL><LI><a href="#[29d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;::operator =(const std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;&)
<LI><a href="#[146]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;::operator =(const char*)
<LI><a href="#[135]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;stl_test()
</UL>

<P><STRONG><a name="[364]"></a>std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;::replace(unsigned, unsigned, const char*, unsigned, unsigned, unsigned)</STRONG> (Thumb, 564 bytes, Stack size 80 bytes, main.o(t._ZNSs7replaceEjjPKcjjj))
<BR><BR>[Stack]<UL><LI>Max Depth = 320 + Unknown Stack Size
 + In Cycle
<LI>Call Chain = std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;::replace(unsigned, unsigned, const char*, unsigned, unsigned, unsigned) &rArr;  __rw::__rw_throw(int, ...) (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[284]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rw_throw(int, ...)
<LI><a href="#[362]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;::_C_unlink()
<LI><a href="#[361]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;::_C_getRep(unsigned, unsigned)
<LI><a href="#[15c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;::_C_null()
<LI><a href="#[348]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;::capacity() const
<LI><a href="#[347]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;::_C_pref() const
<LI><a href="#[149]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;::size() const
<LI><a href="#[14c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;::data() const
<LI><a href="#[365]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__string_ref&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;::_C_ref_count() const
<LI><a href="#[363]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__string_ref&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;::data()
<LI><a href="#[366]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::char_traits&lang;char&rang;::assign(char&, const char&)
<LI><a href="#[2dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::char_traits&lang;char&rang;::move(char*, const char*, unsigned)
<LI><a href="#[29a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::char_traits&lang;char&rang;::copy(char*, const char*, unsigned)
</UL>
<BR>[Called By]<UL><LI><a href="#[14b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;::replace(unsigned, unsigned, const char*, unsigned)
</UL>

<P><STRONG><a name="[361]"></a>std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;::_C_getRep(unsigned, unsigned)</STRONG> (Thumb, 164 bytes, Stack size 48 bytes, main.o(t._ZNSs9_C_getRepEjj))
<BR><BR>[Stack]<UL><LI>Max Depth = 240 + Unknown Stack Size
 + In Cycle
<LI>Call Chain = std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;::_C_getRep(unsigned, unsigned) &rArr;  __rw::__rw_throw(int, ...) (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[28e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rw_allocate(unsigned, int)
<LI><a href="#[284]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rw_throw(int, ...)
<LI><a href="#[363]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__string_ref&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;::data()
<LI><a href="#[285]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;operator new(unsigned, void*)
</UL>
<BR>[Called By]<UL><LI><a href="#[2cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;::basic_string(const char*, unsigned, const std::allocator&lang;char&rang;&)
<LI><a href="#[2cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;::begin()
<LI><a href="#[294]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;::basic_string(const std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;&)
<LI><a href="#[364]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;::replace(unsigned, unsigned, const char*, unsigned, unsigned, unsigned)
<LI><a href="#[299]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;::_C_allocate(unsigned, unsigned, unsigned)
</UL>

<P><STRONG><a name="[362]"></a>std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;::_C_unlink()</STRONG> (Thumb, 136 bytes, Stack size 24 bytes, main.o(t._ZNSs9_C_unlinkEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;::_C_unlink() &rArr; __rw::__rw_deallocate(void*, unsigned, int) &rArr; operator delete (void*) &rArr; free &rArr; _free_internal &rArr; _mutex_release
</UL>
<BR>[Calls]<UL><LI><a href="#[297]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rw_deallocate(void*, unsigned, int)
<LI><a href="#[15c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;::_C_null()
<LI><a href="#[367]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::allocator&lang;__rw::__string_ref&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;&rang;::allocator&lang;char&rang;(const std::allocator&lang;T1&rang;&)
<LI><a href="#[348]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;::capacity() const
<LI><a href="#[347]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;::_C_pref() const
<LI><a href="#[14c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;::data() const
<LI><a href="#[365]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__string_ref&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;::_C_ref_count() const
</UL>
<BR>[Called By]<UL><LI><a href="#[2cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;::begin()
<LI><a href="#[29d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;::operator =(const std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;&)
<LI><a href="#[146]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;::operator =(const char*)
<LI><a href="#[28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;::~basic_string()
<LI><a href="#[364]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;::replace(unsigned, unsigned, const char*, unsigned, unsigned, unsigned)
</UL>

<P><STRONG><a name="[293]"></a>std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;::basic_string(const char*, const std::allocator&lang;char&rang;&)</STRONG> (Thumb, 52 bytes, Stack size 16 bytes, locale.o(t._ZNSsC1EPKcRKSaIcE))
<BR><BR>[Stack]<UL><LI>Max Depth = 296 + Unknown Stack Size
<LI>Call Chain = std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;::basic_string(const char*, const std::allocator&lang;char&rang;&) &rArr; std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;::_C_allocate(unsigned, unsigned, unsigned) &rArr; std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;::_C_getRep(unsigned, unsigned) &rArr;  __rw::__rw_throw(int, ...) (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[21b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[15b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::allocator&lang;char&rang;::allocator(const std::allocator&lang;char&rang;&)
<LI><a href="#[29a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::char_traits&lang;char&rang;::copy(char*, const char*, unsigned)
<LI><a href="#[299]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;::_C_allocate(unsigned, unsigned, unsigned)
</UL>
<BR>[Called By]<UL><LI><a href="#[2db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::locale::name() const
<LI><a href="#[cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::messages&lang;char&rang;::do_get(int, int, int, const std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;&) const
<LI><a href="#[291]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rw_vfmatstr(char*, unsigned, int, std::__va_list)
</UL>

<P><STRONG><a name="[461]"></a>std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;::basic_string__sub_object(const char*, const std::allocator&lang;char&rang;&)</STRONG> (Thumb, 0 bytes, Stack size 16 bytes, locale.o(t._ZNSsC1EPKcRKSaIcE), UNUSED)

<P><STRONG><a name="[2cb]"></a>std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;::basic_string(const char*, unsigned, const std::allocator&lang;char&rang;&)</STRONG> (Thumb, 84 bytes, Stack size 24 bytes, char.o(t._ZNSsC1EPKcjRKSaIcE))
<BR><BR>[Stack]<UL><LI>Max Depth = 816 + Unknown Stack Size
<LI>Call Chain = std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;::basic_string(const char*, unsigned, const std::allocator&lang;char&rang;&) &rArr; __rw::__rw_throw(int, ...) &rArr; std::__rw_exception::_C_vformat(int, std::__va_list) &rArr; __rw::__rw_vfmatstr(char*, unsigned, int, std::__va_list) &rArr; std::locale::locale() &rArr; std::locale::_C_init() &rArr; __rw::__rw_locale_imp::__rw_locale_imp(const char*, unsigned, unsigned) &rArr; __aeabi_vec_new_cookie &rArr; __cxa_vec_new &rArr; __ARM_array_new_general &rArr; __cxa_rethrow &rArr; _Unwind_RaiseException &rArr; __ARM_Unwind_RaiseException &rArr; malloc &rArr; _malloc_internal &rArr; __Heap_Full &rArr; __Heap_ProvideMemory &rArr; _free_internal &rArr; _mutex_release
</UL>
<BR>[Calls]<UL><LI><a href="#[360]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::max&lang;unsigned&rang;(const T1&, const T1&)
<LI><a href="#[284]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rw_throw(int, ...)
<LI><a href="#[361]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;::_C_getRep(unsigned, unsigned)
<LI><a href="#[15b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::allocator&lang;char&rang;::allocator(const std::allocator&lang;char&rang;&)
<LI><a href="#[29a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::char_traits&lang;char&rang;::copy(char*, const char*, unsigned)
</UL>
<BR>[Called By]<UL><LI><a href="#[355]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::collate&lang;char&rang;::do_transform(const char*, const char*) const
<LI><a href="#[a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::collate_byname&lang;char&rang;::do_transform(const char*, const char*) const
</UL>

<P><STRONG><a name="[462]"></a>std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;::basic_string__sub_object(const char*, unsigned, const std::allocator&lang;char&rang;&)</STRONG> (Thumb, 0 bytes, Stack size 24 bytes, char.o(t._ZNSsC1EPKcjRKSaIcE), UNUSED)

<P><STRONG><a name="[278]"></a>std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;::basic_string(const std::allocator&lang;char&rang;&)</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, locale.o(t._ZNSsC1ERKSaIcE))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;::basic_string(const std::allocator&lang;char&rang;&)
</UL>
<BR>[Calls]<UL><LI><a href="#[15b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::allocator&lang;char&rang;::allocator(const std::allocator&lang;char&rang;&)
</UL>
<BR>[Called By]<UL><LI><a href="#[29b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rw_locale_imp::__rw_locale_imp(const char*, unsigned, unsigned)
<LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;&lang;Func5&rang;
</UL>

<P><STRONG><a name="[463]"></a>std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;::basic_string__sub_object(const std::allocator&lang;char&rang;&)</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, locale.o(t._ZNSsC1ERKSaIcE), UNUSED)

<P><STRONG><a name="[294]"></a>std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;::basic_string(const std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;&)</STRONG> (Thumb, 104 bytes, Stack size 24 bytes, main.o(t._ZNSsC1ERKSs))
<BR><BR>[Stack]<UL><LI>Max Depth = 264 + Unknown Stack Size
<LI>Call Chain = std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;::basic_string(const std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;&) &rArr; std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;::_C_getRep(unsigned, unsigned) &rArr;  __rw::__rw_throw(int, ...) (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[361]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;::_C_getRep(unsigned, unsigned)
<LI><a href="#[15b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::allocator&lang;char&rang;::allocator(const std::allocator&lang;char&rang;&)
<LI><a href="#[347]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;::_C_pref() const
<LI><a href="#[149]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;::size() const
<LI><a href="#[365]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__string_ref&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;::_C_ref_count() const
<LI><a href="#[363]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__string_ref&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;::data()
<LI><a href="#[368]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__string_ref&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;::_C_inc_ref()
<LI><a href="#[29a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::char_traits&lang;char&rang;::copy(char*, const char*, unsigned)
</UL>
<BR>[Called By]<UL><LI><a href="#[358]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::numpunct&lang;char&rang;::do_falsename() const
<LI><a href="#[357]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::numpunct&lang;char&rang;::do_truename() const
<LI><a href="#[356]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::numpunct&lang;char&rang;::do_grouping() const
<LI><a href="#[cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::messages&lang;char&rang;::do_get(int, int, int, const std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;&) const
<LI><a href="#[291]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rw_vfmatstr(char*, unsigned, int, std::__va_list)
</UL>

<P><STRONG><a name="[464]"></a>std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;::basic_string__sub_object(const std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;&)</STRONG> (Thumb, 0 bytes, Stack size 24 bytes, main.o(t._ZNSsC1ERKSs), UNUSED)

<P><STRONG><a name="[28]"></a>std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;::~basic_string()</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, main.o(t._ZNSsD1Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;::~basic_string() &rArr; std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;::_C_unlink() &rArr; __rw::__rw_deallocate(void*, unsigned, int) &rArr; operator delete (void*) &rArr; free &rArr; _free_internal &rArr; _mutex_release
</UL>
<BR>[Calls]<UL><LI><a href="#[362]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;::_C_unlink()
</UL>
<BR>[Called By]<UL><LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::ctype&lang;char&rang;::_C_initfacet(const std::locale&)
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::collate_byname&lang;char&rang;::~collate_byname()
<LI><a href="#[38c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::numpunct&lang;char&rang;::_C_initfacet(const std::locale&)
<LI><a href="#[2a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rw_numpunct_impl_data&lang;char&rang;::~__rw_numpunct_impl_data()
<LI><a href="#[2a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rw_punct_data&lang;char&rang;::~__rw_punct_data()
<LI><a href="#[cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::messages&lang;char&rang;::do_get(int, int, int, const std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;&) const
<LI><a href="#[cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::messages&lang;char&rang;::~messages()
<LI><a href="#[291]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rw_vfmatstr(char*, unsigned, int, std::__va_list)
<LI><a href="#[298]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rw_locale_imp::_C_parse_name(__rw::__rw_locale_vector&lang;std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;&rang;&, const char*)
<LI><a href="#[2f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::locale::global(const std::locale&)
<LI><a href="#[29b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rw_locale_imp::__rw_locale_imp(const char*, unsigned, unsigned)
</UL>
<BR>[Address Reference Count : 5]<UL><LI> main.o(.text)
<LI> locale.o(i._ZNSt6localeC1ERKS_PKci)
<LI> locale.o(i._ZN4__rw15__rw_locale_impC1EPKcjj)
<LI> locale.o(i._ZN4__rw15__rw_locale_impC1ERKS0_PKcj)
<LI> main.o(t._ZN4__rw18__rw_locale_vectorISsED1Ev)
</UL>
<P><STRONG><a name="[465]"></a>std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;::~basic_string__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, main.o(t._ZNSsD1Ev), UNUSED)

<P><STRONG><a name="[146]"></a>std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;::operator =(const char*)</STRONG> (Thumb, 96 bytes, Stack size 24 bytes, main.o(t._ZNSsaSEPKc))
<BR><BR>[Stack]<UL><LI>Max Depth = 384 + Unknown Stack Size
<LI>Call Chain = std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;::operator =(const char*) &rArr; std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;::replace(unsigned, unsigned, const char*, unsigned) &rArr; std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;::replace(unsigned, unsigned, const char*, unsigned, unsigned, unsigned) &rArr;  __rw::__rw_throw(int, ...) (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[362]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;::_C_unlink()
<LI><a href="#[14b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;::replace(unsigned, unsigned, const char*, unsigned)
<LI><a href="#[15c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;::_C_null()
<LI><a href="#[347]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;::_C_pref() const
<LI><a href="#[149]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;::size() const
<LI><a href="#[365]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__string_ref&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;::_C_ref_count() const
<LI><a href="#[14a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::char_traits&lang;char&rang;::length(const char*)
<LI><a href="#[366]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::char_traits&lang;char&rang;::assign(char&, const char&)
</UL>
<BR>[Called By]<UL><LI><a href="#[135]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;stl_test()
<LI><a href="#[298]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rw_locale_imp::_C_parse_name(__rw::__rw_locale_vector&lang;std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;&rang;&, const char*)
<LI><a href="#[2f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::locale::locale(const std::locale&, const char*, int)
<LI><a href="#[2f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::locale::_C_init()
</UL>

<P><STRONG><a name="[29d]"></a>std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;::operator =(const std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;&)</STRONG> (Thumb, 94 bytes, Stack size 32 bytes, main.o(t._ZNSsaSERKSs))
<BR><BR>[Stack]<UL><LI>Max Depth = 392 + Unknown Stack Size
<LI>Call Chain = std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;::operator =(const std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;&) &rArr; std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;::replace(unsigned, unsigned, const char*, unsigned) &rArr; std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;::replace(unsigned, unsigned, const char*, unsigned, unsigned, unsigned) &rArr;  __rw::__rw_throw(int, ...) (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[362]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;::_C_unlink()
<LI><a href="#[14b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;::replace(unsigned, unsigned, const char*, unsigned)
<LI><a href="#[347]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;::_C_pref() const
<LI><a href="#[149]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;::size() const
<LI><a href="#[14c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;::data() const
<LI><a href="#[365]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__string_ref&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;::_C_ref_count() const
<LI><a href="#[368]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__string_ref&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;::_C_inc_ref()
</UL>
<BR>[Called By]<UL><LI><a href="#[38c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::numpunct&lang;char&rang;::_C_initfacet(const std::locale&)
<LI><a href="#[2f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::locale::locale(const std::locale&, const std::locale&, int)
<LI><a href="#[29f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rw_locale_imp::__rw_locale_imp(const __rw::__rw_locale_imp&, const char*, unsigned)
<LI><a href="#[29b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rw_locale_imp::__rw_locale_imp(const char*, unsigned, unsigned)
</UL>

<P><STRONG><a name="[369]"></a>std::basic_filebuf&lang;char, std::char_traits&lang;char&rang;&rang;::_C_unshift()</STRONG> (Thumb, 114 bytes, Stack size 96 bytes, ios.o(t._ZNSt13basic_filebufIcSt11char_traitsIcEE10_C_unshiftEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 968 + Unknown Stack Size
<LI>Call Chain = std::basic_filebuf&lang;char, std::char_traits&lang;char&rang;&rang;::_C_unshift() &rArr; std::use_facet&lang;std::codecvt&lang;char, char, std::__mbstate_t&rang;&rang;(const std::locale&) &rArr; std::locale::_C_use_facet(const std::locale::id&, bool, int, __rw::__rw_facet_base*(*)(int, const char*, unsigned)) const &rArr; std::locale::_C_make_facet(const std::locale::id&, bool, int, __rw::__rw_facet_base*(*)(int, const char*, unsigned)) const &rArr; __rw::__rw_throw(int, ...) &rArr; std::__rw_exception::_C_vformat(int, std::__va_list) &rArr; __rw::__rw_vfmatstr(char*, unsigned, int, std::__va_list) &rArr; std::locale::locale() &rArr; std::locale::_C_init() &rArr; __rw::__rw_locale_imp::__rw_locale_imp(const char*, unsigned, unsigned) &rArr; __aeabi_vec_new_cookie &rArr; __cxa_vec_new &rArr; __ARM_array_new_general &rArr; __cxa_rethrow &rArr; _Unwind_RaiseException &rArr; __ARM_Unwind_RaiseException &rArr; malloc &rArr; _malloc_internal &rArr; __Heap_Full &rArr; __Heap_ProvideMemory &rArr; _free_internal &rArr; _mutex_release
</UL>
<BR>[Calls]<UL><LI><a href="#[36a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::use_facet&lang;std::codecvt&lang;char, char, std::__mbstate_t&rang;&rang;(const std::locale&)
<LI><a href="#[36b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::codecvt&lang;char, char, std::__mbstate_t&rang;::encoding() const
<LI><a href="#[28c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rw_file_t::_C_write(const void*, unsigned, unsigned)
<LI><a href="#[36c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mbsinit
</UL>
<BR>[Called By]<UL><LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::basic_filebuf&lang;char, std::char_traits&lang;char&rang;&rang;::seekoff(long, std::ios_base::_C_seekdir, int)
<LI><a href="#[371]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::basic_filebuf&lang;char, std::char_traits&lang;char&rang;&rang;::close()
</UL>

<P><STRONG><a name="[36d]"></a>std::basic_filebuf&lang;char, std::char_traits&lang;char&rang;&rang;::_C_file_seek(long, int)</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, ios.o(t._ZNSt13basic_filebufIcSt11char_traitsIcEE12_C_file_seekEli))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = std::basic_filebuf&lang;char, std::char_traits&lang;char&rang;&rang;::_C_file_seek(long, int) &rArr; __rw::__rw_file_t::_C_seek(long, int) &rArr; fseek &rArr; _fseek &rArr; _ftell_internal &rArr; __aeabi_errno_addr &rArr; __user_perthread_libspace
</UL>
<BR>[Calls]<UL><LI><a href="#[36e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::fpos&lang;std::__mbstate_t&rang;::fpos(long)
<LI><a href="#[289]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rw_file_t::_C_seek(long, int)
</UL>
<BR>[Called By]<UL><LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::basic_filebuf&lang;char, std::char_traits&lang;char&rang;&rang;::showmanyc()
<LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::basic_filebuf&lang;char, std::char_traits&lang;char&rang;&rang;::overflow(int)
<LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::basic_filebuf&lang;char, std::char_traits&lang;char&rang;&rang;::seekpos(std::fpos&lang;std::__mbstate_t&rang;, int)
<LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::basic_filebuf&lang;char, std::char_traits&lang;char&rang;&rang;::seekoff(long, std::ios_base::_C_seekdir, int)
<LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::basic_filebuf&lang;char, std::char_traits&lang;char&rang;&rang;::sync()
</UL>

<P><STRONG><a name="[84]"></a>std::basic_filebuf&lang;char, std::char_traits&lang;char&rang;&rang;::sync()</STRONG> (Thumb, 290 bytes, Stack size 624 bytes, ios.o(t._ZNSt13basic_filebufIcSt11char_traitsIcEE4syncEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 1496 + Unknown Stack Size
<LI>Call Chain = std::basic_filebuf&lang;char, std::char_traits&lang;char&rang;&rang;::sync() &rArr; std::use_facet&lang;std::codecvt&lang;char, char, std::__mbstate_t&rang;&rang;(const std::locale&) &rArr; std::locale::_C_use_facet(const std::locale::id&, bool, int, __rw::__rw_facet_base*(*)(int, const char*, unsigned)) const &rArr; std::locale::_C_make_facet(const std::locale::id&, bool, int, __rw::__rw_facet_base*(*)(int, const char*, unsigned)) const &rArr; __rw::__rw_throw(int, ...) &rArr; std::__rw_exception::_C_vformat(int, std::__va_list) &rArr; __rw::__rw_vfmatstr(char*, unsigned, int, std::__va_list) &rArr; std::locale::locale() &rArr; std::locale::_C_init() &rArr; __rw::__rw_locale_imp::__rw_locale_imp(const char*, unsigned, unsigned) &rArr; __aeabi_vec_new_cookie &rArr; __cxa_vec_new &rArr; __ARM_array_new_general &rArr; __cxa_rethrow &rArr; _Unwind_RaiseException &rArr; __ARM_Unwind_RaiseException &rArr; malloc &rArr; _malloc_internal &rArr; __Heap_Full &rArr; __Heap_ProvideMemory &rArr; _free_internal &rArr; _mutex_release
</UL>
<BR>[Calls]<UL><LI><a href="#[36a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::use_facet&lang;std::codecvt&lang;char, char, std::__mbstate_t&rang;&rang;(const std::locale&)
<LI><a href="#[36f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::fpos&lang;std::__mbstate_t&rang;::operator =(const std::fpos&lang;std::__mbstate_t&rang;&)
<LI><a href="#[36e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::fpos&lang;std::__mbstate_t&rang;::fpos(long)
<LI><a href="#[36d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::basic_filebuf&lang;char, std::char_traits&lang;char&rang;&rang;::_C_file_seek(long, int)
<LI><a href="#[351]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::fpos&lang;std::__mbstate_t&rang;::operator +(long) const
<LI><a href="#[350]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::fpos&lang;std::__mbstate_t&rang;::operator ==(const std::fpos&lang;std::__mbstate_t&rang;&) const
<LI><a href="#[34b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::basic_streambuf&lang;char, std::char_traits&lang;char&rang;&rang;::_C_is_eof(int) const
<LI><a href="#[36b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::codecvt&lang;char, char, std::__mbstate_t&rang;::encoding() const
<LI><a href="#[370]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::codecvt&lang;char, char, std::__mbstate_t&rang;::out(std::__mbstate_t&, const char*, const char*, const char*&, char*, char*, char*&) const
<LI><a href="#[2dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::char_traits&lang;char&rang;::move(char*, const char*, unsigned)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> ios.o(.constdata__ZTVSt13basic_filebufIcSt11char_traitsIcEE)
</UL>
<P><STRONG><a name="[371]"></a>std::basic_filebuf&lang;char, std::char_traits&lang;char&rang;&rang;::close()</STRONG> (Thumb, 146 bytes, Stack size 32 bytes, ios.o(t._ZNSt13basic_filebufIcSt11char_traitsIcEE5closeEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 1000 + Unknown Stack Size
<LI>Call Chain = std::basic_filebuf&lang;char, std::char_traits&lang;char&rang;&rang;::close() &rArr; std::basic_filebuf&lang;char, std::char_traits&lang;char&rang;&rang;::_C_unshift() &rArr; std::use_facet&lang;std::codecvt&lang;char, char, std::__mbstate_t&rang;&rang;(const std::locale&) &rArr; std::locale::_C_use_facet(const std::locale::id&, bool, int, __rw::__rw_facet_base*(*)(int, const char*, unsigned)) const &rArr; std::locale::_C_make_facet(const std::locale::id&, bool, int, __rw::__rw_facet_base*(*)(int, const char*, unsigned)) const &rArr; __rw::__rw_throw(int, ...) &rArr; std::__rw_exception::_C_vformat(int, std::__va_list) &rArr; __rw::__rw_vfmatstr(char*, unsigned, int, std::__va_list) &rArr; std::locale::locale() &rArr; std::locale::_C_init() &rArr; __rw::__rw_locale_imp::__rw_locale_imp(const char*, unsigned, unsigned) &rArr; __aeabi_vec_new_cookie &rArr; __cxa_vec_new &rArr; __ARM_array_new_general &rArr; __cxa_rethrow &rArr; _Unwind_RaiseException &rArr; __ARM_Unwind_RaiseException &rArr; malloc &rArr; _malloc_internal &rArr; __Heap_Full &rArr; __Heap_ProvideMemory &rArr; _free_internal &rArr; _mutex_release
</UL>
<BR>[Calls]<UL><LI><a href="#[36f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::fpos&lang;std::__mbstate_t&rang;::operator =(const std::fpos&lang;std::__mbstate_t&rang;&)
<LI><a href="#[36e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::fpos&lang;std::__mbstate_t&rang;::fpos(long)
<LI><a href="#[369]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::basic_filebuf&lang;char, std::char_traits&lang;char&rang;&rang;::_C_unshift()
<LI><a href="#[34b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::basic_streambuf&lang;char, std::char_traits&lang;char&rang;&rang;::_C_is_eof(int) const
<LI><a href="#[349]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::basic_filebuf&lang;char, std::char_traits&lang;char&rang;&rang;::is_open() const
<LI><a href="#[2c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rw_file_t::_C_is_std() const
<LI><a href="#[28a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rw_file_t::_C_close()
</UL>
<BR>[Called By]<UL><LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::basic_filebuf&lang;char, std::char_traits&lang;char&rang;&rang;::~basic_filebuf()
</UL>

<P><STRONG><a name="[80]"></a>std::basic_filebuf&lang;char, std::char_traits&lang;char&rang;&rang;::uflow()</STRONG> (Thumb, 34 bytes, Stack size 16 bytes, ios.o(t._ZNSt13basic_filebufIcSt11char_traitsIcEE5uflowEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = std::basic_filebuf&lang;char, std::char_traits&lang;char&rang;&rang;::uflow() &rArr; std::basic_streambuf&lang;char, std::char_traits&lang;char&rang;&rang;::_C_is_eof(int) const
</UL>
<BR>[Calls]<UL><LI><a href="#[34b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::basic_streambuf&lang;char, std::char_traits&lang;char&rang;&rang;::_C_is_eof(int) const
</UL>
<BR>[Address Reference Count : 1]<UL><LI> ios.o(.constdata__ZTVSt13basic_filebufIcSt11char_traitsIcEE)
</UL>
<P><STRONG><a name="[7b]"></a>std::basic_filebuf&lang;char, std::char_traits&lang;char&rang;&rang;::setbuf(char*, long)</STRONG> (Thumb, 108 bytes, Stack size 24 bytes, ios.o(t._ZNSt13basic_filebufIcSt11char_traitsIcEE6setbufEPcl))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = std::basic_filebuf&lang;char, std::char_traits&lang;char&rang;&rang;::setbuf(char*, long) &rArr; operator new[] (unsigned) &rArr; operator new(unsigned) &rArr; malloc &rArr; _malloc_internal &rArr; __Heap_Full &rArr; __Heap_ProvideMemory &rArr; _free_internal &rArr; _mutex_release
</UL>
<BR>[Calls]<UL><LI><a href="#[373]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::basic_streambuf&lang;char, std::char_traits&lang;char&rang;&rang;::_C_set_unbuffered(bool)
<LI><a href="#[372]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::basic_streambuf&lang;char, std::char_traits&lang;char&rang;&rang;::_C_own_buf(bool)
<LI><a href="#[290]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;operator new[] (unsigned)
<LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;operator delete[] (void*)
</UL>
<BR>[Called By]<UL><LI><a href="#[2fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::basic_filebuf&lang;char, std::char_traits&lang;char&rang;&rang;::basic_filebuf(int, char*, long)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> ios.o(.constdata__ZTVSt13basic_filebufIcSt11char_traitsIcEE)
</UL>
<P><STRONG><a name="[83]"></a>std::basic_filebuf&lang;char, std::char_traits&lang;char&rang;&rang;::xsputn(const char*, long)</STRONG> (Thumb, 94 bytes, Stack size 24 bytes, ios.o(t._ZNSt13basic_filebufIcSt11char_traitsIcEE6xsputnEPKcl))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = std::basic_filebuf&lang;char, std::char_traits&lang;char&rang;&rang;::xsputn(const char*, long) &rArr; std::basic_streambuf&lang;char, std::char_traits&lang;char&rang;&rang;::sputc(char)
</UL>
<BR>[Calls]<UL><LI><a href="#[34b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::basic_streambuf&lang;char, std::char_traits&lang;char&rang;&rang;::_C_is_eof(int) const
<LI><a href="#[35e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::basic_streambuf&lang;char, std::char_traits&lang;char&rang;&rang;::sputc(char)
<LI><a href="#[29a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::char_traits&lang;char&rang;::copy(char*, const char*, unsigned)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> ios.o(.constdata__ZTVSt13basic_filebufIcSt11char_traitsIcEE)
</UL>
<P><STRONG><a name="[7c]"></a>std::basic_filebuf&lang;char, std::char_traits&lang;char&rang;&rang;::seekoff(long, std::ios_base::_C_seekdir, int)</STRONG> (Thumb, 180 bytes, Stack size 64 bytes, ios.o(t._ZNSt13basic_filebufIcSt11char_traitsIcEE7seekoffElNSt8ios_base10_C_seekdirEi))
<BR><BR>[Stack]<UL><LI>Max Depth = 1032 + Unknown Stack Size
<LI>Call Chain = std::basic_filebuf&lang;char, std::char_traits&lang;char&rang;&rang;::seekoff(long, std::ios_base::_C_seekdir, int) &rArr; std::basic_filebuf&lang;char, std::char_traits&lang;char&rang;&rang;::_C_unshift() &rArr; std::use_facet&lang;std::codecvt&lang;char, char, std::__mbstate_t&rang;&rang;(const std::locale&) &rArr; std::locale::_C_use_facet(const std::locale::id&, bool, int, __rw::__rw_facet_base*(*)(int, const char*, unsigned)) const &rArr; std::locale::_C_make_facet(const std::locale::id&, bool, int, __rw::__rw_facet_base*(*)(int, const char*, unsigned)) const &rArr; __rw::__rw_throw(int, ...) &rArr; std::__rw_exception::_C_vformat(int, std::__va_list) &rArr; __rw::__rw_vfmatstr(char*, unsigned, int, std::__va_list) &rArr; std::locale::locale() &rArr; std::locale::_C_init() &rArr; __rw::__rw_locale_imp::__rw_locale_imp(const char*, unsigned, unsigned) &rArr; __aeabi_vec_new_cookie &rArr; __cxa_vec_new &rArr; __ARM_array_new_general &rArr; __cxa_rethrow &rArr; _Unwind_RaiseException &rArr; __ARM_Unwind_RaiseException &rArr; malloc &rArr; _malloc_internal &rArr; __Heap_Full &rArr; __Heap_ProvideMemory &rArr; _free_internal &rArr; _mutex_release
</UL>
<BR>[Calls]<UL><LI><a href="#[36a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::use_facet&lang;std::codecvt&lang;char, char, std::__mbstate_t&rang;&rang;(const std::locale&)
<LI><a href="#[36f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::fpos&lang;std::__mbstate_t&rang;::operator =(const std::fpos&lang;std::__mbstate_t&rang;&)
<LI><a href="#[36e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::fpos&lang;std::__mbstate_t&rang;::fpos(long)
<LI><a href="#[34e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::fpos&lang;std::__mbstate_t&rang;::fpos(const std::fpos&lang;std::__mbstate_t&rang;&)
<LI><a href="#[374]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::basic_streambuf&lang;char, std::char_traits&lang;char&rang;&rang;::_C_out_last(bool)
<LI><a href="#[36d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::basic_filebuf&lang;char, std::char_traits&lang;char&rang;&rang;::_C_file_seek(long, int)
<LI><a href="#[369]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::basic_filebuf&lang;char, std::char_traits&lang;char&rang;&rang;::_C_unshift()
<LI><a href="#[34f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::fpos&lang;std::__mbstate_t&rang;::operator !=(const std::fpos&lang;std::__mbstate_t&rang;&) const
<LI><a href="#[349]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::basic_filebuf&lang;char, std::char_traits&lang;char&rang;&rang;::is_open() const
<LI><a href="#[36b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::codecvt&lang;char, char, std::__mbstate_t&rang;::encoding() const
</UL>
<BR>[Address Reference Count : 1]<UL><LI> ios.o(.constdata__ZTVSt13basic_filebufIcSt11char_traitsIcEE)
</UL>
<P><STRONG><a name="[7d]"></a>std::basic_filebuf&lang;char, std::char_traits&lang;char&rang;&rang;::seekpos(std::fpos&lang;std::__mbstate_t&rang;, int)</STRONG> (Thumb, 148 bytes, Stack size 48 bytes, ios.o(t._ZNSt13basic_filebufIcSt11char_traitsIcEE7seekposESt4fposISt11__mbstate_tEi))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = std::basic_filebuf&lang;char, std::char_traits&lang;char&rang;&rang;::seekpos(std::fpos&lang;std::__mbstate_t&rang;, int) &rArr; std::basic_filebuf&lang;char, std::char_traits&lang;char&rang;&rang;::_C_file_seek(long, int) &rArr; __rw::__rw_file_t::_C_seek(long, int) &rArr; fseek &rArr; _fseek &rArr; _ftell_internal &rArr; __aeabi_errno_addr &rArr; __user_perthread_libspace
</UL>
<BR>[Calls]<UL><LI><a href="#[36f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::fpos&lang;std::__mbstate_t&rang;::operator =(const std::fpos&lang;std::__mbstate_t&rang;&)
<LI><a href="#[36e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::fpos&lang;std::__mbstate_t&rang;::fpos(long)
<LI><a href="#[34e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::fpos&lang;std::__mbstate_t&rang;::fpos(const std::fpos&lang;std::__mbstate_t&rang;&)
<LI><a href="#[374]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::basic_streambuf&lang;char, std::char_traits&lang;char&rang;&rang;::_C_out_last(bool)
<LI><a href="#[36d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::basic_filebuf&lang;char, std::char_traits&lang;char&rang;&rang;::_C_file_seek(long, int)
<LI><a href="#[350]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::fpos&lang;std::__mbstate_t&rang;::operator ==(const std::fpos&lang;std::__mbstate_t&rang;&) const
<LI><a href="#[34b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::basic_streambuf&lang;char, std::char_traits&lang;char&rang;&rang;::_C_is_eof(int) const
<LI><a href="#[349]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::basic_filebuf&lang;char, std::char_traits&lang;char&rang;&rang;::is_open() const
</UL>
<BR>[Address Reference Count : 1]<UL><LI> ios.o(.constdata__ZTVSt13basic_filebufIcSt11char_traitsIcEE)
</UL>
<P><STRONG><a name="[81]"></a>std::basic_filebuf&lang;char, std::char_traits&lang;char&rang;&rang;::overflow(int)</STRONG> (Thumb, 364 bytes, Stack size 600 bytes, ios.o(t._ZNSt13basic_filebufIcSt11char_traitsIcEE8overflowEi))
<BR><BR>[Stack]<UL><LI>Max Depth = 1472 + Unknown Stack Size
<LI>Call Chain = std::basic_filebuf&lang;char, std::char_traits&lang;char&rang;&rang;::overflow(int) &rArr; std::use_facet&lang;std::codecvt&lang;char, char, std::__mbstate_t&rang;&rang;(const std::locale&) &rArr; std::locale::_C_use_facet(const std::locale::id&, bool, int, __rw::__rw_facet_base*(*)(int, const char*, unsigned)) const &rArr; std::locale::_C_make_facet(const std::locale::id&, bool, int, __rw::__rw_facet_base*(*)(int, const char*, unsigned)) const &rArr; __rw::__rw_throw(int, ...) &rArr; std::__rw_exception::_C_vformat(int, std::__va_list) &rArr; __rw::__rw_vfmatstr(char*, unsigned, int, std::__va_list) &rArr; std::locale::locale() &rArr; std::locale::_C_init() &rArr; __rw::__rw_locale_imp::__rw_locale_imp(const char*, unsigned, unsigned) &rArr; __aeabi_vec_new_cookie &rArr; __cxa_vec_new &rArr; __ARM_array_new_general &rArr; __cxa_rethrow &rArr; _Unwind_RaiseException &rArr; __ARM_Unwind_RaiseException &rArr; malloc &rArr; _malloc_internal &rArr; __Heap_Full &rArr; __Heap_ProvideMemory &rArr; _free_internal &rArr; _mutex_release
</UL>
<BR>[Calls]<UL><LI><a href="#[36a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::use_facet&lang;std::codecvt&lang;char, char, std::__mbstate_t&rang;&rang;(const std::locale&)
<LI><a href="#[36f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::fpos&lang;std::__mbstate_t&rang;::operator =(const std::fpos&lang;std::__mbstate_t&rang;&)
<LI><a href="#[374]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::basic_streambuf&lang;char, std::char_traits&lang;char&rang;&rang;::_C_out_last(bool)
<LI><a href="#[36d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::basic_filebuf&lang;char, std::char_traits&lang;char&rang;&rang;::_C_file_seek(long, int)
<LI><a href="#[34b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::basic_streambuf&lang;char, std::char_traits&lang;char&rang;&rang;::_C_is_eof(int) const
<LI><a href="#[349]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::basic_filebuf&lang;char, std::char_traits&lang;char&rang;&rang;::is_open() const
<LI><a href="#[2dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::char_traits&lang;char&rang;::not_eof(const int&)
<LI><a href="#[370]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::codecvt&lang;char, char, std::__mbstate_t&rang;::out(std::__mbstate_t&, const char*, const char*, const char*&, char*, char*, char*&) const
<LI><a href="#[375]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::codecvt&lang;char, char, std::__mbstate_t&rang;::always_noconv() const
<LI><a href="#[28c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rw_file_t::_C_write(const void*, unsigned, unsigned)
<LI><a href="#[35e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::basic_streambuf&lang;char, std::char_traits&lang;char&rang;&rang;::sputc(char)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> ios.o(.constdata__ZTVSt13basic_filebufIcSt11char_traitsIcEE)
</UL>
<P><STRONG><a name="[82]"></a>std::basic_filebuf&lang;char, std::char_traits&lang;char&rang;&rang;::pbackfail(int)</STRONG> (Thumb, 152 bytes, Stack size 56 bytes, ios.o(t._ZNSt13basic_filebufIcSt11char_traitsIcEE9pbackfailEi))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = std::basic_filebuf&lang;char, std::char_traits&lang;char&rang;&rang;::pbackfail(int) &rArr; std::basic_streambuf&lang;char, std::char_traits&lang;char&rang;&rang;::_C_is_eof(int) const
</UL>
<BR>[Calls]<UL><LI><a href="#[36e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::fpos&lang;std::__mbstate_t&rang;::fpos(long)
<LI><a href="#[350]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::fpos&lang;std::__mbstate_t&rang;::operator ==(const std::fpos&lang;std::__mbstate_t&rang;&) const
<LI><a href="#[34b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::basic_streambuf&lang;char, std::char_traits&lang;char&rang;&rang;::_C_is_eof(int) const
<LI><a href="#[376]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::basic_streambuf&lang;char, std::char_traits&lang;char&rang;&rang;::_C_putback_avail() const
<LI><a href="#[349]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::basic_filebuf&lang;char, std::char_traits&lang;char&rang;&rang;::is_open() const
<LI><a href="#[2dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::char_traits&lang;char&rang;::not_eof(const int&)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> ios.o(.constdata__ZTVSt13basic_filebufIcSt11char_traitsIcEE)
</UL>
<P><STRONG><a name="[7e]"></a>std::basic_filebuf&lang;char, std::char_traits&lang;char&rang;&rang;::showmanyc()</STRONG> (Thumb, 164 bytes, Stack size 72 bytes, ios.o(t._ZNSt13basic_filebufIcSt11char_traitsIcEE9showmanycEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 944 + Unknown Stack Size
<LI>Call Chain = std::basic_filebuf&lang;char, std::char_traits&lang;char&rang;&rang;::showmanyc() &rArr; std::use_facet&lang;std::codecvt&lang;char, char, std::__mbstate_t&rang;&rang;(const std::locale&) &rArr; std::locale::_C_use_facet(const std::locale::id&, bool, int, __rw::__rw_facet_base*(*)(int, const char*, unsigned)) const &rArr; std::locale::_C_make_facet(const std::locale::id&, bool, int, __rw::__rw_facet_base*(*)(int, const char*, unsigned)) const &rArr; __rw::__rw_throw(int, ...) &rArr; std::__rw_exception::_C_vformat(int, std::__va_list) &rArr; __rw::__rw_vfmatstr(char*, unsigned, int, std::__va_list) &rArr; std::locale::locale() &rArr; std::locale::_C_init() &rArr; __rw::__rw_locale_imp::__rw_locale_imp(const char*, unsigned, unsigned) &rArr; __aeabi_vec_new_cookie &rArr; __cxa_vec_new &rArr; __ARM_array_new_general &rArr; __cxa_rethrow &rArr; _Unwind_RaiseException &rArr; __ARM_Unwind_RaiseException &rArr; malloc &rArr; _malloc_internal &rArr; __Heap_Full &rArr; __Heap_ProvideMemory &rArr; _free_internal &rArr; _mutex_release
</UL>
<BR>[Calls]<UL><LI><a href="#[36a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::use_facet&lang;std::codecvt&lang;char, char, std::__mbstate_t&rang;&rang;(const std::locale&)
<LI><a href="#[36e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::fpos&lang;std::__mbstate_t&rang;::fpos(long)
<LI><a href="#[36d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::basic_filebuf&lang;char, std::char_traits&lang;char&rang;&rang;::_C_file_seek(long, int)
<LI><a href="#[34f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::fpos&lang;std::__mbstate_t&rang;::operator !=(const std::fpos&lang;std::__mbstate_t&rang;&) const
<LI><a href="#[34d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::fpos&lang;std::__mbstate_t&rang;::operator -(const std::fpos&lang;std::__mbstate_t&rang;&) const
<LI><a href="#[350]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::fpos&lang;std::__mbstate_t&rang;::operator ==(const std::fpos&lang;std::__mbstate_t&rang;&) const
<LI><a href="#[349]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::basic_filebuf&lang;char, std::char_traits&lang;char&rang;&rang;::is_open() const
<LI><a href="#[375]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::codecvt&lang;char, char, std::__mbstate_t&rang;::always_noconv() const
<LI><a href="#[377]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::codecvt&lang;char, char, std::__mbstate_t&rang;::max_length() const
</UL>
<BR>[Address Reference Count : 1]<UL><LI> ios.o(.constdata__ZTVSt13basic_filebufIcSt11char_traitsIcEE)
</UL>
<P><STRONG><a name="[7f]"></a>std::basic_filebuf&lang;char, std::char_traits&lang;char&rang;&rang;::underflow()</STRONG> (Thumb, 396 bytes, Stack size 608 bytes, ios.o(t._ZNSt13basic_filebufIcSt11char_traitsIcEE9underflowEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 1480 + Unknown Stack Size
<LI>Call Chain = std::basic_filebuf&lang;char, std::char_traits&lang;char&rang;&rang;::underflow() &rArr; std::use_facet&lang;std::codecvt&lang;char, char, std::__mbstate_t&rang;&rang;(const std::locale&) &rArr; std::locale::_C_use_facet(const std::locale::id&, bool, int, __rw::__rw_facet_base*(*)(int, const char*, unsigned)) const &rArr; std::locale::_C_make_facet(const std::locale::id&, bool, int, __rw::__rw_facet_base*(*)(int, const char*, unsigned)) const &rArr; __rw::__rw_throw(int, ...) &rArr; std::__rw_exception::_C_vformat(int, std::__va_list) &rArr; __rw::__rw_vfmatstr(char*, unsigned, int, std::__va_list) &rArr; std::locale::locale() &rArr; std::locale::_C_init() &rArr; __rw::__rw_locale_imp::__rw_locale_imp(const char*, unsigned, unsigned) &rArr; __aeabi_vec_new_cookie &rArr; __cxa_vec_new &rArr; __ARM_array_new_general &rArr; __cxa_rethrow &rArr; _Unwind_RaiseException &rArr; __ARM_Unwind_RaiseException &rArr; malloc &rArr; _malloc_internal &rArr; __Heap_Full &rArr; __Heap_ProvideMemory &rArr; _free_internal &rArr; _mutex_release
</UL>
<BR>[Calls]<UL><LI><a href="#[36a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::use_facet&lang;std::codecvt&lang;char, char, std::__mbstate_t&rang;&rang;(const std::locale&)
<LI><a href="#[378]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::min&lang;long&rang;(const T1&, const T1&)
<LI><a href="#[379]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::min&lang;int&rang;(const T1&, const T1&)
<LI><a href="#[36f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::fpos&lang;std::__mbstate_t&rang;::operator =(const std::fpos&lang;std::__mbstate_t&rang;&)
<LI><a href="#[374]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::basic_streambuf&lang;char, std::char_traits&lang;char&rang;&rang;::_C_out_last(bool)
<LI><a href="#[376]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::basic_streambuf&lang;char, std::char_traits&lang;char&rang;&rang;::_C_putback_avail() const
<LI><a href="#[349]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::basic_filebuf&lang;char, std::char_traits&lang;char&rang;&rang;::is_open() const
<LI><a href="#[375]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::codecvt&lang;char, char, std::__mbstate_t&rang;::always_noconv() const
<LI><a href="#[288]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rw_file_t::_C_read(void*, unsigned, unsigned)
<LI><a href="#[24d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memmove
<LI><a href="#[2dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::char_traits&lang;char&rang;::move(char*, const char*, unsigned)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> ios.o(.constdata__ZTVSt13basic_filebufIcSt11char_traitsIcEE)
</UL>
<P><STRONG><a name="[2fe]"></a>std::basic_filebuf&lang;char, std::char_traits&lang;char&rang;&rang;::basic_filebuf(int, char*, long)</STRONG> (Thumb, 118 bytes, Stack size 32 bytes, ios.o(t._ZNSt13basic_filebufIcSt11char_traitsIcEEC1EiPcl))
<BR><BR>[Stack]<UL><LI>Max Depth = 832 + Unknown Stack Size
<LI>Call Chain = std::basic_filebuf&lang;char, std::char_traits&lang;char&rang;&rang;::basic_filebuf(int, char*, long) &rArr; __rw::__rw_file_t::__rw_file_t(int) &rArr; __rw::__rw_throw(int, ...) &rArr; std::__rw_exception::_C_vformat(int, std::__va_list) &rArr; __rw::__rw_vfmatstr(char*, unsigned, int, std::__va_list) &rArr; std::locale::locale() &rArr; std::locale::_C_init() &rArr; __rw::__rw_locale_imp::__rw_locale_imp(const char*, unsigned, unsigned) &rArr; __aeabi_vec_new_cookie &rArr; __cxa_vec_new &rArr; __ARM_array_new_general &rArr; __cxa_rethrow &rArr; _Unwind_RaiseException &rArr; __ARM_Unwind_RaiseException &rArr; malloc &rArr; _malloc_internal &rArr; __Heap_Full &rArr; __Heap_ProvideMemory &rArr; _free_internal &rArr; _mutex_release
</UL>
<BR>[Calls]<UL><LI><a href="#[36e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::fpos&lang;std::__mbstate_t&rang;::fpos(long)
<LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::basic_filebuf&lang;char, std::char_traits&lang;char&rang;&rang;::setbuf(char*, long)
<LI><a href="#[295]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::locale::locale()
<LI><a href="#[28d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rw_file_t::__rw_file_t(int)
<LI><a href="#[37a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rw_file_t::_C_get_mode(int)
</UL>
<BR>[Called By]<UL><LI><a href="#[154]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::ios_base::Init::Init()
</UL>

<P><STRONG><a name="[466]"></a>std::basic_filebuf&lang;char, std::char_traits&lang;char&rang;&rang;::basic_filebuf__sub_object(int, char*, long)</STRONG> (Thumb, 0 bytes, Stack size 32 bytes, ios.o(t._ZNSt13basic_filebufIcSt11char_traitsIcEEC1EiPcl), UNUSED)

<P><STRONG><a name="[7a]"></a>std::basic_filebuf&lang;char, std::char_traits&lang;char&rang;&rang;::~basic_filebuf__deallocating()</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, ios.o(t._ZNSt13basic_filebufIcSt11char_traitsIcEED0Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 1016 + Unknown Stack Size
<LI>Call Chain = std::basic_filebuf&lang;char, std::char_traits&lang;char&rang;&rang;::~basic_filebuf__deallocating() &rArr; std::basic_filebuf&lang;char, std::char_traits&lang;char&rang;&rang;::~basic_filebuf() &rArr; std::basic_filebuf&lang;char, std::char_traits&lang;char&rang;&rang;::close() &rArr; std::basic_filebuf&lang;char, std::char_traits&lang;char&rang;&rang;::_C_unshift() &rArr; std::use_facet&lang;std::codecvt&lang;char, char, std::__mbstate_t&rang;&rang;(const std::locale&) &rArr; std::locale::_C_use_facet(const std::locale::id&, bool, int, __rw::__rw_facet_base*(*)(int, const char*, unsigned)) const &rArr; std::locale::_C_make_facet(const std::locale::id&, bool, int, __rw::__rw_facet_base*(*)(int, const char*, unsigned)) const &rArr; __rw::__rw_throw(int, ...) &rArr; std::__rw_exception::_C_vformat(int, std::__va_list) &rArr; __rw::__rw_vfmatstr(char*, unsigned, int, std::__va_list) &rArr; std::locale::locale() &rArr; std::locale::_C_init() &rArr; __rw::__rw_locale_imp::__rw_locale_imp(const char*, unsigned, unsigned) &rArr; __aeabi_vec_new_cookie &rArr; __cxa_vec_new &rArr; __ARM_array_new_general &rArr; __cxa_rethrow &rArr; _Unwind_RaiseException &rArr; __ARM_Unwind_RaiseException &rArr; malloc &rArr; _malloc_internal &rArr; __Heap_Full &rArr; __Heap_ProvideMemory &rArr; _free_internal &rArr; _mutex_release
</UL>
<BR>[Calls]<UL><LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::basic_filebuf&lang;char, std::char_traits&lang;char&rang;&rang;::~basic_filebuf()
<LI><a href="#[282]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;operator delete (void*)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> ios.o(.constdata__ZTVSt13basic_filebufIcSt11char_traitsIcEE)
</UL>
<P><STRONG><a name="[79]"></a>std::basic_filebuf&lang;char, std::char_traits&lang;char&rang;&rang;::~basic_filebuf()</STRONG> (Thumb, 38 bytes, Stack size 8 bytes, ios.o(t._ZNSt13basic_filebufIcSt11char_traitsIcEED1Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 1008 + Unknown Stack Size
<LI>Call Chain = std::basic_filebuf&lang;char, std::char_traits&lang;char&rang;&rang;::~basic_filebuf() &rArr; std::basic_filebuf&lang;char, std::char_traits&lang;char&rang;&rang;::close() &rArr; std::basic_filebuf&lang;char, std::char_traits&lang;char&rang;&rang;::_C_unshift() &rArr; std::use_facet&lang;std::codecvt&lang;char, char, std::__mbstate_t&rang;&rang;(const std::locale&) &rArr; std::locale::_C_use_facet(const std::locale::id&, bool, int, __rw::__rw_facet_base*(*)(int, const char*, unsigned)) const &rArr; std::locale::_C_make_facet(const std::locale::id&, bool, int, __rw::__rw_facet_base*(*)(int, const char*, unsigned)) const &rArr; __rw::__rw_throw(int, ...) &rArr; std::__rw_exception::_C_vformat(int, std::__va_list) &rArr; __rw::__rw_vfmatstr(char*, unsigned, int, std::__va_list) &rArr; std::locale::locale() &rArr; std::locale::_C_init() &rArr; __rw::__rw_locale_imp::__rw_locale_imp(const char*, unsigned, unsigned) &rArr; __aeabi_vec_new_cookie &rArr; __cxa_vec_new &rArr; __ARM_array_new_general &rArr; __cxa_rethrow &rArr; _Unwind_RaiseException &rArr; __ARM_Unwind_RaiseException &rArr; malloc &rArr; _malloc_internal &rArr; __Heap_Full &rArr; __Heap_ProvideMemory &rArr; _free_internal &rArr; _mutex_release
</UL>
<BR>[Calls]<UL><LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::basic_streambuf&lang;char, std::char_traits&lang;char&rang;&rang;::~basic_streambuf()
<LI><a href="#[371]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::basic_filebuf&lang;char, std::char_traits&lang;char&rang;&rang;::close()
<LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;operator delete[] (void*)
</UL>
<BR>[Called By]<UL><LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::basic_filebuf&lang;char, std::char_traits&lang;char&rang;&rang;::~basic_filebuf__deallocating()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> ios.o(.constdata__ZTVSt13basic_filebufIcSt11char_traitsIcEE)
</UL>
<P><STRONG><a name="[467]"></a>std::basic_filebuf&lang;char, std::char_traits&lang;char&rang;&rang;::~basic_filebuf__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, ios.o(t._ZNSt13basic_filebufIcSt11char_traitsIcEED1Ev), UNUSED)

<P><STRONG><a name="[37b]"></a>std::basic_filebuf&lang;wchar_t, std::char_traits&lang;wchar_t&rang;&rang;::_C_unshift()</STRONG> (Thumb, 114 bytes, Stack size 96 bytes, ios.o(t._ZNSt13basic_filebufIwSt11char_traitsIwEE10_C_unshiftEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 968 + Unknown Stack Size
<LI>Call Chain = std::basic_filebuf&lang;wchar_t, std::char_traits&lang;wchar_t&rang;&rang;::_C_unshift() &rArr; std::use_facet&lang;std::codecvt&lang;wchar_t, char, std::__mbstate_t&rang;&rang;(const std::locale&) &rArr; std::locale::_C_use_facet(const std::locale::id&, bool, int, __rw::__rw_facet_base*(*)(int, const char*, unsigned)) const &rArr; std::locale::_C_make_facet(const std::locale::id&, bool, int, __rw::__rw_facet_base*(*)(int, const char*, unsigned)) const &rArr; __rw::__rw_throw(int, ...) &rArr; std::__rw_exception::_C_vformat(int, std::__va_list) &rArr; __rw::__rw_vfmatstr(char*, unsigned, int, std::__va_list) &rArr; std::locale::locale() &rArr; std::locale::_C_init() &rArr; __rw::__rw_locale_imp::__rw_locale_imp(const char*, unsigned, unsigned) &rArr; __aeabi_vec_new_cookie &rArr; __cxa_vec_new &rArr; __ARM_array_new_general &rArr; __cxa_rethrow &rArr; _Unwind_RaiseException &rArr; __ARM_Unwind_RaiseException &rArr; malloc &rArr; _malloc_internal &rArr; __Heap_Full &rArr; __Heap_ProvideMemory &rArr; _free_internal &rArr; _mutex_release
</UL>
<BR>[Calls]<UL><LI><a href="#[37c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::use_facet&lang;std::codecvt&lang;wchar_t, char, std::__mbstate_t&rang;&rang;(const std::locale&)
<LI><a href="#[37d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::codecvt&lang;wchar_t, char, std::__mbstate_t&rang;::encoding() const
<LI><a href="#[28c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rw_file_t::_C_write(const void*, unsigned, unsigned)
<LI><a href="#[36c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mbsinit
</UL>
<BR>[Called By]<UL><LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::basic_filebuf&lang;wchar_t, std::char_traits&lang;wchar_t&rang;&rang;::seekoff(long, std::ios_base::_C_seekdir, int)
<LI><a href="#[380]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::basic_filebuf&lang;wchar_t, std::char_traits&lang;wchar_t&rang;&rang;::close()
</UL>

<P><STRONG><a name="[37e]"></a>std::basic_filebuf&lang;wchar_t, std::char_traits&lang;wchar_t&rang;&rang;::_C_file_seek(long, int)</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, ios.o(t._ZNSt13basic_filebufIwSt11char_traitsIwEE12_C_file_seekEli))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = std::basic_filebuf&lang;wchar_t, std::char_traits&lang;wchar_t&rang;&rang;::_C_file_seek(long, int) &rArr; __rw::__rw_file_t::_C_seek(long, int) &rArr; fseek &rArr; _fseek &rArr; _ftell_internal &rArr; __aeabi_errno_addr &rArr; __user_perthread_libspace
</UL>
<BR>[Calls]<UL><LI><a href="#[36e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::fpos&lang;std::__mbstate_t&rang;::fpos(long)
<LI><a href="#[289]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rw_file_t::_C_seek(long, int)
</UL>
<BR>[Called By]<UL><LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::basic_filebuf&lang;wchar_t, std::char_traits&lang;wchar_t&rang;&rang;::showmanyc()
<LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::basic_filebuf&lang;wchar_t, std::char_traits&lang;wchar_t&rang;&rang;::overflow(int)
<LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::basic_filebuf&lang;wchar_t, std::char_traits&lang;wchar_t&rang;&rang;::seekpos(std::fpos&lang;std::__mbstate_t&rang;, int)
<LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::basic_filebuf&lang;wchar_t, std::char_traits&lang;wchar_t&rang;&rang;::seekoff(long, std::ios_base::_C_seekdir, int)
<LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::basic_filebuf&lang;wchar_t, std::char_traits&lang;wchar_t&rang;&rang;::sync()
</UL>

<P><STRONG><a name="[91]"></a>std::basic_filebuf&lang;wchar_t, std::char_traits&lang;wchar_t&rang;&rang;::sync()</STRONG> (Thumb, 298 bytes, Stack size 624 bytes, ios.o(t._ZNSt13basic_filebufIwSt11char_traitsIwEE4syncEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 1496 + Unknown Stack Size
<LI>Call Chain = std::basic_filebuf&lang;wchar_t, std::char_traits&lang;wchar_t&rang;&rang;::sync() &rArr; std::use_facet&lang;std::codecvt&lang;wchar_t, char, std::__mbstate_t&rang;&rang;(const std::locale&) &rArr; std::locale::_C_use_facet(const std::locale::id&, bool, int, __rw::__rw_facet_base*(*)(int, const char*, unsigned)) const &rArr; std::locale::_C_make_facet(const std::locale::id&, bool, int, __rw::__rw_facet_base*(*)(int, const char*, unsigned)) const &rArr; __rw::__rw_throw(int, ...) &rArr; std::__rw_exception::_C_vformat(int, std::__va_list) &rArr; __rw::__rw_vfmatstr(char*, unsigned, int, std::__va_list) &rArr; std::locale::locale() &rArr; std::locale::_C_init() &rArr; __rw::__rw_locale_imp::__rw_locale_imp(const char*, unsigned, unsigned) &rArr; __aeabi_vec_new_cookie &rArr; __cxa_vec_new &rArr; __ARM_array_new_general &rArr; __cxa_rethrow &rArr; _Unwind_RaiseException &rArr; __ARM_Unwind_RaiseException &rArr; malloc &rArr; _malloc_internal &rArr; __Heap_Full &rArr; __Heap_ProvideMemory &rArr; _free_internal &rArr; _mutex_release
</UL>
<BR>[Calls]<UL><LI><a href="#[37c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::use_facet&lang;std::codecvt&lang;wchar_t, char, std::__mbstate_t&rang;&rang;(const std::locale&)
<LI><a href="#[36f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::fpos&lang;std::__mbstate_t&rang;::operator =(const std::fpos&lang;std::__mbstate_t&rang;&)
<LI><a href="#[36e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::fpos&lang;std::__mbstate_t&rang;::fpos(long)
<LI><a href="#[37e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::basic_filebuf&lang;wchar_t, std::char_traits&lang;wchar_t&rang;&rang;::_C_file_seek(long, int)
<LI><a href="#[351]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::fpos&lang;std::__mbstate_t&rang;::operator +(long) const
<LI><a href="#[350]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::fpos&lang;std::__mbstate_t&rang;::operator ==(const std::fpos&lang;std::__mbstate_t&rang;&) const
<LI><a href="#[34c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::basic_streambuf&lang;wchar_t, std::char_traits&lang;wchar_t&rang;&rang;::_C_is_eof(int) const
<LI><a href="#[2e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::char_traits&lang;wchar_t&rang;::move(wchar_t*, const wchar_t*, unsigned)
<LI><a href="#[37d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::codecvt&lang;wchar_t, char, std::__mbstate_t&rang;::encoding() const
<LI><a href="#[37f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::codecvt&lang;wchar_t, char, std::__mbstate_t&rang;::out(std::__mbstate_t&, const wchar_t*, const wchar_t*, const wchar_t*&, char*, char*, char*&) const
</UL>
<BR>[Address Reference Count : 1]<UL><LI> ios.o(.constdata__ZTVSt13basic_filebufIwSt11char_traitsIwEE)
</UL>
<P><STRONG><a name="[380]"></a>std::basic_filebuf&lang;wchar_t, std::char_traits&lang;wchar_t&rang;&rang;::close()</STRONG> (Thumb, 146 bytes, Stack size 32 bytes, ios.o(t._ZNSt13basic_filebufIwSt11char_traitsIwEE5closeEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 1000 + Unknown Stack Size
<LI>Call Chain = std::basic_filebuf&lang;wchar_t, std::char_traits&lang;wchar_t&rang;&rang;::close() &rArr; std::basic_filebuf&lang;wchar_t, std::char_traits&lang;wchar_t&rang;&rang;::_C_unshift() &rArr; std::use_facet&lang;std::codecvt&lang;wchar_t, char, std::__mbstate_t&rang;&rang;(const std::locale&) &rArr; std::locale::_C_use_facet(const std::locale::id&, bool, int, __rw::__rw_facet_base*(*)(int, const char*, unsigned)) const &rArr; std::locale::_C_make_facet(const std::locale::id&, bool, int, __rw::__rw_facet_base*(*)(int, const char*, unsigned)) const &rArr; __rw::__rw_throw(int, ...) &rArr; std::__rw_exception::_C_vformat(int, std::__va_list) &rArr; __rw::__rw_vfmatstr(char*, unsigned, int, std::__va_list) &rArr; std::locale::locale() &rArr; std::locale::_C_init() &rArr; __rw::__rw_locale_imp::__rw_locale_imp(const char*, unsigned, unsigned) &rArr; __aeabi_vec_new_cookie &rArr; __cxa_vec_new &rArr; __ARM_array_new_general &rArr; __cxa_rethrow &rArr; _Unwind_RaiseException &rArr; __ARM_Unwind_RaiseException &rArr; malloc &rArr; _malloc_internal &rArr; __Heap_Full &rArr; __Heap_ProvideMemory &rArr; _free_internal &rArr; _mutex_release
</UL>
<BR>[Calls]<UL><LI><a href="#[36f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::fpos&lang;std::__mbstate_t&rang;::operator =(const std::fpos&lang;std::__mbstate_t&rang;&)
<LI><a href="#[36e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::fpos&lang;std::__mbstate_t&rang;::fpos(long)
<LI><a href="#[37b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::basic_filebuf&lang;wchar_t, std::char_traits&lang;wchar_t&rang;&rang;::_C_unshift()
<LI><a href="#[34c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::basic_streambuf&lang;wchar_t, std::char_traits&lang;wchar_t&rang;&rang;::_C_is_eof(int) const
<LI><a href="#[34a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::basic_filebuf&lang;wchar_t, std::char_traits&lang;wchar_t&rang;&rang;::is_open() const
<LI><a href="#[2c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rw_file_t::_C_is_std() const
<LI><a href="#[28a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rw_file_t::_C_close()
</UL>
<BR>[Called By]<UL><LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::basic_filebuf&lang;wchar_t, std::char_traits&lang;wchar_t&rang;&rang;::~basic_filebuf()
</UL>

<P><STRONG><a name="[8d]"></a>std::basic_filebuf&lang;wchar_t, std::char_traits&lang;wchar_t&rang;&rang;::uflow()</STRONG> (Thumb, 34 bytes, Stack size 16 bytes, ios.o(t._ZNSt13basic_filebufIwSt11char_traitsIwEE5uflowEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = std::basic_filebuf&lang;wchar_t, std::char_traits&lang;wchar_t&rang;&rang;::uflow() &rArr; std::basic_streambuf&lang;wchar_t, std::char_traits&lang;wchar_t&rang;&rang;::_C_is_eof(int) const
</UL>
<BR>[Calls]<UL><LI><a href="#[34c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::basic_streambuf&lang;wchar_t, std::char_traits&lang;wchar_t&rang;&rang;::_C_is_eof(int) const
</UL>
<BR>[Address Reference Count : 1]<UL><LI> ios.o(.constdata__ZTVSt13basic_filebufIwSt11char_traitsIwEE)
</UL>
<P><STRONG><a name="[87]"></a>std::basic_filebuf&lang;wchar_t, std::char_traits&lang;wchar_t&rang;&rang;::setbuf(wchar_t*, long)</STRONG> (Thumb, 108 bytes, Stack size 24 bytes, ios.o(t._ZNSt13basic_filebufIwSt11char_traitsIwEE6setbufEPwl))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = std::basic_filebuf&lang;wchar_t, std::char_traits&lang;wchar_t&rang;&rang;::setbuf(wchar_t*, long) &rArr; operator new[] (unsigned) &rArr; operator new(unsigned) &rArr; malloc &rArr; _malloc_internal &rArr; __Heap_Full &rArr; __Heap_ProvideMemory &rArr; _free_internal &rArr; _mutex_release
</UL>
<BR>[Calls]<UL><LI><a href="#[382]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::basic_streambuf&lang;wchar_t, std::char_traits&lang;wchar_t&rang;&rang;::_C_set_unbuffered(bool)
<LI><a href="#[381]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::basic_streambuf&lang;wchar_t, std::char_traits&lang;wchar_t&rang;&rang;::_C_own_buf(bool)
<LI><a href="#[290]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;operator new[] (unsigned)
<LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;operator delete[] (void*)
</UL>
<BR>[Called By]<UL><LI><a href="#[302]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::basic_filebuf&lang;wchar_t, std::char_traits&lang;wchar_t&rang;&rang;::basic_filebuf(int, wchar_t*, long)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> ios.o(.constdata__ZTVSt13basic_filebufIwSt11char_traitsIwEE)
</UL>
<P><STRONG><a name="[90]"></a>std::basic_filebuf&lang;wchar_t, std::char_traits&lang;wchar_t&rang;&rang;::xsputn(const wchar_t*, long)</STRONG> (Thumb, 98 bytes, Stack size 24 bytes, ios.o(t._ZNSt13basic_filebufIwSt11char_traitsIwEE6xsputnEPKwl))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = std::basic_filebuf&lang;wchar_t, std::char_traits&lang;wchar_t&rang;&rang;::xsputn(const wchar_t*, long) &rArr; std::basic_streambuf&lang;wchar_t, std::char_traits&lang;wchar_t&rang;&rang;::_C_is_eof(int) const
</UL>
<BR>[Calls]<UL><LI><a href="#[383]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::basic_streambuf&lang;wchar_t, std::char_traits&lang;wchar_t&rang;&rang;::sputc(wchar_t)
<LI><a href="#[34c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::basic_streambuf&lang;wchar_t, std::char_traits&lang;wchar_t&rang;&rang;::_C_is_eof(int) const
<LI><a href="#[2df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::char_traits&lang;wchar_t&rang;::copy(wchar_t*, const wchar_t*, unsigned)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> ios.o(.constdata__ZTVSt13basic_filebufIwSt11char_traitsIwEE)
</UL>
<P><STRONG><a name="[88]"></a>std::basic_filebuf&lang;wchar_t, std::char_traits&lang;wchar_t&rang;&rang;::seekoff(long, std::ios_base::_C_seekdir, int)</STRONG> (Thumb, 180 bytes, Stack size 64 bytes, ios.o(t._ZNSt13basic_filebufIwSt11char_traitsIwEE7seekoffElNSt8ios_base10_C_seekdirEi))
<BR><BR>[Stack]<UL><LI>Max Depth = 1032 + Unknown Stack Size
<LI>Call Chain = std::basic_filebuf&lang;wchar_t, std::char_traits&lang;wchar_t&rang;&rang;::seekoff(long, std::ios_base::_C_seekdir, int) &rArr; std::basic_filebuf&lang;wchar_t, std::char_traits&lang;wchar_t&rang;&rang;::_C_unshift() &rArr; std::use_facet&lang;std::codecvt&lang;wchar_t, char, std::__mbstate_t&rang;&rang;(const std::locale&) &rArr; std::locale::_C_use_facet(const std::locale::id&, bool, int, __rw::__rw_facet_base*(*)(int, const char*, unsigned)) const &rArr; std::locale::_C_make_facet(const std::locale::id&, bool, int, __rw::__rw_facet_base*(*)(int, const char*, unsigned)) const &rArr; __rw::__rw_throw(int, ...) &rArr; std::__rw_exception::_C_vformat(int, std::__va_list) &rArr; __rw::__rw_vfmatstr(char*, unsigned, int, std::__va_list) &rArr; std::locale::locale() &rArr; std::locale::_C_init() &rArr; __rw::__rw_locale_imp::__rw_locale_imp(const char*, unsigned, unsigned) &rArr; __aeabi_vec_new_cookie &rArr; __cxa_vec_new &rArr; __ARM_array_new_general &rArr; __cxa_rethrow &rArr; _Unwind_RaiseException &rArr; __ARM_Unwind_RaiseException &rArr; malloc &rArr; _malloc_internal &rArr; __Heap_Full &rArr; __Heap_ProvideMemory &rArr; _free_internal &rArr; _mutex_release
</UL>
<BR>[Calls]<UL><LI><a href="#[37c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::use_facet&lang;std::codecvt&lang;wchar_t, char, std::__mbstate_t&rang;&rang;(const std::locale&)
<LI><a href="#[36f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::fpos&lang;std::__mbstate_t&rang;::operator =(const std::fpos&lang;std::__mbstate_t&rang;&)
<LI><a href="#[36e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::fpos&lang;std::__mbstate_t&rang;::fpos(long)
<LI><a href="#[34e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::fpos&lang;std::__mbstate_t&rang;::fpos(const std::fpos&lang;std::__mbstate_t&rang;&)
<LI><a href="#[384]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::basic_streambuf&lang;wchar_t, std::char_traits&lang;wchar_t&rang;&rang;::_C_out_last(bool)
<LI><a href="#[37e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::basic_filebuf&lang;wchar_t, std::char_traits&lang;wchar_t&rang;&rang;::_C_file_seek(long, int)
<LI><a href="#[37b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::basic_filebuf&lang;wchar_t, std::char_traits&lang;wchar_t&rang;&rang;::_C_unshift()
<LI><a href="#[34f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::fpos&lang;std::__mbstate_t&rang;::operator !=(const std::fpos&lang;std::__mbstate_t&rang;&) const
<LI><a href="#[34a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::basic_filebuf&lang;wchar_t, std::char_traits&lang;wchar_t&rang;&rang;::is_open() const
<LI><a href="#[37d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::codecvt&lang;wchar_t, char, std::__mbstate_t&rang;::encoding() const
</UL>
<BR>[Address Reference Count : 1]<UL><LI> ios.o(.constdata__ZTVSt13basic_filebufIwSt11char_traitsIwEE)
</UL>
<P><STRONG><a name="[89]"></a>std::basic_filebuf&lang;wchar_t, std::char_traits&lang;wchar_t&rang;&rang;::seekpos(std::fpos&lang;std::__mbstate_t&rang;, int)</STRONG> (Thumb, 148 bytes, Stack size 48 bytes, ios.o(t._ZNSt13basic_filebufIwSt11char_traitsIwEE7seekposESt4fposISt11__mbstate_tEi))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = std::basic_filebuf&lang;wchar_t, std::char_traits&lang;wchar_t&rang;&rang;::seekpos(std::fpos&lang;std::__mbstate_t&rang;, int) &rArr; std::basic_filebuf&lang;wchar_t, std::char_traits&lang;wchar_t&rang;&rang;::_C_file_seek(long, int) &rArr; __rw::__rw_file_t::_C_seek(long, int) &rArr; fseek &rArr; _fseek &rArr; _ftell_internal &rArr; __aeabi_errno_addr &rArr; __user_perthread_libspace
</UL>
<BR>[Calls]<UL><LI><a href="#[36f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::fpos&lang;std::__mbstate_t&rang;::operator =(const std::fpos&lang;std::__mbstate_t&rang;&)
<LI><a href="#[36e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::fpos&lang;std::__mbstate_t&rang;::fpos(long)
<LI><a href="#[34e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::fpos&lang;std::__mbstate_t&rang;::fpos(const std::fpos&lang;std::__mbstate_t&rang;&)
<LI><a href="#[384]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::basic_streambuf&lang;wchar_t, std::char_traits&lang;wchar_t&rang;&rang;::_C_out_last(bool)
<LI><a href="#[37e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::basic_filebuf&lang;wchar_t, std::char_traits&lang;wchar_t&rang;&rang;::_C_file_seek(long, int)
<LI><a href="#[350]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::fpos&lang;std::__mbstate_t&rang;::operator ==(const std::fpos&lang;std::__mbstate_t&rang;&) const
<LI><a href="#[34c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::basic_streambuf&lang;wchar_t, std::char_traits&lang;wchar_t&rang;&rang;::_C_is_eof(int) const
<LI><a href="#[34a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::basic_filebuf&lang;wchar_t, std::char_traits&lang;wchar_t&rang;&rang;::is_open() const
</UL>
<BR>[Address Reference Count : 1]<UL><LI> ios.o(.constdata__ZTVSt13basic_filebufIwSt11char_traitsIwEE)
</UL>
<P><STRONG><a name="[8e]"></a>std::basic_filebuf&lang;wchar_t, std::char_traits&lang;wchar_t&rang;&rang;::overflow(int)</STRONG> (Thumb, 366 bytes, Stack size 600 bytes, ios.o(t._ZNSt13basic_filebufIwSt11char_traitsIwEE8overflowEi))
<BR><BR>[Stack]<UL><LI>Max Depth = 1472 + Unknown Stack Size
<LI>Call Chain = std::basic_filebuf&lang;wchar_t, std::char_traits&lang;wchar_t&rang;&rang;::overflow(int) &rArr; std::use_facet&lang;std::codecvt&lang;wchar_t, char, std::__mbstate_t&rang;&rang;(const std::locale&) &rArr; std::locale::_C_use_facet(const std::locale::id&, bool, int, __rw::__rw_facet_base*(*)(int, const char*, unsigned)) const &rArr; std::locale::_C_make_facet(const std::locale::id&, bool, int, __rw::__rw_facet_base*(*)(int, const char*, unsigned)) const &rArr; __rw::__rw_throw(int, ...) &rArr; std::__rw_exception::_C_vformat(int, std::__va_list) &rArr; __rw::__rw_vfmatstr(char*, unsigned, int, std::__va_list) &rArr; std::locale::locale() &rArr; std::locale::_C_init() &rArr; __rw::__rw_locale_imp::__rw_locale_imp(const char*, unsigned, unsigned) &rArr; __aeabi_vec_new_cookie &rArr; __cxa_vec_new &rArr; __ARM_array_new_general &rArr; __cxa_rethrow &rArr; _Unwind_RaiseException &rArr; __ARM_Unwind_RaiseException &rArr; malloc &rArr; _malloc_internal &rArr; __Heap_Full &rArr; __Heap_ProvideMemory &rArr; _free_internal &rArr; _mutex_release
</UL>
<BR>[Calls]<UL><LI><a href="#[37c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::use_facet&lang;std::codecvt&lang;wchar_t, char, std::__mbstate_t&rang;&rang;(const std::locale&)
<LI><a href="#[36f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::fpos&lang;std::__mbstate_t&rang;::operator =(const std::fpos&lang;std::__mbstate_t&rang;&)
<LI><a href="#[383]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::basic_streambuf&lang;wchar_t, std::char_traits&lang;wchar_t&rang;&rang;::sputc(wchar_t)
<LI><a href="#[384]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::basic_streambuf&lang;wchar_t, std::char_traits&lang;wchar_t&rang;&rang;::_C_out_last(bool)
<LI><a href="#[37e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::basic_filebuf&lang;wchar_t, std::char_traits&lang;wchar_t&rang;&rang;::_C_file_seek(long, int)
<LI><a href="#[34c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::basic_streambuf&lang;wchar_t, std::char_traits&lang;wchar_t&rang;&rang;::_C_is_eof(int) const
<LI><a href="#[34a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::basic_filebuf&lang;wchar_t, std::char_traits&lang;wchar_t&rang;&rang;::is_open() const
<LI><a href="#[2e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::char_traits&lang;wchar_t&rang;::not_eof(const int&)
<LI><a href="#[37f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::codecvt&lang;wchar_t, char, std::__mbstate_t&rang;::out(std::__mbstate_t&, const wchar_t*, const wchar_t*, const wchar_t*&, char*, char*, char*&) const
<LI><a href="#[385]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::codecvt&lang;wchar_t, char, std::__mbstate_t&rang;::always_noconv() const
<LI><a href="#[28c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rw_file_t::_C_write(const void*, unsigned, unsigned)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> ios.o(.constdata__ZTVSt13basic_filebufIwSt11char_traitsIwEE)
</UL>
<P><STRONG><a name="[8f]"></a>std::basic_filebuf&lang;wchar_t, std::char_traits&lang;wchar_t&rang;&rang;::pbackfail(int)</STRONG> (Thumb, 152 bytes, Stack size 56 bytes, ios.o(t._ZNSt13basic_filebufIwSt11char_traitsIwEE9pbackfailEi))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = std::basic_filebuf&lang;wchar_t, std::char_traits&lang;wchar_t&rang;&rang;::pbackfail(int) &rArr; std::basic_streambuf&lang;wchar_t, std::char_traits&lang;wchar_t&rang;&rang;::_C_is_eof(int) const
</UL>
<BR>[Calls]<UL><LI><a href="#[36e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::fpos&lang;std::__mbstate_t&rang;::fpos(long)
<LI><a href="#[350]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::fpos&lang;std::__mbstate_t&rang;::operator ==(const std::fpos&lang;std::__mbstate_t&rang;&) const
<LI><a href="#[34c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::basic_streambuf&lang;wchar_t, std::char_traits&lang;wchar_t&rang;&rang;::_C_is_eof(int) const
<LI><a href="#[386]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::basic_streambuf&lang;wchar_t, std::char_traits&lang;wchar_t&rang;&rang;::_C_putback_avail() const
<LI><a href="#[34a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::basic_filebuf&lang;wchar_t, std::char_traits&lang;wchar_t&rang;&rang;::is_open() const
<LI><a href="#[2e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::char_traits&lang;wchar_t&rang;::not_eof(const int&)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> ios.o(.constdata__ZTVSt13basic_filebufIwSt11char_traitsIwEE)
</UL>
<P><STRONG><a name="[8a]"></a>std::basic_filebuf&lang;wchar_t, std::char_traits&lang;wchar_t&rang;&rang;::showmanyc()</STRONG> (Thumb, 166 bytes, Stack size 72 bytes, ios.o(t._ZNSt13basic_filebufIwSt11char_traitsIwEE9showmanycEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 944 + Unknown Stack Size
<LI>Call Chain = std::basic_filebuf&lang;wchar_t, std::char_traits&lang;wchar_t&rang;&rang;::showmanyc() &rArr; std::use_facet&lang;std::codecvt&lang;wchar_t, char, std::__mbstate_t&rang;&rang;(const std::locale&) &rArr; std::locale::_C_use_facet(const std::locale::id&, bool, int, __rw::__rw_facet_base*(*)(int, const char*, unsigned)) const &rArr; std::locale::_C_make_facet(const std::locale::id&, bool, int, __rw::__rw_facet_base*(*)(int, const char*, unsigned)) const &rArr; __rw::__rw_throw(int, ...) &rArr; std::__rw_exception::_C_vformat(int, std::__va_list) &rArr; __rw::__rw_vfmatstr(char*, unsigned, int, std::__va_list) &rArr; std::locale::locale() &rArr; std::locale::_C_init() &rArr; __rw::__rw_locale_imp::__rw_locale_imp(const char*, unsigned, unsigned) &rArr; __aeabi_vec_new_cookie &rArr; __cxa_vec_new &rArr; __ARM_array_new_general &rArr; __cxa_rethrow &rArr; _Unwind_RaiseException &rArr; __ARM_Unwind_RaiseException &rArr; malloc &rArr; _malloc_internal &rArr; __Heap_Full &rArr; __Heap_ProvideMemory &rArr; _free_internal &rArr; _mutex_release
</UL>
<BR>[Calls]<UL><LI><a href="#[37c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::use_facet&lang;std::codecvt&lang;wchar_t, char, std::__mbstate_t&rang;&rang;(const std::locale&)
<LI><a href="#[36e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::fpos&lang;std::__mbstate_t&rang;::fpos(long)
<LI><a href="#[37e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::basic_filebuf&lang;wchar_t, std::char_traits&lang;wchar_t&rang;&rang;::_C_file_seek(long, int)
<LI><a href="#[34f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::fpos&lang;std::__mbstate_t&rang;::operator !=(const std::fpos&lang;std::__mbstate_t&rang;&) const
<LI><a href="#[34d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::fpos&lang;std::__mbstate_t&rang;::operator -(const std::fpos&lang;std::__mbstate_t&rang;&) const
<LI><a href="#[350]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::fpos&lang;std::__mbstate_t&rang;::operator ==(const std::fpos&lang;std::__mbstate_t&rang;&) const
<LI><a href="#[34a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::basic_filebuf&lang;wchar_t, std::char_traits&lang;wchar_t&rang;&rang;::is_open() const
<LI><a href="#[385]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::codecvt&lang;wchar_t, char, std::__mbstate_t&rang;::always_noconv() const
<LI><a href="#[387]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::codecvt&lang;wchar_t, char, std::__mbstate_t&rang;::max_length() const
</UL>
<BR>[Address Reference Count : 1]<UL><LI> ios.o(.constdata__ZTVSt13basic_filebufIwSt11char_traitsIwEE)
</UL>
<P><STRONG><a name="[8c]"></a>std::basic_filebuf&lang;wchar_t, std::char_traits&lang;wchar_t&rang;&rang;::underflow()</STRONG> (Thumb, 422 bytes, Stack size 608 bytes, ios.o(t._ZNSt13basic_filebufIwSt11char_traitsIwEE9underflowEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 1480 + Unknown Stack Size
<LI>Call Chain = std::basic_filebuf&lang;wchar_t, std::char_traits&lang;wchar_t&rang;&rang;::underflow() &rArr; std::use_facet&lang;std::codecvt&lang;wchar_t, char, std::__mbstate_t&rang;&rang;(const std::locale&) &rArr; std::locale::_C_use_facet(const std::locale::id&, bool, int, __rw::__rw_facet_base*(*)(int, const char*, unsigned)) const &rArr; std::locale::_C_make_facet(const std::locale::id&, bool, int, __rw::__rw_facet_base*(*)(int, const char*, unsigned)) const &rArr; __rw::__rw_throw(int, ...) &rArr; std::__rw_exception::_C_vformat(int, std::__va_list) &rArr; __rw::__rw_vfmatstr(char*, unsigned, int, std::__va_list) &rArr; std::locale::locale() &rArr; std::locale::_C_init() &rArr; __rw::__rw_locale_imp::__rw_locale_imp(const char*, unsigned, unsigned) &rArr; __aeabi_vec_new_cookie &rArr; __cxa_vec_new &rArr; __ARM_array_new_general &rArr; __cxa_rethrow &rArr; _Unwind_RaiseException &rArr; __ARM_Unwind_RaiseException &rArr; malloc &rArr; _malloc_internal &rArr; __Heap_Full &rArr; __Heap_ProvideMemory &rArr; _free_internal &rArr; _mutex_release
</UL>
<BR>[Calls]<UL><LI><a href="#[37c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::use_facet&lang;std::codecvt&lang;wchar_t, char, std::__mbstate_t&rang;&rang;(const std::locale&)
<LI><a href="#[378]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::min&lang;long&rang;(const T1&, const T1&)
<LI><a href="#[379]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::min&lang;int&rang;(const T1&, const T1&)
<LI><a href="#[36f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::fpos&lang;std::__mbstate_t&rang;::operator =(const std::fpos&lang;std::__mbstate_t&rang;&)
<LI><a href="#[384]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::basic_streambuf&lang;wchar_t, std::char_traits&lang;wchar_t&rang;&rang;::_C_out_last(bool)
<LI><a href="#[386]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::basic_streambuf&lang;wchar_t, std::char_traits&lang;wchar_t&rang;&rang;::_C_putback_avail() const
<LI><a href="#[34a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::basic_filebuf&lang;wchar_t, std::char_traits&lang;wchar_t&rang;&rang;::is_open() const
<LI><a href="#[2e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::char_traits&lang;wchar_t&rang;::move(wchar_t*, const wchar_t*, unsigned)
<LI><a href="#[385]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::codecvt&lang;wchar_t, char, std::__mbstate_t&rang;::always_noconv() const
<LI><a href="#[288]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rw_file_t::_C_read(void*, unsigned, unsigned)
<LI><a href="#[24d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memmove
</UL>
<BR>[Address Reference Count : 1]<UL><LI> ios.o(.constdata__ZTVSt13basic_filebufIwSt11char_traitsIwEE)
</UL>
<P><STRONG><a name="[302]"></a>std::basic_filebuf&lang;wchar_t, std::char_traits&lang;wchar_t&rang;&rang;::basic_filebuf(int, wchar_t*, long)</STRONG> (Thumb, 118 bytes, Stack size 32 bytes, ios.o(t._ZNSt13basic_filebufIwSt11char_traitsIwEEC1EiPwl))
<BR><BR>[Stack]<UL><LI>Max Depth = 832 + Unknown Stack Size
<LI>Call Chain = std::basic_filebuf&lang;wchar_t, std::char_traits&lang;wchar_t&rang;&rang;::basic_filebuf(int, wchar_t*, long) &rArr; __rw::__rw_file_t::__rw_file_t(int) &rArr; __rw::__rw_throw(int, ...) &rArr; std::__rw_exception::_C_vformat(int, std::__va_list) &rArr; __rw::__rw_vfmatstr(char*, unsigned, int, std::__va_list) &rArr; std::locale::locale() &rArr; std::locale::_C_init() &rArr; __rw::__rw_locale_imp::__rw_locale_imp(const char*, unsigned, unsigned) &rArr; __aeabi_vec_new_cookie &rArr; __cxa_vec_new &rArr; __ARM_array_new_general &rArr; __cxa_rethrow &rArr; _Unwind_RaiseException &rArr; __ARM_Unwind_RaiseException &rArr; malloc &rArr; _malloc_internal &rArr; __Heap_Full &rArr; __Heap_ProvideMemory &rArr; _free_internal &rArr; _mutex_release
</UL>
<BR>[Calls]<UL><LI><a href="#[36e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::fpos&lang;std::__mbstate_t&rang;::fpos(long)
<LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::basic_filebuf&lang;wchar_t, std::char_traits&lang;wchar_t&rang;&rang;::setbuf(wchar_t*, long)
<LI><a href="#[295]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::locale::locale()
<LI><a href="#[28d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rw_file_t::__rw_file_t(int)
<LI><a href="#[37a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rw_file_t::_C_get_mode(int)
</UL>
<BR>[Called By]<UL><LI><a href="#[154]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::ios_base::Init::Init()
</UL>

<P><STRONG><a name="[468]"></a>std::basic_filebuf&lang;wchar_t, std::char_traits&lang;wchar_t&rang;&rang;::basic_filebuf__sub_object(int, wchar_t*, long)</STRONG> (Thumb, 0 bytes, Stack size 32 bytes, ios.o(t._ZNSt13basic_filebufIwSt11char_traitsIwEEC1EiPwl), UNUSED)

<P><STRONG><a name="[86]"></a>std::basic_filebuf&lang;wchar_t, std::char_traits&lang;wchar_t&rang;&rang;::~basic_filebuf__deallocating()</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, ios.o(t._ZNSt13basic_filebufIwSt11char_traitsIwEED0Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 1016 + Unknown Stack Size
<LI>Call Chain = std::basic_filebuf&lang;wchar_t, std::char_traits&lang;wchar_t&rang;&rang;::~basic_filebuf__deallocating() &rArr; std::basic_filebuf&lang;wchar_t, std::char_traits&lang;wchar_t&rang;&rang;::~basic_filebuf() &rArr; std::basic_filebuf&lang;wchar_t, std::char_traits&lang;wchar_t&rang;&rang;::close() &rArr; std::basic_filebuf&lang;wchar_t, std::char_traits&lang;wchar_t&rang;&rang;::_C_unshift() &rArr; std::use_facet&lang;std::codecvt&lang;wchar_t, char, std::__mbstate_t&rang;&rang;(const std::locale&) &rArr; std::locale::_C_use_facet(const std::locale::id&, bool, int, __rw::__rw_facet_base*(*)(int, const char*, unsigned)) const &rArr; std::locale::_C_make_facet(const std::locale::id&, bool, int, __rw::__rw_facet_base*(*)(int, const char*, unsigned)) const &rArr; __rw::__rw_throw(int, ...) &rArr; std::__rw_exception::_C_vformat(int, std::__va_list) &rArr; __rw::__rw_vfmatstr(char*, unsigned, int, std::__va_list) &rArr; std::locale::locale() &rArr; std::locale::_C_init() &rArr; __rw::__rw_locale_imp::__rw_locale_imp(const char*, unsigned, unsigned) &rArr; __aeabi_vec_new_cookie &rArr; __cxa_vec_new &rArr; __ARM_array_new_general &rArr; __cxa_rethrow &rArr; _Unwind_RaiseException &rArr; __ARM_Unwind_RaiseException &rArr; malloc &rArr; _malloc_internal &rArr; __Heap_Full &rArr; __Heap_ProvideMemory &rArr; _free_internal &rArr; _mutex_release
</UL>
<BR>[Calls]<UL><LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::basic_filebuf&lang;wchar_t, std::char_traits&lang;wchar_t&rang;&rang;::~basic_filebuf()
<LI><a href="#[282]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;operator delete (void*)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> ios.o(.constdata__ZTVSt13basic_filebufIwSt11char_traitsIwEE)
</UL>
<P><STRONG><a name="[85]"></a>std::basic_filebuf&lang;wchar_t, std::char_traits&lang;wchar_t&rang;&rang;::~basic_filebuf()</STRONG> (Thumb, 38 bytes, Stack size 8 bytes, ios.o(t._ZNSt13basic_filebufIwSt11char_traitsIwEED1Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 1008 + Unknown Stack Size
<LI>Call Chain = std::basic_filebuf&lang;wchar_t, std::char_traits&lang;wchar_t&rang;&rang;::~basic_filebuf() &rArr; std::basic_filebuf&lang;wchar_t, std::char_traits&lang;wchar_t&rang;&rang;::close() &rArr; std::basic_filebuf&lang;wchar_t, std::char_traits&lang;wchar_t&rang;&rang;::_C_unshift() &rArr; std::use_facet&lang;std::codecvt&lang;wchar_t, char, std::__mbstate_t&rang;&rang;(const std::locale&) &rArr; std::locale::_C_use_facet(const std::locale::id&, bool, int, __rw::__rw_facet_base*(*)(int, const char*, unsigned)) const &rArr; std::locale::_C_make_facet(const std::locale::id&, bool, int, __rw::__rw_facet_base*(*)(int, const char*, unsigned)) const &rArr; __rw::__rw_throw(int, ...) &rArr; std::__rw_exception::_C_vformat(int, std::__va_list) &rArr; __rw::__rw_vfmatstr(char*, unsigned, int, std::__va_list) &rArr; std::locale::locale() &rArr; std::locale::_C_init() &rArr; __rw::__rw_locale_imp::__rw_locale_imp(const char*, unsigned, unsigned) &rArr; __aeabi_vec_new_cookie &rArr; __cxa_vec_new &rArr; __ARM_array_new_general &rArr; __cxa_rethrow &rArr; _Unwind_RaiseException &rArr; __ARM_Unwind_RaiseException &rArr; malloc &rArr; _malloc_internal &rArr; __Heap_Full &rArr; __Heap_ProvideMemory &rArr; _free_internal &rArr; _mutex_release
</UL>
<BR>[Calls]<UL><LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::basic_streambuf&lang;wchar_t, std::char_traits&lang;wchar_t&rang;&rang;::~basic_streambuf()
<LI><a href="#[380]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::basic_filebuf&lang;wchar_t, std::char_traits&lang;wchar_t&rang;&rang;::close()
<LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;operator delete[] (void*)
</UL>
<BR>[Called By]<UL><LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::basic_filebuf&lang;wchar_t, std::char_traits&lang;wchar_t&rang;&rang;::~basic_filebuf__deallocating()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> ios.o(.constdata__ZTVSt13basic_filebufIwSt11char_traitsIwEE)
</UL>
<P><STRONG><a name="[469]"></a>std::basic_filebuf&lang;wchar_t, std::char_traits&lang;wchar_t&rang;&rang;::~basic_filebuf__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, ios.o(t._ZNSt13basic_filebufIwSt11char_traitsIwEED1Ev), UNUSED)

<P><STRONG><a name="[305]"></a>std::basic_ostream&lang;wchar_t, std::char_traits&lang;wchar_t&rang;&rang;::basic_ostream(std::basic_streambuf&lang;wchar_t, std::char_traits&lang;wchar_t&rang;&rang;*)</STRONG> (Thumb, 46 bytes, Stack size 16 bytes, ios.o(t._ZNSt13basic_ostreamIwSt11char_traitsIwEEC1EPSt15basic_streambufIwS1_E))
<BR><BR>[Stack]<UL><LI>Max Depth = 904 + Unknown Stack Size
<LI>Call Chain = std::basic_ostream&lang;wchar_t, std::char_traits&lang;wchar_t&rang;&rang;::basic_ostream(std::basic_streambuf&lang;wchar_t, std::char_traits&lang;wchar_t&rang;&rang;*) &rArr; std::basic_ios&lang;wchar_t, std::char_traits&lang;wchar_t&rang;&rang;::init(std::basic_streambuf&lang;wchar_t, std::char_traits&lang;wchar_t&rang;&rang;*) &rArr; std::locale::_C_use_facet(const std::locale::id&, bool, int, __rw::__rw_facet_base*(*)(int, const char*, unsigned)) const &rArr; std::locale::_C_make_facet(const std::locale::id&, bool, int, __rw::__rw_facet_base*(*)(int, const char*, unsigned)) const &rArr; __rw::__rw_throw(int, ...) &rArr; std::__rw_exception::_C_vformat(int, std::__va_list) &rArr; __rw::__rw_vfmatstr(char*, unsigned, int, std::__va_list) &rArr; std::locale::locale() &rArr; std::locale::_C_init() &rArr; __rw::__rw_locale_imp::__rw_locale_imp(const char*, unsigned, unsigned) &rArr; __aeabi_vec_new_cookie &rArr; __cxa_vec_new &rArr; __ARM_array_new_general &rArr; __cxa_rethrow &rArr; _Unwind_RaiseException &rArr; __ARM_Unwind_RaiseException &rArr; malloc &rArr; _malloc_internal &rArr; __Heap_Full &rArr; __Heap_ProvideMemory &rArr; _free_internal &rArr; _mutex_release
</UL>
<BR>[Calls]<UL><LI><a href="#[303]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::basic_ios&lang;wchar_t, std::char_traits&lang;wchar_t&rang;&rang;::basic_ios()
<LI><a href="#[304]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::basic_ios&lang;wchar_t, std::char_traits&lang;wchar_t&rang;&rang;::init(std::basic_streambuf&lang;wchar_t, std::char_traits&lang;wchar_t&rang;&rang;*)
</UL>
<BR>[Called By]<UL><LI><a href="#[154]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::ios_base::Init::Init()
</UL>

<P><STRONG><a name="[372]"></a>std::basic_streambuf&lang;char, std::char_traits&lang;char&rang;&rang;::_C_own_buf(bool)</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, ios.o(t._ZNSt15basic_streambufIcSt11char_traitsIcEE10_C_own_bufEb))
<BR><BR>[Called By]<UL><LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::basic_filebuf&lang;char, std::char_traits&lang;char&rang;&rang;::setbuf(char*, long)
</UL>

<P><STRONG><a name="[374]"></a>std::basic_streambuf&lang;char, std::char_traits&lang;char&rang;&rang;::_C_out_last(bool)</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, ios.o(t._ZNSt15basic_streambufIcSt11char_traitsIcEE11_C_out_lastEb))
<BR><BR>[Called By]<UL><LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::basic_filebuf&lang;char, std::char_traits&lang;char&rang;&rang;::underflow()
<LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::basic_filebuf&lang;char, std::char_traits&lang;char&rang;&rang;::overflow(int)
<LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::basic_filebuf&lang;char, std::char_traits&lang;char&rang;&rang;::seekpos(std::fpos&lang;std::__mbstate_t&rang;, int)
<LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::basic_filebuf&lang;char, std::char_traits&lang;char&rang;&rang;::seekoff(long, std::ios_base::_C_seekdir, int)
</UL>

<P><STRONG><a name="[373]"></a>std::basic_streambuf&lang;char, std::char_traits&lang;char&rang;&rang;::_C_set_unbuffered(bool)</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, ios.o(t._ZNSt15basic_streambufIcSt11char_traitsIcEE17_C_set_unbufferedEb))
<BR><BR>[Called By]<UL><LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::basic_filebuf&lang;char, std::char_traits&lang;char&rang;&rang;::setbuf(char*, long)
</UL>

<P><STRONG><a name="[ab]"></a>std::basic_streambuf&lang;char, std::char_traits&lang;char&rang;&rang;::sync()</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, ios.o(t._ZNSt15basic_streambufIcSt11char_traitsIcEE4syncEv))
<BR>[Address Reference Count : 1]<UL><LI> ios.o(.constdata__ZTVSt15basic_streambufIcSt11char_traitsIcEE)
</UL>
<P><STRONG><a name="[35e]"></a>std::basic_streambuf&lang;char, std::char_traits&lang;char&rang;&rang;::sputc(char)</STRONG> (Thumb, 82 bytes, Stack size 24 bytes, main.o(t._ZNSt15basic_streambufIcSt11char_traitsIcEE5sputcEc))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = std::basic_streambuf&lang;char, std::char_traits&lang;char&rang;&rang;::sputc(char)
</UL>
<BR>[Calls]<UL><LI><a href="#[366]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::char_traits&lang;char&rang;::assign(char&, const char&)
</UL>
<BR>[Called By]<UL><LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::basic_streambuf&lang;char, std::char_traits&lang;char&rang;&rang;::xsputn(const char*, long)
<LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::basic_filebuf&lang;char, std::char_traits&lang;char&rang;&rang;::overflow(int)
<LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::basic_filebuf&lang;char, std::char_traits&lang;char&rang;&rang;::xsputn(const char*, long)
<LI><a href="#[31e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::basic_ostream&lang;char, std::char_traits&lang;char&rang;&rang;::_C_pad(long)
</UL>

<P><STRONG><a name="[a8]"></a>std::basic_streambuf&lang;char, std::char_traits&lang;char&rang;&rang;::uflow()</STRONG> (Thumb, 38 bytes, Stack size 8 bytes, ios.o(t._ZNSt15basic_streambufIcSt11char_traitsIcEE5uflowEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = std::basic_streambuf&lang;char, std::char_traits&lang;char&rang;&rang;::uflow() &rArr; std::basic_streambuf&lang;char, std::char_traits&lang;char&rang;&rang;::_C_is_eof(int) const
</UL>
<BR>[Calls]<UL><LI><a href="#[34b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::basic_streambuf&lang;char, std::char_traits&lang;char&rang;&rang;::_C_is_eof(int) const
</UL>
<BR>[Address Reference Count : 1]<UL><LI> ios.o(.constdata__ZTVSt15basic_streambufIcSt11char_traitsIcEE)
</UL>
<P><STRONG><a name="[a4]"></a>std::basic_streambuf&lang;char, std::char_traits&lang;char&rang;&rang;::setbuf(char*, long)</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, ios.o(t._ZNSt15basic_streambufIcSt11char_traitsIcEE6setbufEPcl))
<BR>[Address Reference Count : 1]<UL><LI> ios.o(.constdata__ZTVSt15basic_streambufIcSt11char_traitsIcEE)
</UL>
<P><STRONG><a name="[aa]"></a>std::basic_streambuf&lang;char, std::char_traits&lang;char&rang;&rang;::xsputn(const char*, long)</STRONG> (Thumb, 46 bytes, Stack size 24 bytes, ios.o(t._ZNSt15basic_streambufIcSt11char_traitsIcEE6xsputnEPKcl))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = std::basic_streambuf&lang;char, std::char_traits&lang;char&rang;&rang;::xsputn(const char*, long) &rArr; std::basic_streambuf&lang;char, std::char_traits&lang;char&rang;&rang;::sputc(char)
</UL>
<BR>[Calls]<UL><LI><a href="#[34b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::basic_streambuf&lang;char, std::char_traits&lang;char&rang;&rang;::_C_is_eof(int) const
<LI><a href="#[35e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::basic_streambuf&lang;char, std::char_traits&lang;char&rang;&rang;::sputc(char)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> ios.o(.constdata__ZTVSt15basic_streambufIcSt11char_traitsIcEE)
</UL>
<P><STRONG><a name="[35d]"></a>std::basic_streambuf&lang;char, std::char_traits&lang;char&rang;&rang;::pubsync()</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, main.o(t._ZNSt15basic_streambufIcSt11char_traitsIcEE7pubsyncEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = std::basic_streambuf&lang;char, std::char_traits&lang;char&rang;&rang;::pubsync()
</UL>
<BR>[Called By]<UL><LI><a href="#[320]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::basic_ostream&lang;char, std::char_traits&lang;char&rang;&rang;::sentry::~sentry()
<LI><a href="#[35c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::basic_ostream&lang;char, std::char_traits&lang;char&rang;&rang;::flush()
</UL>

<P><STRONG><a name="[a5]"></a>std::basic_streambuf&lang;char, std::char_traits&lang;char&rang;&rang;::seekoff(long, std::ios_base::_C_seekdir, int)</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, ios.o(t._ZNSt15basic_streambufIcSt11char_traitsIcEE7seekoffElNSt8ios_base10_C_seekdirEi))
<BR><BR>[Calls]<UL><LI><a href="#[36e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::fpos&lang;std::__mbstate_t&rang;::fpos(long)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> ios.o(.constdata__ZTVSt15basic_streambufIcSt11char_traitsIcEE)
</UL>
<P><STRONG><a name="[a6]"></a>std::basic_streambuf&lang;char, std::char_traits&lang;char&rang;&rang;::seekpos(std::fpos&lang;std::__mbstate_t&rang;, int)</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, ios.o(t._ZNSt15basic_streambufIcSt11char_traitsIcEE7seekposESt4fposISt11__mbstate_tEi))
<BR><BR>[Calls]<UL><LI><a href="#[36e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::fpos&lang;std::__mbstate_t&rang;::fpos(long)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> ios.o(.constdata__ZTVSt15basic_streambufIcSt11char_traitsIcEE)
</UL>
<P><STRONG><a name="[a9]"></a>std::basic_streambuf&lang;char, std::char_traits&lang;char&rang;&rang;::overflow(int)</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, ios.o(t._ZNSt15basic_streambufIcSt11char_traitsIcEE8overflowEi))
<BR>[Address Reference Count : 1]<UL><LI> ios.o(.constdata__ZTVSt15basic_streambufIcSt11char_traitsIcEE)
</UL>
<P><STRONG><a name="[306]"></a>std::basic_streambuf&lang;char, std::char_traits&lang;char&rang;&rang;::pubsetbuf(char*, long)</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, ios.o(t._ZNSt15basic_streambufIcSt11char_traitsIcEE9pubsetbufEPcl))
<BR><BR>[Called By]<UL><LI><a href="#[25]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::ios_base::Init::~Init()
</UL>

<P><STRONG><a name="[a7]"></a>std::basic_streambuf&lang;char, std::char_traits&lang;char&rang;&rang;::underflow()</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, ios.o(t._ZNSt15basic_streambufIcSt11char_traitsIcEE9underflowEv))
<BR>[Address Reference Count : 1]<UL><LI> ios.o(.constdata__ZTVSt15basic_streambufIcSt11char_traitsIcEE)
</UL>
<P><STRONG><a name="[a3]"></a>std::basic_streambuf&lang;char, std::char_traits&lang;char&rang;&rang;::~basic_streambuf__deallocating()</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, ios.o(t._ZNSt15basic_streambufIcSt11char_traitsIcEED0Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 584 + Unknown Stack Size
<LI>Call Chain = std::basic_streambuf&lang;char, std::char_traits&lang;char&rang;&rang;::~basic_streambuf__deallocating() &rArr; std::basic_streambuf&lang;char, std::char_traits&lang;char&rang;&rang;::~basic_streambuf() &rArr; std::locale::~locale() &rArr; __rw::__rw_locale_vector&lang;std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;&rang;::~__rw_locale_vector() &rArr; __aeabi_vec_delete &rArr; __aeabi_vec_dtor_cookie &rArr; __aeabi_vec_dtor &rArr; __ARM_vec_cleanup_rethrow &rArr; __cxa_rethrow &rArr; _Unwind_RaiseException &rArr; __ARM_Unwind_RaiseException &rArr; malloc &rArr; _malloc_internal &rArr; __Heap_Full &rArr; __Heap_ProvideMemory &rArr; _free_internal &rArr; _mutex_release
</UL>
<BR>[Calls]<UL><LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::basic_streambuf&lang;char, std::char_traits&lang;char&rang;&rang;::~basic_streambuf()
<LI><a href="#[282]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;operator delete (void*)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> ios.o(.constdata__ZTVSt15basic_streambufIcSt11char_traitsIcEE)
</UL>
<P><STRONG><a name="[a2]"></a>std::basic_streambuf&lang;char, std::char_traits&lang;char&rang;&rang;::~basic_streambuf()</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, ios.o(t._ZNSt15basic_streambufIcSt11char_traitsIcEED1Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 576 + Unknown Stack Size
<LI>Call Chain = std::basic_streambuf&lang;char, std::char_traits&lang;char&rang;&rang;::~basic_streambuf() &rArr; std::locale::~locale() &rArr; __rw::__rw_locale_vector&lang;std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;&rang;::~__rw_locale_vector() &rArr; __aeabi_vec_delete &rArr; __aeabi_vec_dtor_cookie &rArr; __aeabi_vec_dtor &rArr; __ARM_vec_cleanup_rethrow &rArr; __cxa_rethrow &rArr; _Unwind_RaiseException &rArr; __ARM_Unwind_RaiseException &rArr; malloc &rArr; _malloc_internal &rArr; __Heap_Full &rArr; __Heap_ProvideMemory &rArr; _free_internal &rArr; _mutex_release
</UL>
<BR>[Calls]<UL><LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::locale::~locale()
</UL>
<BR>[Called By]<UL><LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::basic_streambuf&lang;char, std::char_traits&lang;char&rang;&rang;::~basic_streambuf__deallocating()
<LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::basic_filebuf&lang;char, std::char_traits&lang;char&rang;&rang;::~basic_filebuf()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> ios.o(.constdata__ZTVSt15basic_streambufIcSt11char_traitsIcEE)
</UL>
<P><STRONG><a name="[46a]"></a>std::basic_streambuf&lang;char, std::char_traits&lang;char&rang;&rang;::~basic_streambuf__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, ios.o(t._ZNSt15basic_streambufIcSt11char_traitsIcEED1Ev), UNUSED)

<P><STRONG><a name="[381]"></a>std::basic_streambuf&lang;wchar_t, std::char_traits&lang;wchar_t&rang;&rang;::_C_own_buf(bool)</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, ios.o(t._ZNSt15basic_streambufIwSt11char_traitsIwEE10_C_own_bufEb))
<BR><BR>[Called By]<UL><LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::basic_filebuf&lang;wchar_t, std::char_traits&lang;wchar_t&rang;&rang;::setbuf(wchar_t*, long)
</UL>

<P><STRONG><a name="[384]"></a>std::basic_streambuf&lang;wchar_t, std::char_traits&lang;wchar_t&rang;&rang;::_C_out_last(bool)</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, ios.o(t._ZNSt15basic_streambufIwSt11char_traitsIwEE11_C_out_lastEb))
<BR><BR>[Called By]<UL><LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::basic_filebuf&lang;wchar_t, std::char_traits&lang;wchar_t&rang;&rang;::underflow()
<LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::basic_filebuf&lang;wchar_t, std::char_traits&lang;wchar_t&rang;&rang;::overflow(int)
<LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::basic_filebuf&lang;wchar_t, std::char_traits&lang;wchar_t&rang;&rang;::seekpos(std::fpos&lang;std::__mbstate_t&rang;, int)
<LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::basic_filebuf&lang;wchar_t, std::char_traits&lang;wchar_t&rang;&rang;::seekoff(long, std::ios_base::_C_seekdir, int)
</UL>

<P><STRONG><a name="[382]"></a>std::basic_streambuf&lang;wchar_t, std::char_traits&lang;wchar_t&rang;&rang;::_C_set_unbuffered(bool)</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, ios.o(t._ZNSt15basic_streambufIwSt11char_traitsIwEE17_C_set_unbufferedEb))
<BR><BR>[Called By]<UL><LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::basic_filebuf&lang;wchar_t, std::char_traits&lang;wchar_t&rang;&rang;::setbuf(wchar_t*, long)
</UL>

<P><STRONG><a name="[383]"></a>std::basic_streambuf&lang;wchar_t, std::char_traits&lang;wchar_t&rang;&rang;::sputc(wchar_t)</STRONG> (Thumb, 44 bytes, Stack size 8 bytes, ios.o(t._ZNSt15basic_streambufIwSt11char_traitsIwEE5sputcEw))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = std::basic_streambuf&lang;wchar_t, std::char_traits&lang;wchar_t&rang;&rang;::sputc(wchar_t)
</UL>
<BR>[Called By]<UL><LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::basic_streambuf&lang;wchar_t, std::char_traits&lang;wchar_t&rang;&rang;::xsputn(const wchar_t*, long)
<LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::basic_filebuf&lang;wchar_t, std::char_traits&lang;wchar_t&rang;&rang;::overflow(int)
<LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::basic_filebuf&lang;wchar_t, std::char_traits&lang;wchar_t&rang;&rang;::xsputn(const wchar_t*, long)
</UL>

<P><STRONG><a name="[b2]"></a>std::basic_streambuf&lang;wchar_t, std::char_traits&lang;wchar_t&rang;&rang;::uflow()</STRONG> (Thumb, 38 bytes, Stack size 8 bytes, ios.o(t._ZNSt15basic_streambufIwSt11char_traitsIwEE5uflowEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = std::basic_streambuf&lang;wchar_t, std::char_traits&lang;wchar_t&rang;&rang;::uflow() &rArr; std::basic_streambuf&lang;wchar_t, std::char_traits&lang;wchar_t&rang;&rang;::_C_is_eof(int) const
</UL>
<BR>[Calls]<UL><LI><a href="#[34c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::basic_streambuf&lang;wchar_t, std::char_traits&lang;wchar_t&rang;&rang;::_C_is_eof(int) const
</UL>
<BR>[Address Reference Count : 1]<UL><LI> ios.o(.constdata__ZTVSt15basic_streambufIwSt11char_traitsIwEE)
</UL>
<P><STRONG><a name="[ae]"></a>std::basic_streambuf&lang;wchar_t, std::char_traits&lang;wchar_t&rang;&rang;::setbuf(wchar_t*, long)</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, ios.o(t._ZNSt15basic_streambufIwSt11char_traitsIwEE6setbufEPwl))
<BR>[Address Reference Count : 1]<UL><LI> ios.o(.constdata__ZTVSt15basic_streambufIwSt11char_traitsIwEE)
</UL>
<P><STRONG><a name="[8b]"></a>std::basic_streambuf&lang;wchar_t, std::char_traits&lang;wchar_t&rang;&rang;::xsgetn(wchar_t*, long)</STRONG> (Thumb, 78 bytes, Stack size 24 bytes, ios.o(t._ZNSt15basic_streambufIwSt11char_traitsIwEE6xsgetnEPwl))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = std::basic_streambuf&lang;wchar_t, std::char_traits&lang;wchar_t&rang;&rang;::xsgetn(wchar_t*, long) &rArr; std::char_traits&lang;wchar_t&rang;::copy(wchar_t*, const wchar_t*, unsigned)
</UL>
<BR>[Calls]<UL><LI><a href="#[2df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::char_traits&lang;wchar_t&rang;::copy(wchar_t*, const wchar_t*, unsigned)
</UL>
<BR>[Address Reference Count : 2]<UL><LI> ios.o(.constdata__ZTVSt13basic_filebufIwSt11char_traitsIwEE)
<LI> ios.o(.constdata__ZTVSt15basic_streambufIwSt11char_traitsIwEE)
</UL>
<P><STRONG><a name="[b4]"></a>std::basic_streambuf&lang;wchar_t, std::char_traits&lang;wchar_t&rang;&rang;::xsputn(const wchar_t*, long)</STRONG> (Thumb, 46 bytes, Stack size 24 bytes, ios.o(t._ZNSt15basic_streambufIwSt11char_traitsIwEE6xsputnEPKwl))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = std::basic_streambuf&lang;wchar_t, std::char_traits&lang;wchar_t&rang;&rang;::xsputn(const wchar_t*, long) &rArr; std::basic_streambuf&lang;wchar_t, std::char_traits&lang;wchar_t&rang;&rang;::_C_is_eof(int) const
</UL>
<BR>[Calls]<UL><LI><a href="#[383]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::basic_streambuf&lang;wchar_t, std::char_traits&lang;wchar_t&rang;&rang;::sputc(wchar_t)
<LI><a href="#[34c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::basic_streambuf&lang;wchar_t, std::char_traits&lang;wchar_t&rang;&rang;::_C_is_eof(int) const
</UL>
<BR>[Address Reference Count : 1]<UL><LI> ios.o(.constdata__ZTVSt15basic_streambufIwSt11char_traitsIwEE)
</UL>
<P><STRONG><a name="[af]"></a>std::basic_streambuf&lang;wchar_t, std::char_traits&lang;wchar_t&rang;&rang;::seekoff(long, std::ios_base::_C_seekdir, int)</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, ios.o(t._ZNSt15basic_streambufIwSt11char_traitsIwEE7seekoffElNSt8ios_base10_C_seekdirEi))
<BR><BR>[Calls]<UL><LI><a href="#[36e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::fpos&lang;std::__mbstate_t&rang;::fpos(long)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> ios.o(.constdata__ZTVSt15basic_streambufIwSt11char_traitsIwEE)
</UL>
<P><STRONG><a name="[b0]"></a>std::basic_streambuf&lang;wchar_t, std::char_traits&lang;wchar_t&rang;&rang;::seekpos(std::fpos&lang;std::__mbstate_t&rang;, int)</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, ios.o(t._ZNSt15basic_streambufIwSt11char_traitsIwEE7seekposESt4fposISt11__mbstate_tEi))
<BR><BR>[Calls]<UL><LI><a href="#[36e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::fpos&lang;std::__mbstate_t&rang;::fpos(long)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> ios.o(.constdata__ZTVSt15basic_streambufIwSt11char_traitsIwEE)
</UL>
<P><STRONG><a name="[b3]"></a>std::basic_streambuf&lang;wchar_t, std::char_traits&lang;wchar_t&rang;&rang;::overflow(int)</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, ios.o(t._ZNSt15basic_streambufIwSt11char_traitsIwEE8overflowEi))
<BR>[Address Reference Count : 1]<UL><LI> ios.o(.constdata__ZTVSt15basic_streambufIwSt11char_traitsIwEE)
</UL>
<P><STRONG><a name="[307]"></a>std::basic_streambuf&lang;wchar_t, std::char_traits&lang;wchar_t&rang;&rang;::pubsetbuf(wchar_t*, long)</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, ios.o(t._ZNSt15basic_streambufIwSt11char_traitsIwEE9pubsetbufEPwl))
<BR><BR>[Called By]<UL><LI><a href="#[25]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::ios_base::Init::~Init()
</UL>

<P><STRONG><a name="[b1]"></a>std::basic_streambuf&lang;wchar_t, std::char_traits&lang;wchar_t&rang;&rang;::underflow()</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, ios.o(t._ZNSt15basic_streambufIwSt11char_traitsIwEE9underflowEv))
<BR>[Address Reference Count : 1]<UL><LI> ios.o(.constdata__ZTVSt15basic_streambufIwSt11char_traitsIwEE)
</UL>
<P><STRONG><a name="[ad]"></a>std::basic_streambuf&lang;wchar_t, std::char_traits&lang;wchar_t&rang;&rang;::~basic_streambuf__deallocating()</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, ios.o(t._ZNSt15basic_streambufIwSt11char_traitsIwEED0Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 584 + Unknown Stack Size
<LI>Call Chain = std::basic_streambuf&lang;wchar_t, std::char_traits&lang;wchar_t&rang;&rang;::~basic_streambuf__deallocating() &rArr; std::basic_streambuf&lang;wchar_t, std::char_traits&lang;wchar_t&rang;&rang;::~basic_streambuf() &rArr; std::locale::~locale() &rArr; __rw::__rw_locale_vector&lang;std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;&rang;::~__rw_locale_vector() &rArr; __aeabi_vec_delete &rArr; __aeabi_vec_dtor_cookie &rArr; __aeabi_vec_dtor &rArr; __ARM_vec_cleanup_rethrow &rArr; __cxa_rethrow &rArr; _Unwind_RaiseException &rArr; __ARM_Unwind_RaiseException &rArr; malloc &rArr; _malloc_internal &rArr; __Heap_Full &rArr; __Heap_ProvideMemory &rArr; _free_internal &rArr; _mutex_release
</UL>
<BR>[Calls]<UL><LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::basic_streambuf&lang;wchar_t, std::char_traits&lang;wchar_t&rang;&rang;::~basic_streambuf()
<LI><a href="#[282]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;operator delete (void*)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> ios.o(.constdata__ZTVSt15basic_streambufIwSt11char_traitsIwEE)
</UL>
<P><STRONG><a name="[ac]"></a>std::basic_streambuf&lang;wchar_t, std::char_traits&lang;wchar_t&rang;&rang;::~basic_streambuf()</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, ios.o(t._ZNSt15basic_streambufIwSt11char_traitsIwEED1Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 576 + Unknown Stack Size
<LI>Call Chain = std::basic_streambuf&lang;wchar_t, std::char_traits&lang;wchar_t&rang;&rang;::~basic_streambuf() &rArr; std::locale::~locale() &rArr; __rw::__rw_locale_vector&lang;std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;&rang;::~__rw_locale_vector() &rArr; __aeabi_vec_delete &rArr; __aeabi_vec_dtor_cookie &rArr; __aeabi_vec_dtor &rArr; __ARM_vec_cleanup_rethrow &rArr; __cxa_rethrow &rArr; _Unwind_RaiseException &rArr; __ARM_Unwind_RaiseException &rArr; malloc &rArr; _malloc_internal &rArr; __Heap_Full &rArr; __Heap_ProvideMemory &rArr; _free_internal &rArr; _mutex_release
</UL>
<BR>[Calls]<UL><LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::locale::~locale()
</UL>
<BR>[Called By]<UL><LI><a href="#[ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::basic_streambuf&lang;wchar_t, std::char_traits&lang;wchar_t&rang;&rang;::~basic_streambuf__deallocating()
<LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::basic_filebuf&lang;wchar_t, std::char_traits&lang;wchar_t&rang;&rang;::~basic_filebuf()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> ios.o(.constdata__ZTVSt15basic_streambufIwSt11char_traitsIwEE)
</UL>
<P><STRONG><a name="[46b]"></a>std::basic_streambuf&lang;wchar_t, std::char_traits&lang;wchar_t&rang;&rang;::~basic_streambuf__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, ios.o(t._ZNSt15basic_streambufIwSt11char_traitsIwEED1Ev), UNUSED)

<P><STRONG><a name="[13b]"></a>std::map&lang;int, int, std::less&lang;int&rang;, std::allocator&lang;std::pair&lang;const int, int&rang;&rang;&rang;::operator [](const int&)</STRONG> (Thumb, 66 bytes, Stack size 48 bytes, main.o(t._ZNSt3mapIiiSt4lessIiESaISt4pairIKiiEEEixERS3_))
<BR><BR>[Stack]<UL><LI>Max Depth = 712 + Unknown Stack Size
<LI>Call Chain = std::map&lang;int, int, std::less&lang;int&rang;, std::allocator&lang;std::pair&lang;const int, int&rang;&rang;&rang;::operator [](const int&) &rArr; __rw::__rb_tree&lang;int, std::pair&lang;const int, int&rang;, __rw::__select1st&lang;std::pair&lang;const int, int&rang;, int&rang;, std::less&lang;int&rang;, std::allocator&lang;std::pair&lang;const int, int&rang;&rang;&rang;::insert(const std::pair&lang;const int, int&rang;&) &rArr; __rw::__rb_tree&lang;int, std::pair&lang;const int, int&rang;, __rw::__select1st&lang;std::pair&lang;const int, int&rang;, int&rang;, std::less&lang;int&rang;, std::allocator&lang;std::pair&lang;const int, int&rang;&rang;&rang;::_C_insert(__rw::__rw_rb_tree_node&lang;std::allocator&lang;std::pair&lang;const int, int&rang;&rang;, std::pair&lang;const int, int&rang;, int, __rw::__select1st&lang;std::pair&lang;const int, int&rang;, int&rang;&rang;*, __rw::__rw_rb_tree_node&lang;std::allocator&lang;std::pair&lang;const int, int&rang;&rang;, std::pair&lang;const int, int&rang;, int, __rw::__select1st&lang;std::pair&lang;const int, int&rang;, int&rang;&rang;*, const std::pair&lang;const int, int&rang;&) &rArr; __rw::__rb_tree&lang;int, std::pair&lang;const int, int&rang;, __rw::__select1st&lang;std::pair&lang;const int, int&rang;, int&rang;, std::less&lang;int&rang;, std::allocator&lang;std::pair&lang;const int, int&rang;&rang;&rang;::_C_get_node(const std::pair&lang;const int, int&rang;&) &rArr; __rw::__rb_tree&lang;int, std::pair&lang;const int, int&rang;, __rw::__select1st&lang;std::pair&lang;const int, int&rang;, int&rang;, std::less&lang;int&rang;, std::allocator&lang;std::pair&lang;const int, int&rang;&rang;&rang;::_C_get_link() &rArr; __rw::__rb_tree&lang;int, std::pair&lang;const int, int&rang;, __rw::__select1st&lang;std::pair&lang;const int, int&rang;, int&rang;, std::less&lang;int&rang;, std::allocator&lang;std::pair&lang;const int, int&rang;&rang;&rang;::_C_add_new_buffer() &rArr; __cxa_rethrow &rArr; _Unwind_RaiseException &rArr; __ARM_Unwind_RaiseException &rArr; malloc &rArr; _malloc_internal &rArr; __Heap_Full &rArr; __Heap_ProvideMemory &rArr; _free_internal &rArr; _mutex_release
</UL>
<BR>[Calls]<UL><LI><a href="#[346]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rw_tree_iter&lang;std::pair&lang;const int, int&rang;, int, std::pair&lang;const int, int&rang;*, std::pair&lang;const int, int&rang;&, __rw::__rw_rb_tree_node&lang;std::allocator&lang;std::pair&lang;const int, int&rang;&rang;, std::pair&lang;const int, int&rang;, int, __rw::__select1st&lang;std::pair&lang;const int, int&rang;, int&rang;&rang;&rang;::operator *() const
<LI><a href="#[340]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rb_tree&lang;int, std::pair&lang;const int, int&rang;, __rw::__select1st&lang;std::pair&lang;const int, int&rang;, int&rang;, std::less&lang;int&rang;, std::allocator&lang;std::pair&lang;const int, int&rang;&rang;&rang;::insert(const std::pair&lang;const int, int&rang;&)
<LI><a href="#[327]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rw_tree_iter&lang;std::pair&lang;const int, int&rang;, int, std::pair&lang;const int, int&rang;*, std::pair&lang;const int, int&rang;&, __rw::__rw_rb_tree_node&lang;std::allocator&lang;std::pair&lang;const int, int&rang;&rang;, std::pair&lang;const int, int&rang;, int, __rw::__select1st&lang;std::pair&lang;const int, int&rang;, int&rang;&rang;&rang;::__rw_tree_iter(const __rw::__rw_tree_iter&lang;std::pair&lang;const int, int&rang;, int, std::pair&lang;const int, int&rang;*, std::pair&lang;const int, int&rang;&, __rw::__rw_rb_tree_node&lang;std::allocator&lang;std::pair&lang;const int, int&rang;&rang;, std::pair&lang;const int, int&rang;, int, __rw::__select1st&lang;std::pair&lang;const int, int&rang;, int&rang;&rang;&rang;&)
</UL>
<BR>[Called By]<UL><LI><a href="#[135]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;stl_test()
</UL>

<P><STRONG><a name="[34e]"></a>std::fpos&lang;std::__mbstate_t&rang;::fpos(const std::fpos&lang;std::__mbstate_t&rang;&)</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, ios.o(t._ZNSt4fposISt11__mbstate_tEC1ERKS1_))
<BR><BR>[Called By]<UL><LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::basic_filebuf&lang;wchar_t, std::char_traits&lang;wchar_t&rang;&rang;::seekpos(std::fpos&lang;std::__mbstate_t&rang;, int)
<LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::basic_filebuf&lang;wchar_t, std::char_traits&lang;wchar_t&rang;&rang;::seekoff(long, std::ios_base::_C_seekdir, int)
<LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::basic_filebuf&lang;char, std::char_traits&lang;char&rang;&rang;::seekpos(std::fpos&lang;std::__mbstate_t&rang;, int)
<LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::basic_filebuf&lang;char, std::char_traits&lang;char&rang;&rang;::seekoff(long, std::ios_base::_C_seekdir, int)
<LI><a href="#[351]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::fpos&lang;std::__mbstate_t&rang;::operator +(long) const
<LI><a href="#[34d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::fpos&lang;std::__mbstate_t&rang;::operator -(const std::fpos&lang;std::__mbstate_t&rang;&) const
</UL>

<P><STRONG><a name="[46c]"></a>std::fpos&lang;std::__mbstate_t&rang;::fpos__sub_object(const std::fpos&lang;std::__mbstate_t&rang;&)</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, ios.o(t._ZNSt4fposISt11__mbstate_tEC1ERKS1_), UNUSED)

<P><STRONG><a name="[36e]"></a>std::fpos&lang;std::__mbstate_t&rang;::fpos(long)</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, ios.o(t._ZNSt4fposISt11__mbstate_tEC1El))
<BR><BR>[Called By]<UL><LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::basic_streambuf&lang;wchar_t, std::char_traits&lang;wchar_t&rang;&rang;::seekpos(std::fpos&lang;std::__mbstate_t&rang;, int)
<LI><a href="#[af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::basic_streambuf&lang;wchar_t, std::char_traits&lang;wchar_t&rang;&rang;::seekoff(long, std::ios_base::_C_seekdir, int)
<LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::basic_streambuf&lang;char, std::char_traits&lang;char&rang;&rang;::seekpos(std::fpos&lang;std::__mbstate_t&rang;, int)
<LI><a href="#[a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::basic_streambuf&lang;char, std::char_traits&lang;char&rang;&rang;::seekoff(long, std::ios_base::_C_seekdir, int)
<LI><a href="#[302]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::basic_filebuf&lang;wchar_t, std::char_traits&lang;wchar_t&rang;&rang;::basic_filebuf(int, wchar_t*, long)
<LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::basic_filebuf&lang;wchar_t, std::char_traits&lang;wchar_t&rang;&rang;::showmanyc()
<LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::basic_filebuf&lang;wchar_t, std::char_traits&lang;wchar_t&rang;&rang;::pbackfail(int)
<LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::basic_filebuf&lang;wchar_t, std::char_traits&lang;wchar_t&rang;&rang;::seekpos(std::fpos&lang;std::__mbstate_t&rang;, int)
<LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::basic_filebuf&lang;wchar_t, std::char_traits&lang;wchar_t&rang;&rang;::seekoff(long, std::ios_base::_C_seekdir, int)
<LI><a href="#[380]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::basic_filebuf&lang;wchar_t, std::char_traits&lang;wchar_t&rang;&rang;::close()
<LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::basic_filebuf&lang;wchar_t, std::char_traits&lang;wchar_t&rang;&rang;::sync()
<LI><a href="#[37e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::basic_filebuf&lang;wchar_t, std::char_traits&lang;wchar_t&rang;&rang;::_C_file_seek(long, int)
<LI><a href="#[2fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::basic_filebuf&lang;char, std::char_traits&lang;char&rang;&rang;::basic_filebuf(int, char*, long)
<LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::basic_filebuf&lang;char, std::char_traits&lang;char&rang;&rang;::showmanyc()
<LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::basic_filebuf&lang;char, std::char_traits&lang;char&rang;&rang;::pbackfail(int)
<LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::basic_filebuf&lang;char, std::char_traits&lang;char&rang;&rang;::seekpos(std::fpos&lang;std::__mbstate_t&rang;, int)
<LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::basic_filebuf&lang;char, std::char_traits&lang;char&rang;&rang;::seekoff(long, std::ios_base::_C_seekdir, int)
<LI><a href="#[371]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::basic_filebuf&lang;char, std::char_traits&lang;char&rang;&rang;::close()
<LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::basic_filebuf&lang;char, std::char_traits&lang;char&rang;&rang;::sync()
<LI><a href="#[36d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::basic_filebuf&lang;char, std::char_traits&lang;char&rang;&rang;::_C_file_seek(long, int)
</UL>

<P><STRONG><a name="[46d]"></a>std::fpos&lang;std::__mbstate_t&rang;::fpos__sub_object(long)</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, ios.o(t._ZNSt4fposISt11__mbstate_tEC1El), UNUSED)

<P><STRONG><a name="[36f]"></a>std::fpos&lang;std::__mbstate_t&rang;::operator =(const std::fpos&lang;std::__mbstate_t&rang;&)</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, ios.o(t._ZNSt4fposISt11__mbstate_tEaSERKS1_))
<BR><BR>[Called By]<UL><LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::basic_filebuf&lang;wchar_t, std::char_traits&lang;wchar_t&rang;&rang;::underflow()
<LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::basic_filebuf&lang;wchar_t, std::char_traits&lang;wchar_t&rang;&rang;::overflow(int)
<LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::basic_filebuf&lang;wchar_t, std::char_traits&lang;wchar_t&rang;&rang;::seekpos(std::fpos&lang;std::__mbstate_t&rang;, int)
<LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::basic_filebuf&lang;wchar_t, std::char_traits&lang;wchar_t&rang;&rang;::seekoff(long, std::ios_base::_C_seekdir, int)
<LI><a href="#[380]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::basic_filebuf&lang;wchar_t, std::char_traits&lang;wchar_t&rang;&rang;::close()
<LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::basic_filebuf&lang;wchar_t, std::char_traits&lang;wchar_t&rang;&rang;::sync()
<LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::basic_filebuf&lang;char, std::char_traits&lang;char&rang;&rang;::underflow()
<LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::basic_filebuf&lang;char, std::char_traits&lang;char&rang;&rang;::overflow(int)
<LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::basic_filebuf&lang;char, std::char_traits&lang;char&rang;&rang;::seekpos(std::fpos&lang;std::__mbstate_t&rang;, int)
<LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::basic_filebuf&lang;char, std::char_traits&lang;char&rang;&rang;::seekoff(long, std::ios_base::_C_seekdir, int)
<LI><a href="#[371]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::basic_filebuf&lang;char, std::char_traits&lang;char&rang;&rang;::close()
<LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::basic_filebuf&lang;char, std::char_traits&lang;char&rang;&rang;::sync()
</UL>

<P><STRONG><a name="[352]"></a>std::fpos&lang;std::__mbstate_t&rang;::operator +=(long)</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, ios.o(t._ZNSt4fposISt11__mbstate_tEpLEl))
<BR><BR>[Called By]<UL><LI><a href="#[351]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::fpos&lang;std::__mbstate_t&rang;::operator +(long) const
</UL>

<P><STRONG><a name="[344]"></a>std::pair&lang;__rw::__rw_tree_iter&lang;std::pair&lang;const int, int&rang;, int, std::pair&lang;const int, int&rang;*, std::pair&lang;const int, int&rang;&, __rw::__rw_rb_tree_node&lang;std::allocator&lang;std::pair&lang;const int, int&rang;&rang;, std::pair&lang;const int, int&rang;, int, __rw::__select1st&lang;std::pair&lang;const int, int&rang;, int&rang;&rang;&rang;, bool&rang;::pair(const __rw::__rw_tree_iter&lang;std::pair&lang;const int, int&rang;, int, std::pair&lang;const int, int&rang;*, std::pair&lang;const int, int&rang;&, __rw::__rw_rb_tree_node&lang;std::allocator&lang;std::pair&lang;const int, int&rang;&rang;, std::pair&lang;const int, int&rang;, int, __rw::__select1st&lang;std::pair&lang;const int, int&rang;, int&rang;&rang;&rang;&, const bool&)</STRONG> (Thumb, 26 bytes, Stack size 16 bytes, main.o(t._ZNSt4pairIN4__rw14__rw_tree_iterIS_IKiiEiPS3_RS3_NS0_17__rw_rb_tree_nodeISaIS3_ES3_iNS0_11__select1stIS3_iEEEEEEbEC1ERKSB_RKb))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = std::pair&lang;__rw::__rw_tree_iter&lang;std::pair&lang;const int, int&rang;, int, std::pair&lang;const int, int&rang;*, std::pair&lang;const int, int&rang;&, __rw::__rw_rb_tree_node&lang;std::allocator&lang;std::pair&lang;const int, int&rang;&rang;, std::pair&lang;const int, int&rang;, int, __rw::__select1st&lang;std::pair&lang;const int, int&rang;, int&rang;&rang;&rang;, bool&rang;::pair(const __rw::__rw_tree_iter&lang;std::pair&lang;const int, int&rang;, int, std::pair&lang;const int, int&rang;*, std::pair&lang;const int, int&rang;&, __rw::__rw_rb_tree_node&lang;std::allocator&lang;std::pair&lang;const int, int&rang;&rang;, std::pair&lang;const int, int&rang;, int, __rw::__select1st&lang;std::pair&lang;const int, int&rang;, int&rang;&rang;&rang;&, const bool&)
</UL>
<BR>[Calls]<UL><LI><a href="#[327]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rw_tree_iter&lang;std::pair&lang;const int, int&rang;, int, std::pair&lang;const int, int&rang;*, std::pair&lang;const int, int&rang;&, __rw::__rw_rb_tree_node&lang;std::allocator&lang;std::pair&lang;const int, int&rang;&rang;, std::pair&lang;const int, int&rang;, int, __rw::__select1st&lang;std::pair&lang;const int, int&rang;, int&rang;&rang;&rang;::__rw_tree_iter(const __rw::__rw_tree_iter&lang;std::pair&lang;const int, int&rang;, int, std::pair&lang;const int, int&rang;*, std::pair&lang;const int, int&rang;&, __rw::__rw_rb_tree_node&lang;std::allocator&lang;std::pair&lang;const int, int&rang;&rang;, std::pair&lang;const int, int&rang;, int, __rw::__select1st&lang;std::pair&lang;const int, int&rang;, int&rang;&rang;&rang;&)
</UL>
<BR>[Called By]<UL><LI><a href="#[340]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rb_tree&lang;int, std::pair&lang;const int, int&rang;, __rw::__select1st&lang;std::pair&lang;const int, int&rang;, int&rang;, std::less&lang;int&rang;, std::allocator&lang;std::pair&lang;const int, int&rang;&rang;&rang;::insert(const std::pair&lang;const int, int&rang;&)
</UL>

<P><STRONG><a name="[46e]"></a>std::pair&lang;__rw::__rw_tree_iter&lang;std::pair&lang;const int, int&rang;, int, std::pair&lang;const int, int&rang;*, std::pair&lang;const int, int&rang;&, __rw::__rw_rb_tree_node&lang;std::allocator&lang;std::pair&lang;const int, int&rang;&rang;, std::pair&lang;const int, int&rang;, int, __rw::__select1st&lang;std::pair&lang;const int, int&rang;, int&rang;&rang;&rang;, bool&rang;::pair__sub_object(const __rw::__rw_tree_iter&lang;std::pair&lang;const int, int&rang;, int, std::pair&lang;const int, int&rang;*, std::pair&lang;const int, int&rang;&, __rw::__rw_rb_tree_node&lang;std::allocator&lang;std::pair&lang;const int, int&rang;&rang;, std::pair&lang;const int, int&rang;, int, __rw::__select1st&lang;std::pair&lang;const int, int&rang;, int&rang;&rang;&rang;&, const bool&)</STRONG> (Thumb, 0 bytes, Stack size 16 bytes, main.o(t._ZNSt4pairIN4__rw14__rw_tree_iterIS_IKiiEiPS3_RS3_NS0_17__rw_rb_tree_nodeISaIS3_ES3_iNS0_11__select1stIS3_iEEEEEEbEC1ERKSB_RKb), UNUSED)

<P><STRONG><a name="[38b]"></a>std::vector&lang;int, std::allocator&lang;int&rang;&rang;::_C_destroy(int*, int*)</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, main.o(t._ZNSt6vectorIiSaIiEE10_C_destroyEPiS2_))
<BR><BR>[Called By]<UL><LI><a href="#[26]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::vector&lang;int, std::allocator&lang;int&rang;&rang;::~vector()
<LI><a href="#[388]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::vector&lang;int, std::allocator&lang;int&rang;&rang;::_C_insert_aux(int*, const int&)
</UL>

<P><STRONG><a name="[388]"></a>std::vector&lang;int, std::allocator&lang;int&rang;&rang;::_C_insert_aux(int*, const int&)</STRONG> (Thumb, 362 bytes, Stack size 48 bytes, main.o(t._ZNSt6vectorIiSaIiEE13_C_insert_auxEPiRKi))
<BR><BR>[Stack]<UL><LI>Max Depth = 544 + Unknown Stack Size
<LI>Call Chain = std::vector&lang;int, std::allocator&lang;int&rang;&rang;::_C_insert_aux(int*, const int&) &rArr; std::uninitialized_copy&lang;int*, int*, std::allocator&lang;int&rang;&rang;(T1, T1, T2, T3&) &rArr; __cxa_rethrow &rArr; _Unwind_RaiseException &rArr; __ARM_Unwind_RaiseException &rArr; malloc &rArr; _malloc_internal &rArr; __Heap_Full &rArr; __Heap_ProvideMemory &rArr; _free_internal &rArr; _mutex_release
</UL>
<BR>[Calls]<UL><LI><a href="#[28e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rw_allocate(unsigned, int)
<LI><a href="#[38a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::uninitialized_copy&lang;int*, int*, std::allocator&lang;int&rang;&rang;(T1, T1, T2, T3&)
<LI><a href="#[138]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::vector&lang;int, std::allocator&lang;int&rang;&rang;::begin()
<LI><a href="#[139]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::vector&lang;int, std::allocator&lang;int&rang;&rang;::end()
<LI><a href="#[38b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::vector&lang;int, std::allocator&lang;int&rang;&rang;::_C_destroy(int*, int*)
<LI><a href="#[35b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::allocator&lang;int&rang;::construct(int*, const int&)
<LI><a href="#[35a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::allocator&lang;int&rang;::deallocate(int*, unsigned)
<LI><a href="#[389]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::vector&lang;int, std::allocator&lang;int&rang;&rang;::capacity() const
<LI><a href="#[136]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::vector&lang;int, std::allocator&lang;int&rang;&rang;::size() const
<LI><a href="#[1e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxa_rethrow
<LI><a href="#[145]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxa_begin_catch
</UL>
<BR>[Called By]<UL><LI><a href="#[137]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::vector&lang;int, std::allocator&lang;int&rang;&rang;::push_back(const int&)
</UL>

<P><STRONG><a name="[139]"></a>std::vector&lang;int, std::allocator&lang;int&rang;&rang;::end()</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, main.o(t._ZNSt6vectorIiSaIiEE3endEv))
<BR><BR>[Called By]<UL><LI><a href="#[26]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::vector&lang;int, std::allocator&lang;int&rang;&rang;::~vector()
<LI><a href="#[137]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::vector&lang;int, std::allocator&lang;int&rang;&rang;::push_back(const int&)
<LI><a href="#[388]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::vector&lang;int, std::allocator&lang;int&rang;&rang;::_C_insert_aux(int*, const int&)
<LI><a href="#[135]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;stl_test()
</UL>

<P><STRONG><a name="[138]"></a>std::vector&lang;int, std::allocator&lang;int&rang;&rang;::begin()</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, main.o(t._ZNSt6vectorIiSaIiEE5beginEv))
<BR><BR>[Called By]<UL><LI><a href="#[26]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::vector&lang;int, std::allocator&lang;int&rang;&rang;::~vector()
<LI><a href="#[388]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::vector&lang;int, std::allocator&lang;int&rang;&rang;::_C_insert_aux(int*, const int&)
<LI><a href="#[135]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;stl_test()
</UL>

<P><STRONG><a name="[137]"></a>std::vector&lang;int, std::allocator&lang;int&rang;&rang;::push_back(const int&)</STRONG> (Thumb, 68 bytes, Stack size 24 bytes, main.o(t._ZNSt6vectorIiSaIiEE9push_backERKi))
<BR><BR>[Stack]<UL><LI>Max Depth = 568 + Unknown Stack Size
<LI>Call Chain = std::vector&lang;int, std::allocator&lang;int&rang;&rang;::push_back(const int&) &rArr; std::vector&lang;int, std::allocator&lang;int&rang;&rang;::_C_insert_aux(int*, const int&) &rArr; std::uninitialized_copy&lang;int*, int*, std::allocator&lang;int&rang;&rang;(T1, T1, T2, T3&) &rArr; __cxa_rethrow &rArr; _Unwind_RaiseException &rArr; __ARM_Unwind_RaiseException &rArr; malloc &rArr; _malloc_internal &rArr; __Heap_Full &rArr; __Heap_ProvideMemory &rArr; _free_internal &rArr; _mutex_release
</UL>
<BR>[Calls]<UL><LI><a href="#[139]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::vector&lang;int, std::allocator&lang;int&rang;&rang;::end()
<LI><a href="#[388]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::vector&lang;int, std::allocator&lang;int&rang;&rang;::_C_insert_aux(int*, const int&)
<LI><a href="#[35b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::allocator&lang;int&rang;::construct(int*, const int&)
<LI><a href="#[1e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxa_rethrow
<LI><a href="#[145]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxa_begin_catch
</UL>
<BR>[Called By]<UL><LI><a href="#[135]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;stl_test()
</UL>

<P><STRONG><a name="[26]"></a>std::vector&lang;int, std::allocator&lang;int&rang;&rang;::~vector()</STRONG> (Thumb, 50 bytes, Stack size 16 bytes, main.o(t._ZNSt6vectorIiSaIiEED1Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = std::vector&lang;int, std::allocator&lang;int&rang;&rang;::~vector() &rArr; std::allocator&lang;int&rang;::deallocate(int*, unsigned) &rArr; __rw::__rw_deallocate(void*, unsigned, int) &rArr; operator delete (void*) &rArr; free &rArr; _free_internal &rArr; _mutex_release
</UL>
<BR>[Calls]<UL><LI><a href="#[138]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::vector&lang;int, std::allocator&lang;int&rang;&rang;::begin()
<LI><a href="#[139]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::vector&lang;int, std::allocator&lang;int&rang;&rang;::end()
<LI><a href="#[38b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::vector&lang;int, std::allocator&lang;int&rang;&rang;::_C_destroy(int*, int*)
<LI><a href="#[35a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::allocator&lang;int&rang;::deallocate(int*, unsigned)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> main.o(.text)
</UL>
<P><STRONG><a name="[46f]"></a>std::vector&lang;int, std::allocator&lang;int&rang;&rang;::~vector__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 16 bytes, main.o(t._ZNSt6vectorIiSaIiEED1Ev), UNUSED)

<P><STRONG><a name="[38c]"></a>std::numpunct&lang;char&rang;::_C_initfacet(const std::locale&)</STRONG> (Thumb, 122 bytes, Stack size 24 bytes, main.o(t._ZNSt8numpunctIcE12_C_initfacetERKSt6locale), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[29d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;::operator =(const std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;&)
<LI><a href="#[28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;::~basic_string()
<LI><a href="#[38d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rw_numpunct_impl_data&lang;char&rang;::_C_initfacetbase(const std::locale&)
</UL>

<P><STRONG><a name="[300]"></a>std::basic_ios&lang;char, std::char_traits&lang;char&rang;&rang;::init(std::basic_streambuf&lang;char, std::char_traits&lang;char&rang;&rang;*)</STRONG> (Thumb, 84 bytes, Stack size 24 bytes, ios.o(t._ZNSt9basic_iosIcSt11char_traitsIcEE4initEPSt15basic_streambufIcS1_E))
<BR><BR>[Stack]<UL><LI>Max Depth = 888 + Unknown Stack Size
<LI>Call Chain = std::basic_ios&lang;char, std::char_traits&lang;char&rang;&rang;::init(std::basic_streambuf&lang;char, std::char_traits&lang;char&rang;&rang;*) &rArr; std::locale::_C_use_facet(const std::locale::id&, bool, int, __rw::__rw_facet_base*(*)(int, const char*, unsigned)) const &rArr; std::locale::_C_make_facet(const std::locale::id&, bool, int, __rw::__rw_facet_base*(*)(int, const char*, unsigned)) const &rArr; __rw::__rw_throw(int, ...) &rArr; std::__rw_exception::_C_vformat(int, std::__va_list) &rArr; __rw::__rw_vfmatstr(char*, unsigned, int, std::__va_list) &rArr; std::locale::locale() &rArr; std::locale::_C_init() &rArr; __rw::__rw_locale_imp::__rw_locale_imp(const char*, unsigned, unsigned) &rArr; __aeabi_vec_new_cookie &rArr; __cxa_vec_new &rArr; __ARM_array_new_general &rArr; __cxa_rethrow &rArr; _Unwind_RaiseException &rArr; __ARM_Unwind_RaiseException &rArr; malloc &rArr; _malloc_internal &rArr; __Heap_Full &rArr; __Heap_ProvideMemory &rArr; _free_internal &rArr; _mutex_release
</UL>
<BR>[Calls]<UL><LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::locale::~locale()
<LI><a href="#[2eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::locale::locale(const std::locale&)
<LI><a href="#[2d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::locale::_C_use_facet(const std::locale::id&, bool, int, __rw::__rw_facet_base*(*)(int, const char*, unsigned)) const
</UL>
<BR>[Called By]<UL><LI><a href="#[301]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::basic_ostream&lang;char, std::char_traits&lang;char&rang;&rang;::basic_ostream(std::basic_streambuf&lang;char, std::char_traits&lang;char&rang;&rang;*)
<LI><a href="#[154]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::ios_base::Init::Init()
</UL>

<P><STRONG><a name="[38e]"></a>std::basic_ios&lang;char, std::char_traits&lang;char&rang;&rang;::clear(int, int)</STRONG> (Thumb, 42 bytes, Stack size 24 bytes, main.o(t._ZNSt9basic_iosIcSt11char_traitsIcEE5clearEii))
<BR><BR>[Stack]<UL><LI>Max Depth = 840 + Unknown Stack Size
<LI>Call Chain = std::basic_ios&lang;char, std::char_traits&lang;char&rang;&rang;::clear(int, int) &rArr; std::ios_base::_C_unsafe_clear(int, int) &rArr; __rw::__rw_throw(int, ...) &rArr; std::__rw_exception::_C_vformat(int, std::__va_list) &rArr; __rw::__rw_vfmatstr(char*, unsigned, int, std::__va_list) &rArr; std::locale::locale() &rArr; std::locale::_C_init() &rArr; __rw::__rw_locale_imp::__rw_locale_imp(const char*, unsigned, unsigned) &rArr; __aeabi_vec_new_cookie &rArr; __cxa_vec_new &rArr; __ARM_array_new_general &rArr; __cxa_rethrow &rArr; _Unwind_RaiseException &rArr; __ARM_Unwind_RaiseException &rArr; malloc &rArr; _malloc_internal &rArr; __Heap_Full &rArr; __Heap_ProvideMemory &rArr; _free_internal &rArr; _mutex_release
</UL>
<BR>[Calls]<UL><LI><a href="#[2fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::ios_base::_C_unsafe_clear(int, int)
<LI><a href="#[31f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::basic_ios&lang;char, std::char_traits&lang;char&rang;&rang;::rdbuf() const
</UL>
<BR>[Called By]<UL><LI><a href="#[321]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::basic_ios&lang;char, std::char_traits&lang;char&rang;&rang;::setstate(int, int)
<LI><a href="#[322]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::basic_ios&lang;char, std::char_traits&lang;char&rang;&rang;::setstate(int)
</UL>

<P><STRONG><a name="[322]"></a>std::basic_ios&lang;char, std::char_traits&lang;char&rang;&rang;::setstate(int)</STRONG> (Thumb, 34 bytes, Stack size 24 bytes, main.o(t._ZNSt9basic_iosIcSt11char_traitsIcEE8setstateEi))
<BR><BR>[Stack]<UL><LI>Max Depth = 864 + Unknown Stack Size
<LI>Call Chain = std::basic_ios&lang;char, std::char_traits&lang;char&rang;&rang;::setstate(int) &rArr; std::basic_ios&lang;char, std::char_traits&lang;char&rang;&rang;::clear(int, int) &rArr; std::ios_base::_C_unsafe_clear(int, int) &rArr; __rw::__rw_throw(int, ...) &rArr; std::__rw_exception::_C_vformat(int, std::__va_list) &rArr; __rw::__rw_vfmatstr(char*, unsigned, int, std::__va_list) &rArr; std::locale::locale() &rArr; std::locale::_C_init() &rArr; __rw::__rw_locale_imp::__rw_locale_imp(const char*, unsigned, unsigned) &rArr; __aeabi_vec_new_cookie &rArr; __cxa_vec_new &rArr; __ARM_array_new_general &rArr; __cxa_rethrow &rArr; _Unwind_RaiseException &rArr; __ARM_Unwind_RaiseException &rArr; malloc &rArr; _malloc_internal &rArr; __Heap_Full &rArr; __Heap_ProvideMemory &rArr; _free_internal &rArr; _mutex_release
</UL>
<BR>[Calls]<UL><LI><a href="#[38e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::basic_ios&lang;char, std::char_traits&lang;char&rang;&rang;::clear(int, int)
</UL>
<BR>[Called By]<UL><LI><a href="#[35c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::basic_ostream&lang;char, std::char_traits&lang;char&rang;&rang;::flush()
<LI><a href="#[31c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rw_insert&lang;char, std::char_traits&lang;char&rang;, char&rang;(std::basic_ostream&lang;T1, T2&rang;&, T3*, long, long)
</UL>

<P><STRONG><a name="[321]"></a>std::basic_ios&lang;char, std::char_traits&lang;char&rang;&rang;::setstate(int, int)</STRONG> (Thumb, 32 bytes, Stack size 24 bytes, main.o(t._ZNSt9basic_iosIcSt11char_traitsIcEE8setstateEii))
<BR><BR>[Stack]<UL><LI>Max Depth = 864 + Unknown Stack Size
<LI>Call Chain = std::basic_ios&lang;char, std::char_traits&lang;char&rang;&rang;::setstate(int, int) &rArr; std::basic_ios&lang;char, std::char_traits&lang;char&rang;&rang;::clear(int, int) &rArr; std::ios_base::_C_unsafe_clear(int, int) &rArr; __rw::__rw_throw(int, ...) &rArr; std::__rw_exception::_C_vformat(int, std::__va_list) &rArr; __rw::__rw_vfmatstr(char*, unsigned, int, std::__va_list) &rArr; std::locale::locale() &rArr; std::locale::_C_init() &rArr; __rw::__rw_locale_imp::__rw_locale_imp(const char*, unsigned, unsigned) &rArr; __aeabi_vec_new_cookie &rArr; __cxa_vec_new &rArr; __ARM_array_new_general &rArr; __cxa_rethrow &rArr; _Unwind_RaiseException &rArr; __ARM_Unwind_RaiseException &rArr; malloc &rArr; _malloc_internal &rArr; __Heap_Full &rArr; __Heap_ProvideMemory &rArr; _free_internal &rArr; _mutex_release
</UL>
<BR>[Calls]<UL><LI><a href="#[38e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::basic_ios&lang;char, std::char_traits&lang;char&rang;&rang;::clear(int, int)
</UL>
<BR>[Called By]<UL><LI><a href="#[320]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::basic_ostream&lang;char, std::char_traits&lang;char&rang;&rang;::sentry::~sentry()
<LI><a href="#[31c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rw_insert&lang;char, std::char_traits&lang;char&rang;, char&rang;(std::basic_ostream&lang;T1, T2&rang;&, T3*, long, long)
</UL>

<P><STRONG><a name="[2ff]"></a>std::basic_ios&lang;char, std::char_traits&lang;char&rang;&rang;::basic_ios()</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, ios.o(t._ZNSt9basic_iosIcSt11char_traitsIcEEC1Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 640 + Unknown Stack Size
<LI>Call Chain = std::basic_ios&lang;char, std::char_traits&lang;char&rang;&rang;::basic_ios() &rArr; std::ios_base::ios_base() &rArr; std::locale::locale() &rArr; std::locale::_C_init() &rArr; __rw::__rw_locale_imp::__rw_locale_imp(const char*, unsigned, unsigned) &rArr; __aeabi_vec_new_cookie &rArr; __cxa_vec_new &rArr; __ARM_array_new_general &rArr; __cxa_rethrow &rArr; _Unwind_RaiseException &rArr; __ARM_Unwind_RaiseException &rArr; malloc &rArr; _malloc_internal &rArr; __Heap_Full &rArr; __Heap_ProvideMemory &rArr; _free_internal &rArr; _mutex_release
</UL>
<BR>[Calls]<UL><LI><a href="#[30a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::ios_base::ios_base()
</UL>
<BR>[Called By]<UL><LI><a href="#[301]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::basic_ostream&lang;char, std::char_traits&lang;char&rang;&rang;::basic_ostream(std::basic_streambuf&lang;char, std::char_traits&lang;char&rang;&rang;*)
<LI><a href="#[154]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::ios_base::Init::Init()
</UL>

<P><STRONG><a name="[470]"></a>std::basic_ios&lang;char, std::char_traits&lang;char&rang;&rang;::basic_ios__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, ios.o(t._ZNSt9basic_iosIcSt11char_traitsIcEEC1Ev), UNUSED)

<P><STRONG><a name="[304]"></a>std::basic_ios&lang;wchar_t, std::char_traits&lang;wchar_t&rang;&rang;::init(std::basic_streambuf&lang;wchar_t, std::char_traits&lang;wchar_t&rang;&rang;*)</STRONG> (Thumb, 82 bytes, Stack size 24 bytes, ios.o(t._ZNSt9basic_iosIwSt11char_traitsIwEE4initEPSt15basic_streambufIwS1_E))
<BR><BR>[Stack]<UL><LI>Max Depth = 888 + Unknown Stack Size
<LI>Call Chain = std::basic_ios&lang;wchar_t, std::char_traits&lang;wchar_t&rang;&rang;::init(std::basic_streambuf&lang;wchar_t, std::char_traits&lang;wchar_t&rang;&rang;*) &rArr; std::locale::_C_use_facet(const std::locale::id&, bool, int, __rw::__rw_facet_base*(*)(int, const char*, unsigned)) const &rArr; std::locale::_C_make_facet(const std::locale::id&, bool, int, __rw::__rw_facet_base*(*)(int, const char*, unsigned)) const &rArr; __rw::__rw_throw(int, ...) &rArr; std::__rw_exception::_C_vformat(int, std::__va_list) &rArr; __rw::__rw_vfmatstr(char*, unsigned, int, std::__va_list) &rArr; std::locale::locale() &rArr; std::locale::_C_init() &rArr; __rw::__rw_locale_imp::__rw_locale_imp(const char*, unsigned, unsigned) &rArr; __aeabi_vec_new_cookie &rArr; __cxa_vec_new &rArr; __ARM_array_new_general &rArr; __cxa_rethrow &rArr; _Unwind_RaiseException &rArr; __ARM_Unwind_RaiseException &rArr; malloc &rArr; _malloc_internal &rArr; __Heap_Full &rArr; __Heap_ProvideMemory &rArr; _free_internal &rArr; _mutex_release
</UL>
<BR>[Calls]<UL><LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::locale::~locale()
<LI><a href="#[2eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::locale::locale(const std::locale&)
<LI><a href="#[2d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::locale::_C_use_facet(const std::locale::id&, bool, int, __rw::__rw_facet_base*(*)(int, const char*, unsigned)) const
</UL>
<BR>[Called By]<UL><LI><a href="#[305]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::basic_ostream&lang;wchar_t, std::char_traits&lang;wchar_t&rang;&rang;::basic_ostream(std::basic_streambuf&lang;wchar_t, std::char_traits&lang;wchar_t&rang;&rang;*)
<LI><a href="#[154]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::ios_base::Init::Init()
</UL>

<P><STRONG><a name="[303]"></a>std::basic_ios&lang;wchar_t, std::char_traits&lang;wchar_t&rang;&rang;::basic_ios()</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, ios.o(t._ZNSt9basic_iosIwSt11char_traitsIwEEC1Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 640 + Unknown Stack Size
<LI>Call Chain = std::basic_ios&lang;wchar_t, std::char_traits&lang;wchar_t&rang;&rang;::basic_ios() &rArr; std::ios_base::ios_base() &rArr; std::locale::locale() &rArr; std::locale::_C_init() &rArr; __rw::__rw_locale_imp::__rw_locale_imp(const char*, unsigned, unsigned) &rArr; __aeabi_vec_new_cookie &rArr; __cxa_vec_new &rArr; __ARM_array_new_general &rArr; __cxa_rethrow &rArr; _Unwind_RaiseException &rArr; __ARM_Unwind_RaiseException &rArr; malloc &rArr; _malloc_internal &rArr; __Heap_Full &rArr; __Heap_ProvideMemory &rArr; _free_internal &rArr; _mutex_release
</UL>
<BR>[Calls]<UL><LI><a href="#[30a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::ios_base::ios_base()
</UL>
<BR>[Called By]<UL><LI><a href="#[305]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::basic_ostream&lang;wchar_t, std::char_traits&lang;wchar_t&rang;&rang;::basic_ostream(std::basic_streambuf&lang;wchar_t, std::char_traits&lang;wchar_t&rang;&rang;*)
<LI><a href="#[154]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::ios_base::Init::Init()
</UL>

<P><STRONG><a name="[471]"></a>std::basic_ios&lang;wchar_t, std::char_traits&lang;wchar_t&rang;&rang;::basic_ios__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, ios.o(t._ZNSt9basic_iosIwSt11char_traitsIwEEC1Ev), UNUSED)

<P><STRONG><a name="[38a]"></a>std::uninitialized_copy&lang;int*, int*, std::allocator&lang;int&rang;&rang;(T1, T1, T2, T3&)</STRONG> (Thumb, 72 bytes, Stack size 48 bytes, main.o(t._ZSt18uninitialized_copyIPiS0_SaIiEET0_T_S3_S2_RT1_))
<BR><BR>[Stack]<UL><LI>Max Depth = 496 + Unknown Stack Size
<LI>Call Chain = std::uninitialized_copy&lang;int*, int*, std::allocator&lang;int&rang;&rang;(T1, T1, T2, T3&) &rArr; __cxa_rethrow &rArr; _Unwind_RaiseException &rArr; __ARM_Unwind_RaiseException &rArr; malloc &rArr; _malloc_internal &rArr; __Heap_Full &rArr; __Heap_ProvideMemory &rArr; _free_internal &rArr; _mutex_release
</UL>
<BR>[Calls]<UL><LI><a href="#[35b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::allocator&lang;int&rang;::construct(int*, const int&)
<LI><a href="#[1e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxa_rethrow
<LI><a href="#[145]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxa_begin_catch
</UL>
<BR>[Called By]<UL><LI><a href="#[388]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::vector&lang;int, std::allocator&lang;int&rang;&rang;::_C_insert_aux(int*, const int&)
</UL>

<P><STRONG><a name="[2fc]"></a>std::return_temporary_buffer&lang;std::ios_base::_C_event_cb&rang;(T1*)</STRONG> (Thumb, 14 bytes, Stack size 16 bytes, ios.o(t._ZSt23return_temporary_bufferINSt8ios_base11_C_event_cbEEvPT_))
<BR><BR>[Stack]<UL><LI>Max Depth = 232 + Unknown Stack Size
<LI>Call Chain = std::return_temporary_buffer&lang;std::ios_base::_C_event_cb&rang;(T1*) &rArr; __rw::__rw_reallocate_temp_buffer(void*, unsigned) &rArr; __cxa_begin_catch &rArr; __ARM::get_foreign_intermediary(__cxa_exception*, _Unwind_Control_Block*) &rArr; __cxa_allocate_exception &rArr; __ARM::call_terminate_handler(_Unwind_Control_Block*) &rArr; std::terminate() &rArr; __cxa_get_globals &rArr; __ARM_exceptions_buffer_init &rArr; malloc &rArr; _malloc_internal &rArr; __Heap_Full &rArr; __Heap_ProvideMemory &rArr; _free_internal &rArr; _mutex_release
</UL>
<BR>[Calls]<UL><LI><a href="#[2c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rw_reallocate_temp_buffer(void*, unsigned)
</UL>
<BR>[Called By]<UL><LI><a href="#[2fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::ios_base::_C_fire_event(std::ios_base::event, bool)
</UL>

<P><STRONG><a name="[360]"></a>std::max&lang;unsigned&rang;(const T1&, const T1&)</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, char.o(t._ZSt3maxIjERKT_S2_S2_))
<BR><BR>[Called By]<UL><LI><a href="#[2cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;::basic_string(const char*, unsigned, const std::allocator&lang;char&rang;&)
<LI><a href="#[299]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;::_C_allocate(unsigned, unsigned, unsigned)
</UL>

<P><STRONG><a name="[379]"></a>std::min&lang;int&rang;(const T1&, const T1&)</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, ios.o(t._ZSt3minIiERKT_S2_S2_))
<BR><BR>[Called By]<UL><LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::basic_filebuf&lang;wchar_t, std::char_traits&lang;wchar_t&rang;&rang;::underflow()
<LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::basic_filebuf&lang;char, std::char_traits&lang;char&rang;&rang;::underflow()
</UL>

<P><STRONG><a name="[378]"></a>std::min&lang;long&rang;(const T1&, const T1&)</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, ios.o(t._ZSt3minIlERKT_S2_S2_))
<BR><BR>[Called By]<UL><LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::basic_filebuf&lang;wchar_t, std::char_traits&lang;wchar_t&rang;&rang;::underflow()
<LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::basic_filebuf&lang;char, std::char_traits&lang;char&rang;&rang;::underflow()
</UL>

<P><STRONG><a name="[24]"></a>std::endl&lang;char, std::char_traits&lang;char&rang;&rang;(std::basic_ostream&lang;T1, T2&rang;&)</STRONG> (Thumb, 42 bytes, Stack size 24 bytes, main.o(t._ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_))
<BR><BR>[Stack]<UL><LI>Max Depth = 1064 + Unknown Stack Size
<LI>Call Chain = std::endl&lang;char, std::char_traits&lang;char&rang;&rang;(std::basic_ostream&lang;T1, T2&rang;&) &rArr; __rw::__rw_insert&lang;char, std::char_traits&lang;char&rang;, char&rang;(std::basic_ostream&lang;T1, T2&rang;&, T3*, long, long) &rArr; std::basic_ostream&lang;char, std::char_traits&lang;char&rang;&rang;::sentry::sentry(std::basic_ostream&lang;char, std::char_traits&lang;char&rang;&rang;&) &rArr; std::basic_ostream&lang;char, std::char_traits&lang;char&rang;&rang;::_C_opfx() &rArr; std::basic_ostream&lang;char, std::char_traits&lang;char&rang;&rang;::flush() &rArr; std::basic_ios&lang;char, std::char_traits&lang;char&rang;&rang;::setstate(int) &rArr; std::basic_ios&lang;char, std::char_traits&lang;char&rang;&rang;::clear(int, int) &rArr; std::ios_base::_C_unsafe_clear(int, int) &rArr; __rw::__rw_throw(int, ...) &rArr; std::__rw_exception::_C_vformat(int, std::__va_list) &rArr; __rw::__rw_vfmatstr(char*, unsigned, int, std::__va_list) &rArr; std::locale::locale() &rArr; std::locale::_C_init() &rArr; __rw::__rw_locale_imp::__rw_locale_imp(const char*, unsigned, unsigned) &rArr; __aeabi_vec_new_cookie &rArr; __cxa_vec_new &rArr; __ARM_array_new_general &rArr; __cxa_rethrow &rArr; _Unwind_RaiseException &rArr; __ARM_Unwind_RaiseException &rArr; malloc &rArr; _malloc_internal &rArr; __Heap_Full &rArr; __Heap_ProvideMemory &rArr; _free_internal &rArr; _mutex_release
</UL>
<BR>[Calls]<UL><LI><a href="#[35c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::basic_ostream&lang;char, std::char_traits&lang;char&rang;&rang;::flush()
<LI><a href="#[359]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::basic_ios&lang;char, std::char_traits&lang;char&rang;&rang;::widen(char) const
<LI><a href="#[31c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rw_insert&lang;char, std::char_traits&lang;char&rang;, char&rang;(std::basic_ostream&lang;T1, T2&rang;&, T3*, long, long)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> main.o(.text)
</UL>
<P><STRONG><a name="[36a]"></a>std::use_facet&lang;std::codecvt&lang;char, char, std::__mbstate_t&rang;&rang;(const std::locale&)</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, ios.o(t._ZSt9use_facetISt7codecvtIccSt11__mbstate_tEERKT_RKSt6locale))
<BR><BR>[Stack]<UL><LI>Max Depth = 872 + Unknown Stack Size
<LI>Call Chain = std::use_facet&lang;std::codecvt&lang;char, char, std::__mbstate_t&rang;&rang;(const std::locale&) &rArr; std::locale::_C_use_facet(const std::locale::id&, bool, int, __rw::__rw_facet_base*(*)(int, const char*, unsigned)) const &rArr; std::locale::_C_make_facet(const std::locale::id&, bool, int, __rw::__rw_facet_base*(*)(int, const char*, unsigned)) const &rArr; __rw::__rw_throw(int, ...) &rArr; std::__rw_exception::_C_vformat(int, std::__va_list) &rArr; __rw::__rw_vfmatstr(char*, unsigned, int, std::__va_list) &rArr; std::locale::locale() &rArr; std::locale::_C_init() &rArr; __rw::__rw_locale_imp::__rw_locale_imp(const char*, unsigned, unsigned) &rArr; __aeabi_vec_new_cookie &rArr; __cxa_vec_new &rArr; __ARM_array_new_general &rArr; __cxa_rethrow &rArr; _Unwind_RaiseException &rArr; __ARM_Unwind_RaiseException &rArr; malloc &rArr; _malloc_internal &rArr; __Heap_Full &rArr; __Heap_ProvideMemory &rArr; _free_internal &rArr; _mutex_release
</UL>
<BR>[Calls]<UL><LI><a href="#[2d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::locale::_C_use_facet(const std::locale::id&, bool, int, __rw::__rw_facet_base*(*)(int, const char*, unsigned)) const
</UL>
<BR>[Called By]<UL><LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::basic_filebuf&lang;char, std::char_traits&lang;char&rang;&rang;::underflow()
<LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::basic_filebuf&lang;char, std::char_traits&lang;char&rang;&rang;::showmanyc()
<LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::basic_filebuf&lang;char, std::char_traits&lang;char&rang;&rang;::overflow(int)
<LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::basic_filebuf&lang;char, std::char_traits&lang;char&rang;&rang;::seekoff(long, std::ios_base::_C_seekdir, int)
<LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::basic_filebuf&lang;char, std::char_traits&lang;char&rang;&rang;::sync()
<LI><a href="#[369]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::basic_filebuf&lang;char, std::char_traits&lang;char&rang;&rang;::_C_unshift()
</UL>

<P><STRONG><a name="[37c]"></a>std::use_facet&lang;std::codecvt&lang;wchar_t, char, std::__mbstate_t&rang;&rang;(const std::locale&)</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, ios.o(t._ZSt9use_facetISt7codecvtIwcSt11__mbstate_tEERKT_RKSt6locale))
<BR><BR>[Stack]<UL><LI>Max Depth = 872 + Unknown Stack Size
<LI>Call Chain = std::use_facet&lang;std::codecvt&lang;wchar_t, char, std::__mbstate_t&rang;&rang;(const std::locale&) &rArr; std::locale::_C_use_facet(const std::locale::id&, bool, int, __rw::__rw_facet_base*(*)(int, const char*, unsigned)) const &rArr; std::locale::_C_make_facet(const std::locale::id&, bool, int, __rw::__rw_facet_base*(*)(int, const char*, unsigned)) const &rArr; __rw::__rw_throw(int, ...) &rArr; std::__rw_exception::_C_vformat(int, std::__va_list) &rArr; __rw::__rw_vfmatstr(char*, unsigned, int, std::__va_list) &rArr; std::locale::locale() &rArr; std::locale::_C_init() &rArr; __rw::__rw_locale_imp::__rw_locale_imp(const char*, unsigned, unsigned) &rArr; __aeabi_vec_new_cookie &rArr; __cxa_vec_new &rArr; __ARM_array_new_general &rArr; __cxa_rethrow &rArr; _Unwind_RaiseException &rArr; __ARM_Unwind_RaiseException &rArr; malloc &rArr; _malloc_internal &rArr; __Heap_Full &rArr; __Heap_ProvideMemory &rArr; _free_internal &rArr; _mutex_release
</UL>
<BR>[Calls]<UL><LI><a href="#[2d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::locale::_C_use_facet(const std::locale::id&, bool, int, __rw::__rw_facet_base*(*)(int, const char*, unsigned)) const
</UL>
<BR>[Called By]<UL><LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::basic_filebuf&lang;wchar_t, std::char_traits&lang;wchar_t&rang;&rang;::underflow()
<LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::basic_filebuf&lang;wchar_t, std::char_traits&lang;wchar_t&rang;&rang;::showmanyc()
<LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::basic_filebuf&lang;wchar_t, std::char_traits&lang;wchar_t&rang;&rang;::overflow(int)
<LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::basic_filebuf&lang;wchar_t, std::char_traits&lang;wchar_t&rang;&rang;::seekoff(long, std::ios_base::_C_seekdir, int)
<LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::basic_filebuf&lang;wchar_t, std::char_traits&lang;wchar_t&rang;&rang;::sync()
<LI><a href="#[37b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::basic_filebuf&lang;wchar_t, std::char_traits&lang;wchar_t&rang;&rang;::_C_unshift()
</UL>

<P><STRONG><a name="[141]"></a>std::operator &lang;&lang;&lang;std::char_traits&lang;char&rang;&rang;(std::basic_ostream&lang;char, T1&rang;&, const char*)</STRONG> (Thumb, 62 bytes, Stack size 24 bytes, main.o(t._ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc))
<BR><BR>[Stack]<UL><LI>Max Depth = 1088 + Unknown Stack Size
<LI>Call Chain = std::operator &lang;&lang;&lang;std::char_traits&lang;char&rang;&rang;(std::basic_ostream&lang;char, T1&rang;&, const char*) &rArr; __rw::__rw_insert&lang;char, std::char_traits&lang;char&rang;, char&rang;(std::basic_ostream&lang;T1, T2&rang;&, const T3*, long, long) &rArr; __rw::__rw_insert&lang;char, std::char_traits&lang;char&rang;, char&rang;(std::basic_ostream&lang;T1, T2&rang;&, T3*, long, long) &rArr; std::basic_ostream&lang;char, std::char_traits&lang;char&rang;&rang;::sentry::sentry(std::basic_ostream&lang;char, std::char_traits&lang;char&rang;&rang;&) &rArr; std::basic_ostream&lang;char, std::char_traits&lang;char&rang;&rang;::_C_opfx() &rArr; std::basic_ostream&lang;char, std::char_traits&lang;char&rang;&rang;::flush() &rArr; std::basic_ios&lang;char, std::char_traits&lang;char&rang;&rang;::setstate(int) &rArr; std::basic_ios&lang;char, std::char_traits&lang;char&rang;&rang;::clear(int, int) &rArr; std::ios_base::_C_unsafe_clear(int, int) &rArr; __rw::__rw_throw(int, ...) &rArr; std::__rw_exception::_C_vformat(int, std::__va_list) &rArr; __rw::__rw_vfmatstr(char*, unsigned, int, std::__va_list) &rArr; std::locale::locale() &rArr; std::locale::_C_init() &rArr; __rw::__rw_locale_imp::__rw_locale_imp(const char*, unsigned, unsigned) &rArr; __aeabi_vec_new_cookie &rArr; __cxa_vec_new &rArr; __ARM_array_new_general &rArr; __cxa_rethrow &rArr; _Unwind_RaiseException &rArr; __ARM_Unwind_RaiseException &rArr; malloc &rArr; _malloc_internal &rArr; __Heap_Full &rArr; __Heap_ProvideMemory &rArr; _free_internal &rArr; _mutex_release
</UL>
<BR>[Calls]<UL><LI><a href="#[14d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rw_insert&lang;char, std::char_traits&lang;char&rang;, char&rang;(std::basic_ostream&lang;T1, T2&rang;&, const T3*, long, long)
<LI><a href="#[14e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::ios_base::width(long)
<LI><a href="#[14a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::char_traits&lang;char&rang;::length(const char*)
</UL>
<BR>[Called By]<UL><LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[135]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;stl_test()
</UL>

<P><STRONG><a name="[319]"></a>__aeabi_d2f</STRONG> (Thumb, 0 bytes, Stack size 32 bytes, d2f.o(x$fpl$d2f))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = __aeabi_d2f
</UL>
<BR>[Called By]<UL><LI><a href="#[316]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__mathlib_tofloat
</UL>

<P><STRONG><a name="[38f]"></a>_d2f</STRONG> (Thumb, 98 bytes, Stack size 32 bytes, d2f.o(x$fpl$d2f), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[391]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_dnaninf
<LI><a href="#[390]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_fretinf
</UL>

<P><STRONG><a name="[392]"></a>__fpl_dcheck_NaN1</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, dcheck1.o(x$fpl$dcheck1))
<BR><BR>[Calls]<UL><LI><a href="#[393]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_return_NaN
</UL>
<BR>[Called By]<UL><LI><a href="#[315]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_scalbn
</UL>

<P><STRONG><a name="[395]"></a>__fpl_dcmp_Inf</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, dcmpi.o(x$fpl$dcmpinf), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[396]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dcmple
<LI><a href="#[394]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dcmpeq
</UL>

<P><STRONG><a name="[318]"></a>__aeabi_cdcmpeq</STRONG> (Thumb, 0 bytes, Stack size 32 bytes, deqf.o(x$fpl$deqf))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = __aeabi_cdcmpeq
</UL>
<BR>[Called By]<UL><LI><a href="#[31b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ldexp
<LI><a href="#[316]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__mathlib_tofloat
</UL>

<P><STRONG><a name="[394]"></a>_dcmpeq</STRONG> (Thumb, 120 bytes, Stack size 32 bytes, deqf.o(x$fpl$deqf), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[391]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_dnaninf
<LI><a href="#[395]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_dcmp_Inf
</UL>

<P><STRONG><a name="[472]"></a>__aeabi_cdcmple</STRONG> (Thumb, 0 bytes, Stack size 32 bytes, dleqf.o(x$fpl$dleqf), UNUSED)

<P><STRONG><a name="[396]"></a>_dcmple</STRONG> (Thumb, 120 bytes, Stack size 32 bytes, dleqf.o(x$fpl$dleqf), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[391]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_dnaninf
<LI><a href="#[395]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_dcmp_Inf
</UL>

<P><STRONG><a name="[398]"></a>__fpl_dcmple_InfNaN</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, dleqf.o(x$fpl$dleqf), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[397]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_drcmple
</UL>

<P><STRONG><a name="[391]"></a>__fpl_dnaninf</STRONG> (Thumb, 156 bytes, Stack size 16 bytes, dnaninf.o(x$fpl$dnaninf), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[396]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dcmple
<LI><a href="#[394]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dcmpeq
<LI><a href="#[38f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_d2f
</UL>

<P><STRONG><a name="[31a]"></a>__aeabi_cdrcmple</STRONG> (Thumb, 0 bytes, Stack size 16 bytes, drleqf.o(x$fpl$drleqf))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = __aeabi_cdrcmple
</UL>
<BR>[Called By]<UL><LI><a href="#[316]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__mathlib_tofloat
</UL>

<P><STRONG><a name="[397]"></a>_drcmple</STRONG> (Thumb, 108 bytes, Stack size 16 bytes, drleqf.o(x$fpl$drleqf), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[398]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_dcmple_InfNaN
</UL>

<P><STRONG><a name="[108]"></a>_fp_init</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, fpinit.o(x$fpl$fpinit))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = _fp_init &rArr; __rt_fp_status_addr &rArr; __user_perthread_libspace
</UL>
<BR>[Calls]<UL><LI><a href="#[232]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_fp_status_addr
</UL>
<BR>[Called By]<UL><LI><a href="#[107]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_lib_init
</UL>

<P><STRONG><a name="[473]"></a>__fplib_config_pureend_doubles</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, fpinit.o(x$fpl$fpinit), UNUSED)

<P><STRONG><a name="[390]"></a>__fpl_fretinf</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, fretinf.o(x$fpl$fretinf), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[38f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_d2f
</UL>

<P><STRONG><a name="[ea]"></a>_printf_fp_dec</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, printf1.o(x$fpl$printf1))
<BR><BR>[Stack]<UL><LI>Max Depth = 320<LI>Call Chain = _printf_fp_dec &rArr; _printf_fp_dec_real &rArr; _fp_digits &rArr; _btod_etento &rArr; _btod_emul &rArr; _e2e
</UL>
<BR>[Calls]<UL><LI><a href="#[253]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_fp_dec_real
</UL>
<BR>[Called By]<UL><LI><a href="#[ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_g
<LI><a href="#[eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_e
<LI><a href="#[e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_f
</UL>

<P><STRONG><a name="[ee]"></a>_printf_fp_hex</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, printf2.o(x$fpl$printf2))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = _printf_fp_hex &rArr; _printf_fp_hex_real &rArr; _printf_fp_infnan &rArr; _printf_post_padding
</UL>
<BR>[Calls]<UL><LI><a href="#[256]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_fp_hex_real
</UL>
<BR>[Called By]<UL><LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_a
</UL>

<P><STRONG><a name="[393]"></a>__fpl_return_NaN</STRONG> (Thumb, 100 bytes, Stack size 0 bytes, retnan.o(x$fpl$retnan))
<BR><BR>[Calls]<UL><LI><a href="#[399]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_cmpreturn
</UL>
<BR>[Called By]<UL><LI><a href="#[392]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_dcheck_NaN1
</UL>

<P><STRONG><a name="[315]"></a>__ARM_scalbn</STRONG> (Thumb, 92 bytes, Stack size 0 bytes, scalbn.o(x$fpl$scalbn))
<BR><BR>[Calls]<UL><LI><a href="#[392]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_dcheck_NaN1
</UL>
<BR>[Called By]<UL><LI><a href="#[314]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__mathlib_dbl_underflow
<LI><a href="#[31b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ldexp
<LI><a href="#[317]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;frexp
</UL>

<P><STRONG><a name="[259]"></a>_scanf_real</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, scanf1.o(x$fpl$scanf1))
<BR><BR>[Stack]<UL><LI>Max Depth = 312<LI>Call Chain = _scanf_real &rArr; _scanf_really_real &rArr; _fp_value &rArr; _btod_etento &rArr; _btod_emul &rArr; _e2e
</UL>
<BR>[Calls]<UL><LI><a href="#[25e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_scanf_really_real
</UL>
<BR>[Called By]<UL><LI><a href="#[240]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__vfscanf
</UL>

<P><STRONG><a name="[260]"></a>_scanf_hex_real</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, scanf2.o(x$fpl$scanf2))
<BR><BR>[Stack]<UL><LI>Max Depth = 144<LI>Call Chain = _scanf_hex_real &rArr; _scanf_really_hex_real &rArr; __support_ldexp &rArr; ldexp &rArr; __aeabi_cdcmpeq
</UL>
<BR>[Calls]<UL><LI><a href="#[26f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_scanf_really_hex_real
</UL>
<BR>[Called By]<UL><LI><a href="#[25e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_scanf_really_real
</UL>

<P><STRONG><a name="[25f]"></a>_scanf_infnan</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, scanf2.o(x$fpl$scanf2))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = _scanf_infnan &rArr; _scanf_really_infnan
</UL>
<BR>[Calls]<UL><LI><a href="#[39a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_scanf_really_infnan
</UL>
<BR>[Called By]<UL><LI><a href="#[25e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_scanf_really_real
</UL>

<P><STRONG><a name="[399]"></a>__fpl_cmpreturn</STRONG> (Thumb, 48 bytes, Stack size 0 bytes, trapv.o(x$fpl$trapveneer))
<BR><BR>[Called By]<UL><LI><a href="#[393]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_return_NaN
</UL>

<P><STRONG><a name="[474]"></a>__I$use$fp</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, usenofp.o(x$fpl$usenofp), UNUSED)
<P>
<H3>
Local Symbols
</H3>
<P><STRONG><a name="[d5]"></a>__sti___8_main_cpp</STRONG> (Thumb, 146 bytes, Stack size 40 bytes, main.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 984 + Unknown Stack Size
<LI>Call Chain = __sti___8_main_cpp &rArr; std::ios_base::Init::Init() &rArr; std::basic_ostream&lang;wchar_t, std::char_traits&lang;wchar_t&rang;&rang;::basic_ostream(std::basic_streambuf&lang;wchar_t, std::char_traits&lang;wchar_t&rang;&rang;*) &rArr; std::basic_ios&lang;wchar_t, std::char_traits&lang;wchar_t&rang;&rang;::init(std::basic_streambuf&lang;wchar_t, std::char_traits&lang;wchar_t&rang;&rang;*) &rArr; std::locale::_C_use_facet(const std::locale::id&, bool, int, __rw::__rw_facet_base*(*)(int, const char*, unsigned)) const &rArr; std::locale::_C_make_facet(const std::locale::id&, bool, int, __rw::__rw_facet_base*(*)(int, const char*, unsigned)) const &rArr; __rw::__rw_throw(int, ...) &rArr; std::__rw_exception::_C_vformat(int, std::__va_list) &rArr; __rw::__rw_vfmatstr(char*, unsigned, int, std::__va_list) &rArr; std::locale::locale() &rArr; std::locale::_C_init() &rArr; __rw::__rw_locale_imp::__rw_locale_imp(const char*, unsigned, unsigned) &rArr; __aeabi_vec_new_cookie &rArr; __cxa_vec_new &rArr; __ARM_array_new_general &rArr; __cxa_rethrow &rArr; _Unwind_RaiseException &rArr; __ARM_Unwind_RaiseException &rArr; malloc &rArr; _malloc_internal &rArr; __Heap_Full &rArr; __Heap_ProvideMemory &rArr; _free_internal &rArr; _mutex_release
</UL>
<BR>[Calls]<UL><LI><a href="#[154]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::ios_base::Init::Init()
<LI><a href="#[15c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;::_C_null()
<LI><a href="#[156]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::allocator&lang;int&rang;::allocator()
<LI><a href="#[157]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::allocator&lang;int&rang;::allocator(const std::allocator&lang;int&rang;&)
<LI><a href="#[15a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::allocator&lang;char&rang;::allocator()
<LI><a href="#[15b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::allocator&lang;char&rang;::allocator(const std::allocator&lang;char&rang;&)
<LI><a href="#[158]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::allocator&lang;std::pair&lang;const int, int&rang;&rang;::allocator()
<LI><a href="#[159]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rb_tree&lang;int, std::pair&lang;const int, int&rang;, __rw::__select1st&lang;std::pair&lang;const int, int&rang;, int&rang;, std::less&lang;int&rang;, std::allocator&lang;std::pair&lang;const int, int&rang;&rang;&rang;::__rb_tree(const std::less&lang;int&rang;&, bool, const std::allocator&lang;std::pair&lang;const int, int&rang;&rang;&)
<LI><a href="#[155]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_atexit
</UL>
<BR>[Address Reference Count : 1]<UL><LI> main.o(.init_array)
</UL>
<P><STRONG><a name="[171]"></a>rt_ms2tick</STRONG> (Thumb, 50 bytes, Stack size 0 bytes, rt_cmsis.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[1a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sysMailAlloc
<LI><a href="#[19f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;svcMessagePut
<LI><a href="#[191]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;svcSemaphoreWait
<LI><a href="#[18d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;svcMutexWait
<LI><a href="#[184]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;svcSignalWait
<LI><a href="#[17e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;svcMessageGet
<LI><a href="#[175]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;svcTimerStart
<LI><a href="#[170]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;svcDelay
</UL>

<P><STRONG><a name="[177]"></a>rt_timer_insert</STRONG> (Thumb, 50 bytes, Stack size 12 bytes, rt_cmsis.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = rt_timer_insert
</UL>
<BR>[Called By]<UL><LI><a href="#[17c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sysTimerTick
<LI><a href="#[175]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;svcTimerStart
</UL>

<P><STRONG><a name="[176]"></a>rt_timer_remove</STRONG> (Thumb, 56 bytes, Stack size 0 bytes, rt_cmsis.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[178]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;svcTimerStop
<LI><a href="#[175]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;svcTimerStart
</UL>

<P><STRONG><a name="[179]"></a>isrMessagePut</STRONG> (Thumb, 44 bytes, Stack size 16 bytes, rt_cmsis.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[17a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_mbx_check
<LI><a href="#[17b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;isr_mbx_send
</UL>
<BR>[Called By]<UL><LI><a href="#[1a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osMessagePut
<LI><a href="#[17c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sysTimerTick
</UL>

<P><STRONG><a name="[15f]"></a>rt_tid2ptcb</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, rt_cmsis.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[18a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;svcSignalGet
<LI><a href="#[188]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;svcSignalClear
<LI><a href="#[186]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;svcSignalSet
<LI><a href="#[16f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;svcThreadGetPriority
<LI><a href="#[16d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;svcThreadSetPriority
<LI><a href="#[15e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;svcThreadTerminate
<LI><a href="#[150]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osSignalSet
</UL>

<P><STRONG><a name="[174]"></a>rt_id2obj</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, rt_cmsis.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[195]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osSemaphoreRelease
<LI><a href="#[193]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;svcSemaphoreRelease
<LI><a href="#[191]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;svcSemaphoreWait
<LI><a href="#[18e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;svcMutexRelease
<LI><a href="#[18d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;svcMutexWait
<LI><a href="#[178]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;svcTimerStop
<LI><a href="#[175]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;svcTimerStart
<LI><a href="#[173]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;svcTimerCall
</UL>

<P><STRONG><a name="[19a]"></a>rt_clr_box</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, rt_cmsis.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[1a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sysMailAlloc
<LI><a href="#[199]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sysPoolAlloc
</UL>

<P><STRONG><a name="[1b2]"></a>rt_init_context</STRONG> (Thumb, 60 bytes, Stack size 16 bytes, rt_task.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = rt_init_context &rArr; rt_init_stack
</UL>
<BR>[Calls]<UL><LI><a href="#[1b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_init_stack
<LI><a href="#[1e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_alloc_box
</UL>
<BR>[Called By]<UL><LI><a href="#[164]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_tsk_create
<LI><a href="#[16a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_sys_init
</UL>

<P><STRONG><a name="[d6]"></a>__sti___8_char_cpp</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, char.o(i.__sti___8_char_cpp))
<BR>[Address Reference Count : 1]<UL><LI> char.o(.init_array)
</UL>
<P><STRONG><a name="[3c]"></a>&lang;Func5&rang;</STRONG> (Thumb, 20 bytes, Stack size 16 bytes, locale.o(i.<Func5>))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = &lang;Func5&rang; &rArr; std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;::basic_string(const std::allocator&lang;char&rang;&)
</UL>
<BR>[Calls]<UL><LI><a href="#[15a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::allocator&lang;char&rang;::allocator()
<LI><a href="#[278]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;::basic_string(const std::allocator&lang;char&rang;&)
</UL>
<BR>[Address Reference Count : 3]<UL><LI> locale.o(i._ZNSt6localeC1ERKS_PKci)
<LI> locale.o(i._ZN4__rw15__rw_locale_impC1EPKcjj)
<LI> locale.o(i._ZN4__rw15__rw_locale_impC1ERKS0_PKcj)
</UL>
<P><STRONG><a name="[d7]"></a>__sti___10_locale_cpp</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, locale.o(i.__sti___10_locale_cpp))
<BR>[Address Reference Count : 1]<UL><LI> locale.o(.init_array)
</UL>
<P><STRONG><a name="[28f]"></a>__rw::__rw_vfmatstr(char*, unsigned, const char*, std::__va_list)</STRONG> (Thumb, 88 bytes, Stack size 24 bytes, rwstdexcept.o(i._ZN4__rw13__rw_vfmatstrEPcjPKcSt9__va_list))
<BR><BR>[Stack]<UL><LI>Max Depth = 152 + Unknown Stack Size
<LI>Call Chain = __rw::__rw_vfmatstr(char*, unsigned, const char*, std::__va_list) &rArr; vsnprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[290]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;operator new[] (unsigned)
<LI><a href="#[1f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vsnprintf
<LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;operator delete[] (void*)
</UL>
<BR>[Called By]<UL><LI><a href="#[287]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__rw_exception::_C_vformat(int, std::__va_list)
<LI><a href="#[2e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__rw_exception::_C_vformat(const char*, std::__va_list)
<LI><a href="#[291]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rw_vfmatstr(char*, unsigned, int, std::__va_list)
</UL>

<P><STRONG><a name="[291]"></a>__rw::__rw_vfmatstr(char*, unsigned, int, std::__va_list)</STRONG> (Thumb, 330 bytes, Stack size 88 bytes, rwstdexcept.o(i._ZN4__rw13__rw_vfmatstrEPcjiSt9__va_list))
<BR><BR>[Stack]<UL><LI>Max Depth = 712 + Unknown Stack Size
<LI>Call Chain = __rw::__rw_vfmatstr(char*, unsigned, int, std::__va_list) &rArr; std::locale::locale() &rArr; std::locale::_C_init() &rArr; __rw::__rw_locale_imp::__rw_locale_imp(const char*, unsigned, unsigned) &rArr; __aeabi_vec_new_cookie &rArr; __cxa_vec_new &rArr; __ARM_array_new_general &rArr; __cxa_rethrow &rArr; _Unwind_RaiseException &rArr; __ARM_Unwind_RaiseException &rArr; malloc &rArr; _malloc_internal &rArr; __Heap_Full &rArr; __Heap_ProvideMemory &rArr; _free_internal &rArr; _mutex_release
</UL>
<BR>[Calls]<UL><LI><a href="#[295]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::locale::locale()
<LI><a href="#[292]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strrchr
<LI><a href="#[28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;::~basic_string()
<LI><a href="#[294]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;::basic_string(const std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;&)
<LI><a href="#[15a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::allocator&lang;char&rang;::allocator()
<LI><a href="#[296]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rw_locale_vector&lang;std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;&rang;::~__rw_locale_vector()
<LI><a href="#[285]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;operator new(unsigned, void*)
<LI><a href="#[1fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sscanf
<LI><a href="#[282]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;operator delete (void*)
<LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;operator delete[] (void*)
<LI><a href="#[28f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rw_vfmatstr(char*, unsigned, const char*, std::__va_list)
<LI><a href="#[293]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;::basic_string(const char*, const std::allocator&lang;char&rang;&)
</UL>
<BR>[Called By]<UL><LI><a href="#[287]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__rw_exception::_C_vformat(int, std::__va_list)
</UL>

<P><STRONG><a name="[2a]"></a>armcpp_exception_cleanup(_Unwind_Reason_Code, _Unwind_Control_Block*)</STRONG> (Thumb, 64 bytes, Stack size 24 bytes, arm_exceptions_throw.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 472 + Unknown Stack Size
<LI>Call Chain = armcpp_exception_cleanup(_Unwind_Reason_Code, _Unwind_Control_Block*) &rArr; __cxa_rethrow &rArr; _Unwind_RaiseException &rArr; __ARM_Unwind_RaiseException &rArr; malloc &rArr; _malloc_internal &rArr; __Heap_Full &rArr; __Heap_ProvideMemory &rArr; _free_internal &rArr; _mutex_release
</UL>
<BR>[Calls]<UL><LI><a href="#[1dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxa_get_globals
<LI><a href="#[1e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxa_free_exception
<LI><a href="#[1e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxa_rethrow
<LI><a href="#[145]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxa_begin_catch
</UL>
<BR>[Address Reference Count : 1]<UL><LI> arm_exceptions_throw.o(.text)
</UL>
<P><STRONG><a name="[1f4]"></a>Heap1_SizeAdjust</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, h1_alloc_mt.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[1f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_malloc_internal
</UL>

<P><STRONG><a name="[2f]"></a>EIT_comparator</STRONG> (Thumb, 60 bytes, Stack size 8 bytes, unwinder.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = EIT_comparator
</UL>
<BR>[Address Reference Count : 1]<UL><LI> unwinder.o(.text)
</UL>
<P><STRONG><a name="[220]"></a>find_and_expand_eit_entry</STRONG> (Thumb, 172 bytes, Stack size 24 bytes, unwinder.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = find_and_expand_eit_entry &rArr; bsearch
</UL>
<BR>[Calls]<UL><LI><a href="#[1e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Unwind_Activity
<LI><a href="#[221]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsearch
</UL>
<BR>[Called By]<UL><LI><a href="#[222]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_unwind_next_frame
<LI><a href="#[12a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_Unwind_RaiseException
</UL>

<P><STRONG><a name="[226]"></a>next_unwind_byte</STRONG> (Thumb, 48 bytes, Stack size 0 bytes, unwind_prcommon.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[1db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_unwind_cpp_prcommon
</UL>

<P><STRONG><a name="[4f]"></a>tbc_downcast(void*, const std::type_info*, a_base_class_traversal_block*, __cxxabiv1::__base_class_type_info*)</STRONG> (Thumb, 70 bytes, Stack size 24 bytes, rtti.o(i._Z12tbc_downcastPvPKSt9type_infoP28a_base_class_traversal_blockPN10__cxxabiv122__base_class_type_infoE))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = tbc_downcast(void*, const std::type_info*, a_base_class_traversal_block*, __cxxabiv1::__base_class_type_info*) &rArr; std::type_info::operator ==(const std::type_info&) const
</UL>
<BR>[Calls]<UL><LI><a href="#[1eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::type_info::operator ==(const std::type_info&) const
</UL>
<BR>[Address Reference Count : 1]<UL><LI> rtti.o(i.__dynamic_cast)
</UL>
<P><STRONG><a name="[50]"></a>tbc_post_downcast(void*, const std::type_info*, a_base_class_traversal_block*, __cxxabiv1::__base_class_type_info*)</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, rtti.o(i._Z17tbc_post_downcastPvPKSt9type_infoP28a_base_class_traversal_blockPN10__cxxabiv122__base_class_type_infoE))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = tbc_post_downcast(void*, const std::type_info*, a_base_class_traversal_block*, __cxxabiv1::__base_class_type_info*) &rArr; std::type_info::operator ==(const std::type_info&) const
</UL>
<BR>[Calls]<UL><LI><a href="#[1eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::type_info::operator ==(const std::type_info&) const
</UL>
<BR>[Address Reference Count : 1]<UL><LI> rtti.o(i.__dynamic_cast)
</UL>
<P><STRONG><a name="[27b]"></a>traverse_base_classes(void*, const std::type_info*, a_base_class_traversal_block*, __cxxabiv1::__base_class_type_info*)</STRONG> (Thumb, 158 bytes, Stack size 24 bytes, rtti.o(i._Z21traverse_base_classesPvPKSt9type_infoP28a_base_class_traversal_blockPN10__cxxabiv122__base_class_type_infoE), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[1eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::type_info::operator ==(const std::type_info&) const
<LI><a href="#[27b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;traverse_base_classes(void*, const std::type_info*, a_base_class_traversal_block*, __cxxabiv1::__base_class_type_info*)
<LI><a href="#[1ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_get_typeid
</UL>
<BR>[Called By]<UL><LI><a href="#[313]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__dynamic_cast
<LI><a href="#[27b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;traverse_base_classes(void*, const std::type_info*, a_base_class_traversal_block*, __cxxabiv1::__base_class_type_info*)
</UL>

<P><STRONG><a name="[27c]"></a>find_base_class_at_addr(void*, void*, const std::type_info*, const std::type_info*, int*)</STRONG> (Thumb, 184 bytes, Stack size 56 bytes, rtti.o(i._Z23find_base_class_at_addrPvS_PKSt9type_infoS2_Pi), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[1eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::type_info::operator ==(const std::type_info&) const
<LI><a href="#[27c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;find_base_class_at_addr(void*, void*, const std::type_info*, const std::type_info*, int*)
<LI><a href="#[1ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_get_typeid
</UL>
<BR>[Called By]<UL><LI><a href="#[313]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__dynamic_cast
<LI><a href="#[27c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;find_base_class_at_addr(void*, void*, const std::type_info*, const std::type_info*, int*)
</UL>

<P><STRONG><a name="[27d]"></a>derived_to_base_conversion_r(void*, void**, const std::type_info*, const std::type_info*, unsigned, int*, int, const std::type_info**, a_result_virtuality*, int*)</STRONG> (Thumb, 480 bytes, Stack size 96 bytes, rtti.o(i._Z28derived_to_base_conversion_rPvPS_PKSt9type_infoS3_jPiiPS3_P19a_result_virtualityS4_))
<BR><BR>[Stack]<UL><LI>Max Depth = 568 + Unknown Stack Size
 + In Cycle
<LI>Call Chain = derived_to_base_conversion_r(void*, void**, const std::type_info*, const std::type_info*, unsigned, int*, int, const std::type_info**, a_result_virtuality*, int*) &rArr;  derived_to_base_conversion_r(void*, void**, const std::type_info*, const std::type_info*, unsigned, int*, int, const std::type_info**, a_result_virtuality*, int*) (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[1eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::type_info::operator ==(const std::type_info&) const
<LI><a href="#[27d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;derived_to_base_conversion_r(void*, void**, const std::type_info*, const std::type_info*, unsigned, int*, int, const std::type_info**, a_result_virtuality*, int*)
<LI><a href="#[1ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_get_typeid
</UL>
<BR>[Called By]<UL><LI><a href="#[1ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__derived_to_base_conversion
<LI><a href="#[27d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;derived_to_base_conversion_r(void*, void**, const std::type_info*, const std::type_info*, unsigned, int*, int, const std::type_info**, a_result_virtuality*, int*)
</UL>

<P><STRONG><a name="[36]"></a>__default_terminate_handler()</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, arm_exceptions_globs.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40 + Unknown Stack Size
<LI>Call Chain = __default_terminate_handler() &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[217]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;abort
</UL>
<BR>[Address Reference Count : 1]<UL><LI> arm_exceptions_globs.o(.text)
</UL>
<P><STRONG><a name="[37]"></a>_printf_input_char</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, _printf_char_common.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> _printf_char_common.o(.text)
</UL>
<P><STRONG><a name="[38]"></a>_scanf_char_input</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, scanf_char.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> scanf_char.o(.text)
</UL>
<P><STRONG><a name="[246]"></a>_freopen_locked</STRONG> (Thumb, 174 bytes, Stack size 32 bytes, fopen_locked.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 136<LI>Call Chain = _freopen_locked &rArr; _fclose_internal &rArr; _fflush &rArr; _writebuf &rArr; _sys_write
</UL>
<BR>[Calls]<UL><LI><a href="#[130]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_sys_open
<LI><a href="#[df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_mutex_release
<LI><a href="#[de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_mutex_acquire
<LI><a href="#[208]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fclose_internal
<LI><a href="#[1d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fseek
</UL>
<BR>[Called By]<UL><LI><a href="#[247]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fopen$locked
<LI><a href="#[210]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;freopen
</UL>

<P><STRONG><a name="[248]"></a>_locale_name</STRONG> (Thumb, 154 bytes, Stack size 16 bytes, locale_r.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = _locale_name &rArr; __rt_locale
</UL>
<BR>[Calls]<UL><LI><a href="#[10c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_locale
</UL>
<BR>[Called By]<UL><LI><a href="#[214]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_setlocale_r
<LI><a href="#[249]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_set_locale_byname
</UL>

<P><STRONG><a name="[249]"></a>_set_locale_byname</STRONG> (Thumb, 154 bytes, Stack size 24 bytes, locale_r.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = _set_locale_byname &rArr; _locale_name &rArr; __rt_locale
</UL>
<BR>[Calls]<UL><LI><a href="#[10c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_locale
<LI><a href="#[113]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_get_lc_numeric
<LI><a href="#[111]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_get_lc_monetary
<LI><a href="#[10e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_get_lc_collate
<LI><a href="#[2b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_get_lc_ctype
<LI><a href="#[248]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_locale_name
</UL>
<BR>[Called By]<UL><LI><a href="#[214]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_setlocale_r
</UL>

<P><STRONG><a name="[d8]"></a>__sti___10_rwcats_cpp</STRONG> (Thumb, 42 bytes, Stack size 16 bytes, rwcats.o(i.__sti___10_rwcats_cpp))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = __sti___10_rwcats_cpp &rArr; __aeabi_atexit &rArr; malloc &rArr; _malloc_internal &rArr; __Heap_Full &rArr; __Heap_ProvideMemory &rArr; _free_internal &rArr; _mutex_release
</UL>
<BR>[Calls]<UL><LI><a href="#[290]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;operator new[] (unsigned)
<LI><a href="#[155]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_atexit
</UL>
<BR>[Address Reference Count : 1]<UL><LI> rwcats.o(.init_array)
</UL>
<P><STRONG><a name="[24e]"></a>_fp_digits</STRONG> (Thumb, 428 bytes, Stack size 96 bytes, _printf_fp_dec.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 216<LI>Call Chain = _fp_digits &rArr; _btod_etento &rArr; _btod_emul &rArr; _e2e
</UL>
<BR>[Calls]<UL><LI><a href="#[252]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_btod_emul
<LI><a href="#[251]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_btod_ediv
<LI><a href="#[250]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_btod_d2e
<LI><a href="#[24f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_btod_etento
<LI><a href="#[23a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ll_udiv10
</UL>
<BR>[Called By]<UL><LI><a href="#[253]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_fp_dec_real
</UL>

<P><STRONG><a name="[25b]"></a>_fp_value</STRONG> (Thumb, 506 bytes, Stack size 72 bytes, scanf_fp.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 192<LI>Call Chain = _fp_value &rArr; _btod_etento &rArr; _btod_emul &rArr; _e2e
</UL>
<BR>[Calls]<UL><LI><a href="#[204]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_errno_addr
<LI><a href="#[25c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_btod_emuld
<LI><a href="#[25d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_btod_edivd
<LI><a href="#[24f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_btod_etento
</UL>
<BR>[Called By]<UL><LI><a href="#[25e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_scanf_really_real
</UL>
<P>
<H3>
Undefined Global Symbols
</H3><HR></body></html>
